import{V as C,_ as u,r as y,c as E,b as F,w as D,d as s,a as d,o as A,e as n}from"./app.2a831956.js";const{defineComponent:B}=C,m=B({name:"component-doc",components:{"render-demo-0":function(){const{resolveComponent:a,createVNode:l,openBlock:o,createElementBlock:p}=C,e={style:{height:"600px",width:"680px"}};function t(r,v){const i=a("rack");return o(),p("div",e,[l(i)])}return{render:t,...{}}}()}}),M=JSON.parse('{"title":"\u547C\u5438\u706F","description":"","frontmatter":{},"headers":[],"relativePath":"components/map.md","lastUpdated":1692236508000}'),f=s("h1",{id:"\u547C\u5438\u706F",tabindex:"-1"},"\u547C\u5438\u706F",-1),h=s("h2",{id:"\u5982\u4F55\u5B9E\u73B0\u547C\u5438\u706F\u7684\u52A8\u6548",tabindex:"-1"},"\u5982\u4F55\u5B9E\u73B0\u547C\u5438\u706F\u7684\u52A8\u6548",-1),_=s("blockquote",null,[s("p",null,"\u6548\u679C\u5C55\u793A\u4E3A\u4E0B\u9762demo\u4E2D\uFF0C\u670D\u52A1\u5668\u5DE6\u4FA7\u95EA\u7740\u7684\u5927\u706F")],-1),g=s("div",{class:"language-vue"},[s("pre",{"v-pre":"",class:"shiki vp-code-dark"},[s("code",null,[s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C9D1D9"}},"<"),s("span",{style:{color:"#7EE787"}},"template"),s("span",{style:{color:"#C9D1D9"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C9D1D9"}},"    <"),s("span",{style:{color:"#7EE787"}},"div"),s("span",{style:{color:"#C9D1D9"}}," "),s("span",{style:{color:"#79C0FF"}},"style"),s("span",{style:{color:"#C9D1D9"}},"="),s("span",{style:{color:"#A5D6FF"}},'"height: 600px;width: 680px;"'),s("span",{style:{color:"#C9D1D9"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C9D1D9"}},"        <"),s("span",{style:{color:"#7EE787"}},"rack"),s("span",{style:{color:"#C9D1D9"}}," />")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C9D1D9"}},"    </"),s("span",{style:{color:"#7EE787"}},"div"),s("span",{style:{color:"#C9D1D9"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C9D1D9"}},"</"),s("span",{style:{color:"#7EE787"}},"template"),s("span",{style:{color:"#C9D1D9"}},">")]),n(`
`),s("span",{class:"line"})])]),s("pre",{"v-pre":"",class:"shiki vp-code-light"},[s("code",null,[s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292F"}},"<"),s("span",{style:{color:"#116329"}},"template"),s("span",{style:{color:"#24292F"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292F"}},"    <"),s("span",{style:{color:"#116329"}},"div"),s("span",{style:{color:"#24292F"}}," "),s("span",{style:{color:"#0550AE"}},"style"),s("span",{style:{color:"#24292F"}},"="),s("span",{style:{color:"#0A3069"}},'"height: 600px;width: 680px;"'),s("span",{style:{color:"#24292F"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292F"}},"        <"),s("span",{style:{color:"#116329"}},"rack"),s("span",{style:{color:"#24292F"}}," />")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292F"}},"    </"),s("span",{style:{color:"#116329"}},"div"),s("span",{style:{color:"#24292F"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292F"}},"</"),s("span",{style:{color:"#116329"}},"template"),s("span",{style:{color:"#24292F"}},">")]),n(`
`),s("span",{class:"line"})])])],-1),b=d(`<div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> bulbOffset </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// MIN\u706F\u662F\u6697\u7684\u989C\u8272 MAX\u8868\u793A\u53D1\u7EFF\u7684\u989C\u8272</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">MIN</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">120</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">/</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">255</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">50</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">/</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">255</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">MAX</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">20</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">/</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">255</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">60</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">/</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">255</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">animate</span><span style="color:#C9D1D9;"> () {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> offset </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> bulbOffset;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> temp </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> offset;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">	</span><span style="color:#8B949E;">// bulbs\u662FMesh</span></span>
<span class="line"><span style="color:#C9D1D9;">    bulbs.</span><span style="color:#D2A8FF;">forEach</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">item</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">index</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> material </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> item.material;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> { r, g, b } </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> material.color;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">now</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [r, g, b];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">getColor</span><span style="color:#C9D1D9;"> (</span><span style="color:#FFA657;">index</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> now[index] </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> (</span><span style="color:#79C0FF;">MAX</span><span style="color:#C9D1D9;">[index] </span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">MIN</span><span style="color:#C9D1D9;">[index]) </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0.04</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> offset;</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        material.color.</span><span style="color:#D2A8FF;">setRGB</span><span style="color:#C9D1D9;">(</span><span style="color:#D2A8FF;">getColor</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">), </span><span style="color:#D2A8FF;">getColor</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">), </span><span style="color:#D2A8FF;">getColor</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (index </span><span style="color:#FF7B72;">===</span><span style="color:#C9D1D9;"> bulbs.</span><span style="color:#79C0FF;">length</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">            temp </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">getColor</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">MAX</span><span style="color:#C9D1D9;">[</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">?</span><span style="color:#C9D1D9;"> offset </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> (</span><span style="color:#D2A8FF;">getColor</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">MIN</span><span style="color:#C9D1D9;">[</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">?</span><span style="color:#C9D1D9;"> offset </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> offset);</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">    });</span></span>
<span class="line"><span style="color:#C9D1D9;">    bulbOffset </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> temp;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#CF222E;">let</span><span style="color:#24292F;"> bulbOffset </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">1</span><span style="color:#24292F;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E7781;">// MIN\u706F\u662F\u6697\u7684\u989C\u8272 MAX\u8868\u793A\u53D1\u7EFF\u7684\u989C\u8272</span></span>
<span class="line"><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">MIN</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> [</span><span style="color:#0550AE;">0</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">120</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">/</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">255</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">50</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">/</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">255</span><span style="color:#24292F;">];</span></span>
<span class="line"><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">MAX</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> [</span><span style="color:#0550AE;">20</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">/</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">255</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">1</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">60</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">/</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">255</span><span style="color:#24292F;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CF222E;">function</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">animate</span><span style="color:#24292F;"> () {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> offset </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> bulbOffset;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> temp </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> offset;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">	</span><span style="color:#6E7781;">// bulbs\u662FMesh</span></span>
<span class="line"><span style="color:#24292F;">    bulbs.</span><span style="color:#8250DF;">forEach</span><span style="color:#24292F;">((</span><span style="color:#953800;">item</span><span style="color:#24292F;">, </span><span style="color:#953800;">index</span><span style="color:#24292F;">) </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> material </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> item.material;</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> { r, g, b } </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> material.color;</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">now</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> [r, g, b];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">function</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">getColor</span><span style="color:#24292F;"> (</span><span style="color:#953800;">index</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> now[index] </span><span style="color:#CF222E;">+</span><span style="color:#24292F;"> (</span><span style="color:#0550AE;">MAX</span><span style="color:#24292F;">[index] </span><span style="color:#CF222E;">-</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">MIN</span><span style="color:#24292F;">[index]) </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">0.04</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> offset;</span></span>
<span class="line"><span style="color:#24292F;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">        material.color.</span><span style="color:#8250DF;">setRGB</span><span style="color:#24292F;">(</span><span style="color:#8250DF;">getColor</span><span style="color:#24292F;">(</span><span style="color:#0550AE;">0</span><span style="color:#24292F;">), </span><span style="color:#8250DF;">getColor</span><span style="color:#24292F;">(</span><span style="color:#0550AE;">1</span><span style="color:#24292F;">), </span><span style="color:#8250DF;">getColor</span><span style="color:#24292F;">(</span><span style="color:#0550AE;">2</span><span style="color:#24292F;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (index </span><span style="color:#CF222E;">===</span><span style="color:#24292F;"> bulbs.</span><span style="color:#0550AE;">length</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">-</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">1</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">            temp </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">getColor</span><span style="color:#24292F;">(</span><span style="color:#0550AE;">0</span><span style="color:#24292F;">) </span><span style="color:#CF222E;">&gt;</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">MAX</span><span style="color:#24292F;">[</span><span style="color:#0550AE;">0</span><span style="color:#24292F;">] </span><span style="color:#CF222E;">?</span><span style="color:#24292F;"> offset </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">-</span><span style="color:#0550AE;">1</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> (</span><span style="color:#8250DF;">getColor</span><span style="color:#24292F;">(</span><span style="color:#0550AE;">0</span><span style="color:#24292F;">) </span><span style="color:#CF222E;">&lt;</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">MIN</span><span style="color:#24292F;">[</span><span style="color:#0550AE;">0</span><span style="color:#24292F;">] </span><span style="color:#CF222E;">?</span><span style="color:#24292F;"> offset </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">-</span><span style="color:#0550AE;">1</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> offset);</span></span>
<span class="line"><span style="color:#24292F;">        }</span></span>
<span class="line"><span style="color:#24292F;">    });</span></span>
<span class="line"><span style="color:#24292F;">    bulbOffset </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> temp;</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span></code></pre></div>`,1);function x(a,l,o,p,e,t){const c=y("render-demo-0"),r=y("demo");return A(),E("div",null,[f,h,_,F(r,{customClass:"undefined",sourceCode:`
<template>
    <div style="height: 600px;width: 680px;">
        <rack />
    </div>
</template>
`},{highlight:D(()=>[g]),default:D(()=>[F(c)]),_:1}),b])}const N=u(m,[["render",x]]);export{M as __pageData,N as default};
