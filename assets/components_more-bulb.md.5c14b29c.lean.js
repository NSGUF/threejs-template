import{V as C,_ as u,r as y,c as E,b as F,w as D,d as s,a as B,o as A,e as n}from"./app.2a831956.js";const{defineComponent:m}=C,d=m({name:"component-doc",components:{"render-demo-0":function(){const{resolveComponent:a,createVNode:l,openBlock:p,createElementBlock:o}=C,e={style:{height:"600px",width:"680px"}};function t(r,x){const i=a("rack");return p(),o("div",e,[l(i)])}return{render:t,...{}}}()}}),g=JSON.parse('{"title":"\u968F\u673A\u751F\u6210\u591A\u4E2A\u547C\u5438\u706F","description":"","frontmatter":{},"headers":[],"relativePath":"components/more-bulb.md","lastUpdated":1692236508000}'),h=s("h1",{id:"\u968F\u673A\u751F\u6210\u591A\u4E2A\u547C\u5438\u706F",tabindex:"-1"},"\u968F\u673A\u751F\u6210\u591A\u4E2A\u547C\u5438\u706F",-1),_=s("blockquote",null,[s("p",null,"\u6548\u679C\u5C55\u793A\u4E3A\u4E0B\u9762demo\u4E2D\uFF0C\u670D\u52A1\u5668\u53F3\u4FA7\u95EA\u7740\u7684\u5C0F\u706F\uFF0C\u662F\u5728\u67D0\u4E2A\u533A\u57DF\u5185\u968F\u673A\u751F\u6210\u70B9\uFF1B")],-1),f=s("div",{class:"language-vue"},[s("pre",{"v-pre":"",class:"shiki vp-code-dark"},[s("code",null,[s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C9D1D9"}},"<"),s("span",{style:{color:"#7EE787"}},"template"),s("span",{style:{color:"#C9D1D9"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C9D1D9"}},"    <"),s("span",{style:{color:"#7EE787"}},"div"),s("span",{style:{color:"#C9D1D9"}}," "),s("span",{style:{color:"#79C0FF"}},"style"),s("span",{style:{color:"#C9D1D9"}},"="),s("span",{style:{color:"#A5D6FF"}},'"height: 600px;width: 680px;"'),s("span",{style:{color:"#C9D1D9"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C9D1D9"}},"        <"),s("span",{style:{color:"#7EE787"}},"rack"),s("span",{style:{color:"#C9D1D9"}}," />")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C9D1D9"}},"    </"),s("span",{style:{color:"#7EE787"}},"div"),s("span",{style:{color:"#C9D1D9"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C9D1D9"}},"</"),s("span",{style:{color:"#7EE787"}},"template"),s("span",{style:{color:"#C9D1D9"}},">")]),n(`
`),s("span",{class:"line"})])]),s("pre",{"v-pre":"",class:"shiki vp-code-light"},[s("code",null,[s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292F"}},"<"),s("span",{style:{color:"#116329"}},"template"),s("span",{style:{color:"#24292F"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292F"}},"    <"),s("span",{style:{color:"#116329"}},"div"),s("span",{style:{color:"#24292F"}}," "),s("span",{style:{color:"#0550AE"}},"style"),s("span",{style:{color:"#24292F"}},"="),s("span",{style:{color:"#0A3069"}},'"height: 600px;width: 680px;"'),s("span",{style:{color:"#24292F"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292F"}},"        <"),s("span",{style:{color:"#116329"}},"rack"),s("span",{style:{color:"#24292F"}}," />")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292F"}},"    </"),s("span",{style:{color:"#116329"}},"div"),s("span",{style:{color:"#24292F"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292F"}},"</"),s("span",{style:{color:"#116329"}},"template"),s("span",{style:{color:"#24292F"}},">")]),n(`
`),s("span",{class:"line"})])])],-1),k=B(`<div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#8B949E;">/**</span></span>
<span class="line"><span style="color:#8B949E;"> * \u521B\u5EFA\u670D\u52A1\u5668\u4E0A\u7684\u5C0F\u547C\u5438\u706F</span></span>
<span class="line"><span style="color:#8B949E;"> * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#C9D1D9;">h</span></span>
<span class="line"><span style="color:#8B949E;"> * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#C9D1D9;">index</span></span>
<span class="line"><span style="color:#8B949E;"> * </span><span style="color:#FF7B72;">@return</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">{Points&lt;BufferGeometry, PointsMaterial&gt;}</span></span>
<span class="line"><span style="color:#8B949E;"> */</span></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">createLittleBulb</span><span style="color:#C9D1D9;"> (</span><span style="color:#FFA657;">h</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">index</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// \u6A2A\u5411 \u7EB5\u5411\u7684\u547C\u5438\u706F\u4E2A\u6570</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> horizontalNum </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">8</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> portraitNum </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">rw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">RACK_WIDTH</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">rl</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">RACK_LENGTH</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">geometry</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">THREE</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">BufferGeometry</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">numPoints</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> horizontalNum </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> portraitNum;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">positions</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Float32Array</span><span style="color:#C9D1D9;">(numPoints </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> k </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;"> (</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> i </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; i </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> horizontalNum; i</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;"> (</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> j </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; j </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> portraitNum; j</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (Math.</span><span style="color:#D2A8FF;">random</span><span style="color:#C9D1D9;">() </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0.5</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">// 26\u548C6\u5206\u522B\u8868\u793A\u6BCF\u4E2A\u706F\u7684\u6A2A\u5411\u95F4\u9694\u548C\u7EB5\u5411\u95F4\u9694</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">u</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> i </span><span style="color:#FF7B72;">/</span><span style="color:#C9D1D9;"> horizontalNum </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">26</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">v</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> j </span><span style="color:#FF7B72;">/</span><span style="color:#C9D1D9;"> portraitNum </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">x</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;">rl </span><span style="color:#FF7B72;">/</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">9</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> u;</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">y</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> h </span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;"> v;</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">z</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> rw </span><span style="color:#FF7B72;">/</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0.4</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">/</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">                positions[</span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> k] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> x;</span></span>
<span class="line"><span style="color:#C9D1D9;">                positions[</span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> k </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> y;</span></span>
<span class="line"><span style="color:#C9D1D9;">                positions[</span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> k </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> z;</span></span>
<span class="line"><span style="color:#C9D1D9;">                k</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">            }</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    geometry.</span><span style="color:#D2A8FF;">setAttribute</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;position&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">THREE</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">BufferAttribute</span><span style="color:#C9D1D9;">(positions, </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    geometry.name </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">SERVER_NAME</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> index;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">material</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">THREE</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">PointsMaterial</span><span style="color:#C9D1D9;">({</span></span>
<span class="line"><span style="color:#C9D1D9;">        size: </span><span style="color:#79C0FF;">1.5</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        color: </span><span style="color:#79C0FF;">THREE_JS_COLOR</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">DEFAULT_LIGHT</span></span>
<span class="line"><span style="color:#C9D1D9;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">THREE</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">Points</span><span style="color:#C9D1D9;">(geometry, material);</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#6E7781;">/**</span></span>
<span class="line"><span style="color:#6E7781;"> * \u521B\u5EFA\u670D\u52A1\u5668\u4E0A\u7684\u5C0F\u547C\u5438\u706F</span></span>
<span class="line"><span style="color:#6E7781;"> * </span><span style="color:#CF222E;">@param</span><span style="color:#6E7781;"> </span><span style="color:#24292F;">h</span></span>
<span class="line"><span style="color:#6E7781;"> * </span><span style="color:#CF222E;">@param</span><span style="color:#6E7781;"> </span><span style="color:#24292F;">index</span></span>
<span class="line"><span style="color:#6E7781;"> * </span><span style="color:#CF222E;">@return</span><span style="color:#6E7781;"> </span><span style="color:#953800;">{Points&lt;BufferGeometry, PointsMaterial&gt;}</span></span>
<span class="line"><span style="color:#6E7781;"> */</span></span>
<span class="line"><span style="color:#CF222E;">function</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">createLittleBulb</span><span style="color:#24292F;"> (</span><span style="color:#953800;">h</span><span style="color:#24292F;">, </span><span style="color:#953800;">index</span><span style="color:#24292F;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#6E7781;">// \u6A2A\u5411 \u7EB5\u5411\u7684\u547C\u5438\u706F\u4E2A\u6570</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> horizontalNum </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">8</span><span style="color:#24292F;">;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> portraitNum </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">3</span><span style="color:#24292F;">;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">rw</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">RACK_WIDTH</span><span style="color:#24292F;">;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">rl</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">RACK_LENGTH</span><span style="color:#24292F;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">geometry</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">new</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">THREE</span><span style="color:#24292F;">.</span><span style="color:#8250DF;">BufferGeometry</span><span style="color:#24292F;">();</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">numPoints</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> horizontalNum </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> portraitNum;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">positions</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">new</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">Float32Array</span><span style="color:#24292F;">(numPoints </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">3</span><span style="color:#24292F;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> k </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">0</span><span style="color:#24292F;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">for</span><span style="color:#24292F;"> (</span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> i </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">0</span><span style="color:#24292F;">; i </span><span style="color:#CF222E;">&lt;</span><span style="color:#24292F;"> horizontalNum; i</span><span style="color:#CF222E;">++</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">for</span><span style="color:#24292F;"> (</span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> j </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">0</span><span style="color:#24292F;">; j </span><span style="color:#CF222E;">&lt;</span><span style="color:#24292F;"> portraitNum; j</span><span style="color:#CF222E;">++</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (Math.</span><span style="color:#8250DF;">random</span><span style="color:#24292F;">() </span><span style="color:#CF222E;">&lt;</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">0.5</span><span style="color:#24292F;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">                </span><span style="color:#6E7781;">// 26\u548C6\u5206\u522B\u8868\u793A\u6BCF\u4E2A\u706F\u7684\u6A2A\u5411\u95F4\u9694\u548C\u7EB5\u5411\u95F4\u9694</span></span>
<span class="line"><span style="color:#24292F;">                </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">u</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> i </span><span style="color:#CF222E;">/</span><span style="color:#24292F;"> horizontalNum </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">26</span><span style="color:#24292F;">;</span></span>
<span class="line"><span style="color:#24292F;">                </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">v</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> j </span><span style="color:#CF222E;">/</span><span style="color:#24292F;"> portraitNum </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">6</span><span style="color:#24292F;">;</span></span>
<span class="line"><span style="color:#24292F;">                </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">x</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">-</span><span style="color:#24292F;">rl </span><span style="color:#CF222E;">/</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">2</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">+</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">9</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">+</span><span style="color:#24292F;"> u;</span></span>
<span class="line"><span style="color:#24292F;">                </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">y</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> h </span><span style="color:#CF222E;">-</span><span style="color:#24292F;"> v;</span></span>
<span class="line"><span style="color:#24292F;">                </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">z</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> rw </span><span style="color:#CF222E;">/</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">2</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">+</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">0.4</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">/</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">2</span><span style="color:#24292F;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">                positions[</span><span style="color:#0550AE;">3</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> k] </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> x;</span></span>
<span class="line"><span style="color:#24292F;">                positions[</span><span style="color:#0550AE;">3</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> k </span><span style="color:#CF222E;">+</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">1</span><span style="color:#24292F;">] </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> y;</span></span>
<span class="line"><span style="color:#24292F;">                positions[</span><span style="color:#0550AE;">3</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> k </span><span style="color:#CF222E;">+</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">2</span><span style="color:#24292F;">] </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> z;</span></span>
<span class="line"><span style="color:#24292F;">                k</span><span style="color:#CF222E;">++</span><span style="color:#24292F;">;</span></span>
<span class="line"><span style="color:#24292F;">            }</span></span>
<span class="line"><span style="color:#24292F;">        }</span></span>
<span class="line"><span style="color:#24292F;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">    geometry.</span><span style="color:#8250DF;">setAttribute</span><span style="color:#24292F;">(</span><span style="color:#0A3069;">&#39;position&#39;</span><span style="color:#24292F;">, </span><span style="color:#CF222E;">new</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">THREE</span><span style="color:#24292F;">.</span><span style="color:#8250DF;">BufferAttribute</span><span style="color:#24292F;">(positions, </span><span style="color:#0550AE;">3</span><span style="color:#24292F;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">    geometry.name </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">SERVER_NAME</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">+</span><span style="color:#24292F;"> index;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">material</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">new</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">THREE</span><span style="color:#24292F;">.</span><span style="color:#8250DF;">PointsMaterial</span><span style="color:#24292F;">({</span></span>
<span class="line"><span style="color:#24292F;">        size: </span><span style="color:#0550AE;">1.5</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">        color: </span><span style="color:#0550AE;">THREE_JS_COLOR</span><span style="color:#24292F;">.</span><span style="color:#0550AE;">DEFAULT_LIGHT</span></span>
<span class="line"><span style="color:#24292F;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">new</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">THREE</span><span style="color:#24292F;">.</span><span style="color:#8250DF;">Points</span><span style="color:#24292F;">(geometry, material);</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span></code></pre></div>`,1);function v(a,l,p,o,e,t){const c=y("render-demo-0"),r=y("demo");return A(),E("div",null,[h,_,F(r,{customClass:"undefined",sourceCode:`
<template>
    <div style="height: 600px;width: 680px;">
        <rack />
    </div>
</template>
`},{highlight:D(()=>[f]),default:D(()=>[F(c)]),_:1}),k])}const w=u(d,[["render",v]]);export{g as __pageData,w as default};
