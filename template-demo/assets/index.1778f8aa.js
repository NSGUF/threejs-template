import{d as defineComponent,r as ref,o as onMounted,h as onBeforeUnmount,n as nextTick}from"./vendor.63663422.js";import{l as TextureLoader,_ as Cache,c as PerspectiveCamera,S as Scene,p as Vector3,W as WebGLRenderer,E as FileLoader,Z as Object3D,L as LineBasicMaterial,$ as Shape,B as BufferGeometry,t as Line,r as CircleGeometry,g as MeshBasicMaterial,M as Mesh,a0 as THREE$1,a1 as Clock,v as DirectionalLight,G as Group,u as MeshPhysicalMaterial,C as CylinderGeometry,y as PlaneGeometry,F as Float32BufferAttribute,H as MeshPhongMaterial,i as DoubleSide,s as MeshStandardMaterial,w as BoxGeometry,x as MeshLambertMaterial}from"./three.module.18d565c0.js";import{m as mercator}from"./transform.42385991.js";import{O as OrbitControls}from"./OrbitControls.374a84f0.js";import{a as CSS2DObject,C as CSS2DRenderer}from"./CSS2DRenderer.c32b751a.js";import{L as LottieLoader,l as lottie$1}from"./LottieLoader.e332ea12.js";import{n as normalizeComponent}from"./index.553d5c6b.js";const svgNS="http://www.w3.org/2000/svg";let locationHref="",_useWebWorker=!1;const initialDefaultFrame=-999999,setWebWorker=t=>{_useWebWorker=!!t},getWebWorker=()=>_useWebWorker,setLocationHref=t=>{locationHref=t},getLocationHref=()=>locationHref;function createTag(t){return document.createElement(t)}function extendPrototype(t,e){var i,s,r=t.length;for(i=0;i<r;i+=1)for(var n in s=t[i].prototype)Object.prototype.hasOwnProperty.call(s,n)&&(e.prototype[n]=s[n])}function getDescriptor(t,e){return Object.getOwnPropertyDescriptor(t,e)}function createProxyFunction(t){function e(){}return e.prototype=t,e}const audioControllerFactory=function(){function t(t){this.audios=[],this.audioFactory=t,this._volume=1,this._isMuted=!1}return t.prototype={addAudio:function(t){this.audios.push(t)},pause:function(){var t,e=this.audios.length;for(t=0;t<e;t+=1)this.audios[t].pause()},resume:function(){var t,e=this.audios.length;for(t=0;t<e;t+=1)this.audios[t].resume()},setRate:function(t){var e,i=this.audios.length;for(e=0;e<i;e+=1)this.audios[e].setRate(t)},createAudio:function(t){return this.audioFactory?this.audioFactory(t):window.Howl?new window.Howl({src:[t]}):{isPlaying:!1,play:function(){this.isPlaying=!0},seek:function(){this.isPlaying=!1},playing:function(){},rate:function(){},setVolume:function(){}}},setAudioFactory:function(t){this.audioFactory=t},setVolume:function(t){this._volume=t,this._updateVolume()},mute:function(){this._isMuted=!0,this._updateVolume()},unmute:function(){this._isMuted=!1,this._updateVolume()},getVolume:function(){return this._volume},_updateVolume:function(){var t,e=this.audios.length;for(t=0;t<e;t+=1)this.audios[t].volume(this._volume*(this._isMuted?0:1))}},function(){return new t}}(),createTypedArray=function(){function t(t,e){var i,s=0,r=[];switch(t){case"int16":case"uint8c":i=1;break;default:i=1.1}for(s=0;s<e;s+=1)r.push(i);return r}return"function"==typeof Uint8ClampedArray&&"function"==typeof Float32Array?function(e,i){return"float32"===e?new Float32Array(i):"int16"===e?new Int16Array(i):"uint8c"===e?new Uint8ClampedArray(i):t(e,i)}:t}();function createSizedArray(t){return Array.apply(null,{length:t})}let subframeEnabled=!0,expressionsPlugin=null,expressionsInterfaces=null,idPrefix$1="";const isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),bmPow=Math.pow,bmSqrt=Math.sqrt,bmFloor=Math.floor,bmMin=Math.min,BMMath={};!function(){var t,e=["abs","acos","acosh","asin","asinh","atan","atanh","atan2","ceil","cbrt","expm1","clz32","cos","cosh","exp","floor","fround","hypot","imul","log","log1p","log2","log10","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","E","LN10","LN2","LOG10E","LOG2E","PI","SQRT1_2","SQRT2"],i=e.length;for(t=0;t<i;t+=1)BMMath[e[t]]=Math[e[t]]}(),BMMath.random=Math.random,BMMath.abs=function(t){if("object"===typeof t&&t.length){var e,i=createSizedArray(t.length),s=t.length;for(e=0;e<s;e+=1)i[e]=Math.abs(t[e]);return i}return Math.abs(t)};let defaultCurveSegments=150;const degToRads=Math.PI/180,roundCorner=.5519;function BMEnterFrameEvent(t,e,i,s){this.type=t,this.currentTime=e,this.totalTime=i,this.direction=s<0?-1:1}function BMCompleteEvent(t,e){this.type=t,this.direction=e<0?-1:1}function BMCompleteLoopEvent(t,e,i,s){this.type=t,this.currentLoop=i,this.totalLoops=e,this.direction=s<0?-1:1}function BMSegmentStartEvent(t,e,i){this.type=t,this.firstFrame=e,this.totalFrames=i}function BMDestroyEvent(t,e){this.type=t,this.target=e}function BMRenderFrameErrorEvent(t,e){this.type="renderFrameError",this.nativeError=t,this.currentTime=e}function BMConfigErrorEvent(t){this.type="configError",this.nativeError=t}const createElementID=(_count=0,function(){return idPrefix$1+"__lottie_element_"+(_count+=1)});var _count;function HSVtoRGB(t,e,i){var s,r,n,a,c,l,o,d;switch(l=i*(1-e),o=i*(1-(c=6*t-(a=Math.floor(6*t)))*e),d=i*(1-(1-c)*e),a%6){case 0:s=i,r=d,n=l;break;case 1:s=o,r=i,n=l;break;case 2:s=l,r=i,n=d;break;case 3:s=l,r=o,n=i;break;case 4:s=d,r=l,n=i;break;case 5:s=i,r=l,n=o}return[s,r,n]}function RGBtoHSV(t,e,i){var s,r=Math.max(t,e,i),n=Math.min(t,e,i),a=r-n,c=0===r?0:a/r,l=r/255;switch(r){case n:s=0;break;case t:s=e-i+a*(e<i?6:0),s/=6*a;break;case e:s=i-t+2*a,s/=6*a;break;case i:s=t-e+4*a,s/=6*a}return[s,c,l]}function addSaturationToRGB(t,e){var i=RGBtoHSV(255*t[0],255*t[1],255*t[2]);return i[1]+=e,i[1]>1?i[1]=1:i[1]<=0&&(i[1]=0),HSVtoRGB(i[0],i[1],i[2])}function addBrightnessToRGB(t,e){var i=RGBtoHSV(255*t[0],255*t[1],255*t[2]);return i[2]+=e,i[2]>1?i[2]=1:i[2]<0&&(i[2]=0),HSVtoRGB(i[0],i[1],i[2])}function addHueToRGB(t,e){var i=RGBtoHSV(255*t[0],255*t[1],255*t[2]);return i[0]+=e/360,i[0]>1?i[0]-=1:i[0]<0&&(i[0]+=1),HSVtoRGB(i[0],i[1],i[2])}!function(){var t,e,i=[];for(t=0;t<256;t+=1)e=t.toString(16),i[t]=1===e.length?"0"+e:e}();const setSubframeEnabled=t=>{subframeEnabled=!!t},getSubframeEnabled=()=>subframeEnabled,setExpressionsPlugin=t=>{expressionsPlugin=t},getExpressionsPlugin=()=>expressionsPlugin,setExpressionInterfaces=t=>{expressionsInterfaces=t},getExpressionInterfaces=()=>expressionsInterfaces,setDefaultCurveSegments=t=>{defaultCurveSegments=t},getDefaultCurveSegments=()=>defaultCurveSegments,setIdPrefix=t=>{idPrefix$1=t};function createNS(t){return document.createElementNS(svgNS,t)}const dataManager=function(){var t,e,i=1,s=[],r={onmessage:function(){},postMessage:function(e){t({data:e})}},n={postMessage:function(t){r.onmessage({data:t})}};function a(){e||((e=function(e){if(window.Worker&&window.Blob&&getWebWorker()){var i=new Blob(["var _workerSelf = self; self.onmessage = ",e.toString()],{type:"text/javascript"}),s=URL.createObjectURL(i);return new Worker(s)}return t=e,r}((function(t){if(n.dataManager||(n.dataManager=function(){function t(r,n){var a,c,l,o,d,m,p=r.length;for(c=0;c<p;c+=1)if("ks"in(a=r[c])&&!a.completed){if(a.completed=!0,a.hasMask){var v=a.masksProperties;for(o=v.length,l=0;l<o;l+=1)if(v[l].pt.k.i)s(v[l].pt.k);else for(m=v[l].pt.k.length,d=0;d<m;d+=1)v[l].pt.k[d].s&&s(v[l].pt.k[d].s[0]),v[l].pt.k[d].e&&s(v[l].pt.k[d].e[0])}0===a.ty?(a.layers=e(a.refId,n),t(a.layers,n)):4===a.ty?i(a.shapes):5===a.ty&&h(a)}}function e(t,e){var i=function(t,e){for(var i=0,s=e.length;i<s;){if(e[i].id===t)return e[i];i+=1}return null}(t,e);return i?i.layers.__used?JSON.parse(JSON.stringify(i.layers)):(i.layers.__used=!0,i.layers):null}function i(t){var e,r,n;for(e=t.length-1;e>=0;e-=1)if("sh"===t[e].ty)if(t[e].ks.k.i)s(t[e].ks.k);else for(n=t[e].ks.k.length,r=0;r<n;r+=1)t[e].ks.k[r].s&&s(t[e].ks.k[r].s[0]),t[e].ks.k[r].e&&s(t[e].ks.k[r].e[0]);else"gr"===t[e].ty&&i(t[e].it)}function s(t){var e,i=t.i.length;for(e=0;e<i;e+=1)t.i[e][0]+=t.v[e][0],t.i[e][1]+=t.v[e][1],t.o[e][0]+=t.v[e][0],t.o[e][1]+=t.v[e][1]}function r(t,e){var i=e?e.split("."):[100,100,100];return t[0]>i[0]||!(i[0]>t[0])&&(t[1]>i[1]||!(i[1]>t[1])&&(t[2]>i[2]||!(i[2]>t[2])&&null))}var n,a=function(){var t=[4,4,14];function e(t){var e,i,s,r=t.length;for(e=0;e<r;e+=1)5===t[e].ty&&(s=void 0,s=(i=t[e]).t.d,i.t.d={k:[{s:s,t:0}]})}return function(i){if(r(t,i.v)&&(e(i.layers),i.assets)){var s,n=i.assets.length;for(s=0;s<n;s+=1)i.assets[s].layers&&e(i.assets[s].layers)}}}(),c=(n=[4,7,99],function(t){if(t.chars&&!r(n,t.v)){var e,s=t.chars.length;for(e=0;e<s;e+=1){var a=t.chars[e];a.data&&a.data.shapes&&(i(a.data.shapes),a.data.ip=0,a.data.op=99999,a.data.st=0,a.data.sr=1,a.data.ks={p:{k:[0,0],a:0},s:{k:[100,100],a:0},a:{k:[0,0],a:0},r:{k:0,a:0},o:{k:100,a:0}},t.chars[e].t||(a.data.shapes.push({ty:"no"}),a.data.shapes[0].it.push({p:{k:[0,0],a:0},s:{k:[100,100],a:0},a:{k:[0,0],a:0},r:{k:0,a:0},o:{k:100,a:0},sk:{k:0,a:0},sa:{k:0,a:0},ty:"tr"})))}}}),l=function(){var t=[5,7,15];function e(t){var e,i,s=t.length;for(e=0;e<s;e+=1)5===t[e].ty&&(i=void 0,"number"==typeof(i=t[e].t.p).a&&(i.a={a:0,k:i.a}),"number"==typeof i.p&&(i.p={a:0,k:i.p}),"number"==typeof i.r&&(i.r={a:0,k:i.r}))}return function(i){if(r(t,i.v)&&(e(i.layers),i.assets)){var s,n=i.assets.length;for(s=0;s<n;s+=1)i.assets[s].layers&&e(i.assets[s].layers)}}}(),o=function(){var t=[4,1,9];function e(t){var i,s,r,n=t.length;for(i=0;i<n;i+=1)if("gr"===t[i].ty)e(t[i].it);else if("fl"===t[i].ty||"st"===t[i].ty)if(t[i].c.k&&t[i].c.k[0].i)for(r=t[i].c.k.length,s=0;s<r;s+=1)t[i].c.k[s].s&&(t[i].c.k[s].s[0]/=255,t[i].c.k[s].s[1]/=255,t[i].c.k[s].s[2]/=255,t[i].c.k[s].s[3]/=255),t[i].c.k[s].e&&(t[i].c.k[s].e[0]/=255,t[i].c.k[s].e[1]/=255,t[i].c.k[s].e[2]/=255,t[i].c.k[s].e[3]/=255);else t[i].c.k[0]/=255,t[i].c.k[1]/=255,t[i].c.k[2]/=255,t[i].c.k[3]/=255}function i(t){var i,s=t.length;for(i=0;i<s;i+=1)4===t[i].ty&&e(t[i].shapes)}return function(e){if(r(t,e.v)&&(i(e.layers),e.assets)){var s,n=e.assets.length;for(s=0;s<n;s+=1)e.assets[s].layers&&i(e.assets[s].layers)}}}(),d=function(){var t=[4,4,18];function e(t){var i,s,r;for(i=t.length-1;i>=0;i-=1)if("sh"===t[i].ty)if(t[i].ks.k.i)t[i].ks.k.c=t[i].closed;else for(r=t[i].ks.k.length,s=0;s<r;s+=1)t[i].ks.k[s].s&&(t[i].ks.k[s].s[0].c=t[i].closed),t[i].ks.k[s].e&&(t[i].ks.k[s].e[0].c=t[i].closed);else"gr"===t[i].ty&&e(t[i].it)}function i(t){var i,s,r,n,a,c,l=t.length;for(s=0;s<l;s+=1){if((i=t[s]).hasMask){var o=i.masksProperties;for(n=o.length,r=0;r<n;r+=1)if(o[r].pt.k.i)o[r].pt.k.c=o[r].cl;else for(c=o[r].pt.k.length,a=0;a<c;a+=1)o[r].pt.k[a].s&&(o[r].pt.k[a].s[0].c=o[r].cl),o[r].pt.k[a].e&&(o[r].pt.k[a].e[0].c=o[r].cl)}4===i.ty&&e(i.shapes)}}return function(e){if(r(t,e.v)&&(i(e.layers),e.assets)){var s,n=e.assets.length;for(s=0;s<n;s+=1)e.assets[s].layers&&i(e.assets[s].layers)}}}();function h(t){0===t.t.a.length&&t.t.p}var m={completeData:function(i){i.__complete||(o(i),a(i),c(i),l(i),d(i),t(i.layers,i.assets),function(i,s){if(i){var r=0,n=i.length;for(r=0;r<n;r+=1)1===i[r].t&&(i[r].data.layers=e(i[r].data.refId,s),t(i[r].data.layers,s))}}(i.chars,i.assets),i.__complete=!0)}};return m.checkColors=o,m.checkChars=c,m.checkPathProperties=l,m.checkShapes=d,m.completeLayers=t,m}()),n.assetLoader||(n.assetLoader=function(){function t(t){var e=t.getResponseHeader("content-type");return e&&"json"===t.responseType&&-1!==e.indexOf("json")||t.response&&"object"==typeof t.response?t.response:t.response&&"string"==typeof t.response?JSON.parse(t.response):t.responseText?JSON.parse(t.responseText):null}return{load:function(e,i,s,r){var n,a=new XMLHttpRequest;try{a.responseType="json"}catch(c){}a.onreadystatechange=function(){if(4===a.readyState)if(200===a.status)n=t(a),s(n);else try{n=t(a),s(n)}catch(c){r&&r(c)}};try{a.open(["G","E","T"].join(""),e,!0)}catch(l){a.open(["G","E","T"].join(""),i+"/"+e,!0)}a.send()}}}()),"loadAnimation"===t.data.type)n.assetLoader.load(t.data.path,t.data.fullPath,(function(e){n.dataManager.completeData(e),n.postMessage({id:t.data.id,payload:e,status:"success"})}),(function(){n.postMessage({id:t.data.id,status:"error"})}));else if("complete"===t.data.type){var e=t.data.animation;n.dataManager.completeData(e),n.postMessage({id:t.data.id,payload:e,status:"success"})}else"loadData"===t.data.type&&n.assetLoader.load(t.data.path,t.data.fullPath,(function(e){n.postMessage({id:t.data.id,payload:e,status:"success"})}),(function(){n.postMessage({id:t.data.id,status:"error"})}))}))).onmessage=function(t){var e=t.data,i=e.id,r=s[i];s[i]=null,"success"===e.status?r.onComplete(e.payload):r.onError&&r.onError()})}function c(t,e){var r="processId_"+(i+=1);return s[r]={onComplete:t,onError:e},r}return{loadAnimation:function(t,i,s){a();var r=c(i,s);e.postMessage({type:"loadAnimation",path:t,fullPath:window.location.origin+window.location.pathname,id:r})},loadData:function(t,i,s){a();var r=c(i,s);e.postMessage({type:"loadData",path:t,fullPath:window.location.origin+window.location.pathname,id:r})},completeAnimation:function(t,i,s){a();var r=c(i,s);e.postMessage({type:"complete",animation:t,id:r})}}}(),ImagePreloader=function(){var t=function(){var t=createTag("canvas");t.width=1,t.height=1;var e=t.getContext("2d");return e.fillStyle="rgba(0,0,0,0)",e.fillRect(0,0,1,1),t}();function e(){this.loadedAssets+=1,this.loadedAssets===this.totalImages&&this.loadedFootagesCount===this.totalFootages&&this.imagesLoadedCb&&this.imagesLoadedCb(null)}function i(){this.loadedFootagesCount+=1,this.loadedAssets===this.totalImages&&this.loadedFootagesCount===this.totalFootages&&this.imagesLoadedCb&&this.imagesLoadedCb(null)}function s(t,e,i){var s="";if(t.e)s=t.p;else if(e){var r=t.p;-1!==r.indexOf("images/")&&(r=r.split("/")[1]),s=e+r}else s=i,s+=t.u?t.u:"",s+=t.p;return s}function r(t){var e=0,i=setInterval(function(){(t.getBBox().width||e>500)&&(this._imageLoaded(),clearInterval(i)),e+=1}.bind(this),50)}function n(t){var e={assetData:t},i=s(t,this.assetsPath,this.path);return dataManager.loadData(i,function(t){e.img=t,this._footageLoaded()}.bind(this),function(){e.img={},this._footageLoaded()}.bind(this)),e}function a(){this._imageLoaded=e.bind(this),this._footageLoaded=i.bind(this),this.testImageLoaded=r.bind(this),this.createFootageData=n.bind(this),this.assetsPath="",this.path="",this.totalImages=0,this.totalFootages=0,this.loadedAssets=0,this.loadedFootagesCount=0,this.imagesLoadedCb=null,this.images=[]}return a.prototype={loadAssets:function(t,e){var i;this.imagesLoadedCb=e;var s=t.length;for(i=0;i<s;i+=1)t[i].layers||(t[i].t&&"seq"!==t[i].t?3===t[i].t&&(this.totalFootages+=1,this.images.push(this.createFootageData(t[i]))):(this.totalImages+=1,this.images.push(this._createImageData(t[i]))))},setAssetsPath:function(t){this.assetsPath=t||""},setPath:function(t){this.path=t||""},loadedImages:function(){return this.totalImages===this.loadedAssets},loadedFootages:function(){return this.totalFootages===this.loadedFootagesCount},destroy:function(){this.imagesLoadedCb=null,this.images.length=0},getAsset:function(t){for(var e=0,i=this.images.length;e<i;){if(this.images[e].assetData===t)return this.images[e].img;e+=1}return null},createImgData:function(e){var i=s(e,this.assetsPath,this.path),r=createTag("img");r.crossOrigin="anonymous",r.addEventListener("load",this._imageLoaded,!1),r.addEventListener("error",function(){n.img=t,this._imageLoaded()}.bind(this),!1),r.src=i;var n={img:r,assetData:e};return n},createImageData:function(e){var i=s(e,this.assetsPath,this.path),r=createNS("image");isSafari?this.testImageLoaded(r):r.addEventListener("load",this._imageLoaded,!1),r.addEventListener("error",function(){n.img=t,this._imageLoaded()}.bind(this),!1),r.setAttributeNS("http://www.w3.org/1999/xlink","href",i),this._elementHelper.append?this._elementHelper.append(r):this._elementHelper.appendChild(r);var n={img:r,assetData:e};return n},imageLoaded:e,footageLoaded:i,setCacheType:function(t,e){"svg"===t?(this._elementHelper=e,this._createImageData=this.createImageData.bind(this)):this._createImageData=this.createImgData.bind(this)}},a}();function BaseEvent(){}BaseEvent.prototype={triggerEvent:function(t,e){if(this._cbs[t])for(var i=this._cbs[t],s=0;s<i.length;s+=1)i[s](e)},addEventListener:function(t,e){return this._cbs[t]||(this._cbs[t]=[]),this._cbs[t].push(e),function(){this.removeEventListener(t,e)}.bind(this)},removeEventListener:function(t,e){if(e){if(this._cbs[t]){for(var i=0,s=this._cbs[t].length;i<s;)this._cbs[t][i]===e&&(this._cbs[t].splice(i,1),i-=1,s-=1),i+=1;this._cbs[t].length||(this._cbs[t]=null)}}else this._cbs[t]=null}};const markerParser=function(){function t(t){for(var e,i=t.split("\r\n"),s={},r=0,n=0;n<i.length;n+=1)2===(e=i[n].split(":")).length&&(s[e[0]]=e[1].trim(),r+=1);if(0===r)throw new Error;return s}return function(e){for(var i=[],s=0;s<e.length;s+=1){var r=e[s],n={time:r.tm,duration:r.dr};try{n.payload=JSON.parse(e[s].cm)}catch(a){try{n.payload=t(e[s].cm)}catch(c){n.payload={name:e[s].cm}}}i.push(n)}return i}}(),ProjectInterface=function(){function t(t){this.compositions.push(t)}return function(){function e(t){for(var e=0,i=this.compositions.length;e<i;){if(this.compositions[e].data&&this.compositions[e].data.nm===t)return this.compositions[e].prepareFrame&&this.compositions[e].data.xt&&this.compositions[e].prepareFrame(this.currentFrame),this.compositions[e].compInterface;e+=1}return null}return e.compositions=[],e.currentFrame=0,e.registerComposition=t,e}}(),renderers={},registerRenderer=(t,e)=>{renderers[t]=e};function getRenderer(t){return renderers[t]}function getRegisteredRenderer(){if(renderers.canvas)return"canvas";for(const t in renderers)if(renderers[t])return t;return""}const AnimationItem=function(){this._cbs=[],this.name="",this.path="",this.isLoaded=!1,this.currentFrame=0,this.currentRawFrame=0,this.firstFrame=0,this.totalFrames=0,this.frameRate=0,this.frameMult=0,this.playSpeed=1,this.playDirection=1,this.playCount=0,this.animationData={},this.assets=[],this.isPaused=!0,this.autoplay=!1,this.loop=!0,this.renderer=null,this.animationID=createElementID(),this.assetsPath="",this.timeCompleted=0,this.segmentPos=0,this.isSubframeEnabled=getSubframeEnabled(),this.segments=[],this._idle=!0,this._completedLoop=!1,this.projectInterface=ProjectInterface(),this.imagePreloader=new ImagePreloader,this.audioController=audioControllerFactory(),this.markers=[],this.configAnimation=this.configAnimation.bind(this),this.onSetupError=this.onSetupError.bind(this),this.onSegmentComplete=this.onSegmentComplete.bind(this),this.drawnFrameEvent=new BMEnterFrameEvent("drawnFrame",0,0,0),this.expressionsPlugin=getExpressionsPlugin()};extendPrototype([BaseEvent],AnimationItem),AnimationItem.prototype.setParams=function(t){(t.wrapper||t.container)&&(this.wrapper=t.wrapper||t.container);var e="svg";t.animType?e=t.animType:t.renderer&&(e=t.renderer);const i=getRenderer(e);this.renderer=new i(this,t.rendererSettings),this.imagePreloader.setCacheType(e,this.renderer.globalData.defs),this.renderer.setProjectInterface(this.projectInterface),this.animType=e,""===t.loop||null===t.loop||void 0===t.loop||!0===t.loop?this.loop=!0:!1===t.loop?this.loop=!1:this.loop=parseInt(t.loop,10),this.autoplay=!("autoplay"in t)||t.autoplay,this.name=t.name?t.name:"",this.autoloadSegments=!Object.prototype.hasOwnProperty.call(t,"autoloadSegments")||t.autoloadSegments,this.assetsPath=t.assetsPath,this.initialSegment=t.initialSegment,t.audioFactory&&this.audioController.setAudioFactory(t.audioFactory),t.animationData?this.setupAnimation(t.animationData):t.path&&(-1!==t.path.lastIndexOf("\\")?this.path=t.path.substr(0,t.path.lastIndexOf("\\")+1):this.path=t.path.substr(0,t.path.lastIndexOf("/")+1),this.fileName=t.path.substr(t.path.lastIndexOf("/")+1),this.fileName=this.fileName.substr(0,this.fileName.lastIndexOf(".json")),dataManager.loadAnimation(t.path,this.configAnimation,this.onSetupError))},AnimationItem.prototype.onSetupError=function(){this.trigger("data_failed")},AnimationItem.prototype.setupAnimation=function(t){dataManager.completeAnimation(t,this.configAnimation)},AnimationItem.prototype.setData=function(t,e){e&&"object"!=typeof e&&(e=JSON.parse(e));var i={wrapper:t,animationData:e},s=t.attributes;i.path=s.getNamedItem("data-animation-path")?s.getNamedItem("data-animation-path").value:s.getNamedItem("data-bm-path")?s.getNamedItem("data-bm-path").value:s.getNamedItem("bm-path")?s.getNamedItem("bm-path").value:"",i.animType=s.getNamedItem("data-anim-type")?s.getNamedItem("data-anim-type").value:s.getNamedItem("data-bm-type")?s.getNamedItem("data-bm-type").value:s.getNamedItem("bm-type")?s.getNamedItem("bm-type").value:s.getNamedItem("data-bm-renderer")?s.getNamedItem("data-bm-renderer").value:s.getNamedItem("bm-renderer")?s.getNamedItem("bm-renderer").value:getRegisteredRenderer()||"canvas";var r=s.getNamedItem("data-anim-loop")?s.getNamedItem("data-anim-loop").value:s.getNamedItem("data-bm-loop")?s.getNamedItem("data-bm-loop").value:s.getNamedItem("bm-loop")?s.getNamedItem("bm-loop").value:"";"false"===r?i.loop=!1:"true"===r?i.loop=!0:""!==r&&(i.loop=parseInt(r,10));var n=s.getNamedItem("data-anim-autoplay")?s.getNamedItem("data-anim-autoplay").value:s.getNamedItem("data-bm-autoplay")?s.getNamedItem("data-bm-autoplay").value:!s.getNamedItem("bm-autoplay")||s.getNamedItem("bm-autoplay").value;i.autoplay="false"!==n,i.name=s.getNamedItem("data-name")?s.getNamedItem("data-name").value:s.getNamedItem("data-bm-name")?s.getNamedItem("data-bm-name").value:s.getNamedItem("bm-name")?s.getNamedItem("bm-name").value:"","false"===(s.getNamedItem("data-anim-prerender")?s.getNamedItem("data-anim-prerender").value:s.getNamedItem("data-bm-prerender")?s.getNamedItem("data-bm-prerender").value:s.getNamedItem("bm-prerender")?s.getNamedItem("bm-prerender").value:"")&&(i.prerender=!1),i.path?this.setParams(i):this.trigger("destroy")},AnimationItem.prototype.includeLayers=function(t){t.op>this.animationData.op&&(this.animationData.op=t.op,this.totalFrames=Math.floor(t.op-this.animationData.ip));var e,i,s=this.animationData.layers,r=s.length,n=t.layers,a=n.length;for(i=0;i<a;i+=1)for(e=0;e<r;){if(s[e].id===n[i].id){s[e]=n[i];break}e+=1}if((t.chars||t.fonts)&&(this.renderer.globalData.fontManager.addChars(t.chars),this.renderer.globalData.fontManager.addFonts(t.fonts,this.renderer.globalData.defs)),t.assets)for(r=t.assets.length,e=0;e<r;e+=1)this.animationData.assets.push(t.assets[e]);this.animationData.__complete=!1,dataManager.completeAnimation(this.animationData,this.onSegmentComplete)},AnimationItem.prototype.onSegmentComplete=function(t){this.animationData=t;var e=getExpressionsPlugin();e&&e.initExpressions(this),this.loadNextSegment()},AnimationItem.prototype.loadNextSegment=function(){var t=this.animationData.segments;if(!t||0===t.length||!this.autoloadSegments)return this.trigger("data_ready"),void(this.timeCompleted=this.totalFrames);var e=t.shift();this.timeCompleted=e.time*this.frameRate;var i=this.path+this.fileName+"_"+this.segmentPos+".json";this.segmentPos+=1,dataManager.loadData(i,this.includeLayers.bind(this),function(){this.trigger("data_failed")}.bind(this))},AnimationItem.prototype.loadSegments=function(){this.animationData.segments||(this.timeCompleted=this.totalFrames),this.loadNextSegment()},AnimationItem.prototype.imagesLoaded=function(){this.trigger("loaded_images"),this.checkLoaded()},AnimationItem.prototype.preloadImages=function(){this.imagePreloader.setAssetsPath(this.assetsPath),this.imagePreloader.setPath(this.path),this.imagePreloader.loadAssets(this.animationData.assets,this.imagesLoaded.bind(this))},AnimationItem.prototype.configAnimation=function(t){if(this.renderer)try{this.animationData=t,this.initialSegment?(this.totalFrames=Math.floor(this.initialSegment[1]-this.initialSegment[0]),this.firstFrame=Math.round(this.initialSegment[0])):(this.totalFrames=Math.floor(this.animationData.op-this.animationData.ip),this.firstFrame=Math.round(this.animationData.ip)),this.renderer.configAnimation(t),t.assets||(t.assets=[]),this.assets=this.animationData.assets,this.frameRate=this.animationData.fr,this.frameMult=this.animationData.fr/1e3,this.renderer.searchExtraCompositions(t.assets),this.markers=markerParser(t.markers||[]),this.trigger("config_ready"),this.preloadImages(),this.loadSegments(),this.updaFrameModifier(),this.waitForFontsLoaded(),this.isPaused&&this.audioController.pause()}catch(e){this.triggerConfigError(e)}},AnimationItem.prototype.waitForFontsLoaded=function(){this.renderer&&(this.renderer.globalData.fontManager.isLoaded?this.checkLoaded():setTimeout(this.waitForFontsLoaded.bind(this),20))},AnimationItem.prototype.checkLoaded=function(){if(!this.isLoaded&&this.renderer.globalData.fontManager.isLoaded&&(this.imagePreloader.loadedImages()||"canvas"!==this.renderer.rendererType)&&this.imagePreloader.loadedFootages()){this.isLoaded=!0;var t=getExpressionsPlugin();t&&t.initExpressions(this),this.renderer.initItems(),setTimeout(function(){this.trigger("DOMLoaded")}.bind(this),0),this.gotoFrame(),this.autoplay&&this.play()}},AnimationItem.prototype.resize=function(t,e){var i="number"==typeof t?t:void 0,s="number"==typeof e?e:void 0;this.renderer.updateContainerSize(i,s)},AnimationItem.prototype.setSubframe=function(t){this.isSubframeEnabled=!!t},AnimationItem.prototype.gotoFrame=function(){this.currentFrame=this.isSubframeEnabled?this.currentRawFrame:~~this.currentRawFrame,this.timeCompleted!==this.totalFrames&&this.currentFrame>this.timeCompleted&&(this.currentFrame=this.timeCompleted),this.trigger("enterFrame"),this.renderFrame(),this.trigger("drawnFrame")},AnimationItem.prototype.renderFrame=function(){if(!1!==this.isLoaded&&this.renderer)try{this.expressionsPlugin&&this.expressionsPlugin.resetFrame(),this.renderer.renderFrame(this.currentFrame+this.firstFrame)}catch(t){this.triggerRenderFrameError(t)}},AnimationItem.prototype.play=function(t){t&&this.name!==t||!0===this.isPaused&&(this.isPaused=!1,this.trigger("_play"),this.audioController.resume(),this._idle&&(this._idle=!1,this.trigger("_active")))},AnimationItem.prototype.pause=function(t){t&&this.name!==t||!1===this.isPaused&&(this.isPaused=!0,this.trigger("_pause"),this._idle=!0,this.trigger("_idle"),this.audioController.pause())},AnimationItem.prototype.togglePause=function(t){t&&this.name!==t||(!0===this.isPaused?this.play():this.pause())},AnimationItem.prototype.stop=function(t){t&&this.name!==t||(this.pause(),this.playCount=0,this._completedLoop=!1,this.setCurrentRawFrameValue(0))},AnimationItem.prototype.getMarkerData=function(t){for(var e,i=0;i<this.markers.length;i+=1)if((e=this.markers[i]).payload&&e.payload.name===t)return e;return null},AnimationItem.prototype.goToAndStop=function(t,e,i){if(!i||this.name===i){var s=Number(t);if(isNaN(s)){var r=this.getMarkerData(t);r&&this.goToAndStop(r.time,!0)}else e?this.setCurrentRawFrameValue(t):this.setCurrentRawFrameValue(t*this.frameModifier);this.pause()}},AnimationItem.prototype.goToAndPlay=function(t,e,i){if(!i||this.name===i){var s=Number(t);if(isNaN(s)){var r=this.getMarkerData(t);r&&(r.duration?this.playSegments([r.time,r.time+r.duration],!0):this.goToAndStop(r.time,!0))}else this.goToAndStop(s,e,i);this.play()}},AnimationItem.prototype.advanceTime=function(t){if(!0!==this.isPaused&&!1!==this.isLoaded){var e=this.currentRawFrame+t*this.frameModifier,i=!1;e>=this.totalFrames-1&&this.frameModifier>0?this.loop&&this.playCount!==this.loop?e>=this.totalFrames?(this.playCount+=1,this.checkSegments(e%this.totalFrames)||(this.setCurrentRawFrameValue(e%this.totalFrames),this._completedLoop=!0,this.trigger("loopComplete"))):this.setCurrentRawFrameValue(e):this.checkSegments(e>this.totalFrames?e%this.totalFrames:0)||(i=!0,e=this.totalFrames-1):e<0?this.checkSegments(e%this.totalFrames)||(!this.loop||this.playCount--<=0&&!0!==this.loop?(i=!0,e=0):(this.setCurrentRawFrameValue(this.totalFrames+e%this.totalFrames),this._completedLoop?this.trigger("loopComplete"):this._completedLoop=!0)):this.setCurrentRawFrameValue(e),i&&(this.setCurrentRawFrameValue(e),this.pause(),this.trigger("complete"))}},AnimationItem.prototype.adjustSegment=function(t,e){this.playCount=0,t[1]<t[0]?(this.frameModifier>0&&(this.playSpeed<0?this.setSpeed(-this.playSpeed):this.setDirection(-1)),this.totalFrames=t[0]-t[1],this.timeCompleted=this.totalFrames,this.firstFrame=t[1],this.setCurrentRawFrameValue(this.totalFrames-.001-e)):t[1]>t[0]&&(this.frameModifier<0&&(this.playSpeed<0?this.setSpeed(-this.playSpeed):this.setDirection(1)),this.totalFrames=t[1]-t[0],this.timeCompleted=this.totalFrames,this.firstFrame=t[0],this.setCurrentRawFrameValue(.001+e)),this.trigger("segmentStart")},AnimationItem.prototype.setSegment=function(t,e){var i=-1;this.isPaused&&(this.currentRawFrame+this.firstFrame<t?i=t:this.currentRawFrame+this.firstFrame>e&&(i=e-t)),this.firstFrame=t,this.totalFrames=e-t,this.timeCompleted=this.totalFrames,-1!==i&&this.goToAndStop(i,!0)},AnimationItem.prototype.playSegments=function(t,e){if(e&&(this.segments.length=0),"object"==typeof t[0]){var i,s=t.length;for(i=0;i<s;i+=1)this.segments.push(t[i])}else this.segments.push(t);this.segments.length&&e&&this.adjustSegment(this.segments.shift(),0),this.isPaused&&this.play()},AnimationItem.prototype.resetSegments=function(t){this.segments.length=0,this.segments.push([this.animationData.ip,this.animationData.op]),t&&this.checkSegments(0)},AnimationItem.prototype.checkSegments=function(t){return!!this.segments.length&&(this.adjustSegment(this.segments.shift(),t),!0)},AnimationItem.prototype.destroy=function(t){t&&this.name!==t||!this.renderer||(this.renderer.destroy(),this.imagePreloader.destroy(),this.trigger("destroy"),this._cbs=null,this.onEnterFrame=null,this.onLoopComplete=null,this.onComplete=null,this.onSegmentStart=null,this.onDestroy=null,this.renderer=null,this.expressionsPlugin=null,this.imagePreloader=null,this.projectInterface=null)},AnimationItem.prototype.setCurrentRawFrameValue=function(t){this.currentRawFrame=t,this.gotoFrame()},AnimationItem.prototype.setSpeed=function(t){this.playSpeed=t,this.updaFrameModifier()},AnimationItem.prototype.setDirection=function(t){this.playDirection=t<0?-1:1,this.updaFrameModifier()},AnimationItem.prototype.setLoop=function(t){this.loop=t},AnimationItem.prototype.setVolume=function(t,e){e&&this.name!==e||this.audioController.setVolume(t)},AnimationItem.prototype.getVolume=function(){return this.audioController.getVolume()},AnimationItem.prototype.mute=function(t){t&&this.name!==t||this.audioController.mute()},AnimationItem.prototype.unmute=function(t){t&&this.name!==t||this.audioController.unmute()},AnimationItem.prototype.updaFrameModifier=function(){this.frameModifier=this.frameMult*this.playSpeed*this.playDirection,this.audioController.setRate(this.playSpeed*this.playDirection)},AnimationItem.prototype.getPath=function(){return this.path},AnimationItem.prototype.getAssetsPath=function(t){var e="";if(t.e)e=t.p;else if(this.assetsPath){var i=t.p;-1!==i.indexOf("images/")&&(i=i.split("/")[1]),e=this.assetsPath+i}else e=this.path,e+=t.u?t.u:"",e+=t.p;return e},AnimationItem.prototype.getAssetData=function(t){for(var e=0,i=this.assets.length;e<i;){if(t===this.assets[e].id)return this.assets[e];e+=1}return null},AnimationItem.prototype.hide=function(){this.renderer.hide()},AnimationItem.prototype.show=function(){this.renderer.show()},AnimationItem.prototype.getDuration=function(t){return t?this.totalFrames:this.totalFrames/this.frameRate},AnimationItem.prototype.updateDocumentData=function(t,e,i){try{this.renderer.getElementByPath(t).updateDocumentData(e,i)}catch(s){}},AnimationItem.prototype.trigger=function(t){if(this._cbs&&this._cbs[t])switch(t){case"enterFrame":this.triggerEvent(t,new BMEnterFrameEvent(t,this.currentFrame,this.totalFrames,this.frameModifier));break;case"drawnFrame":this.drawnFrameEvent.currentTime=this.currentFrame,this.drawnFrameEvent.totalTime=this.totalFrames,this.drawnFrameEvent.direction=this.frameModifier,this.triggerEvent(t,this.drawnFrameEvent);break;case"loopComplete":this.triggerEvent(t,new BMCompleteLoopEvent(t,this.loop,this.playCount,this.frameMult));break;case"complete":this.triggerEvent(t,new BMCompleteEvent(t,this.frameMult));break;case"segmentStart":this.triggerEvent(t,new BMSegmentStartEvent(t,this.firstFrame,this.totalFrames));break;case"destroy":this.triggerEvent(t,new BMDestroyEvent(t,this));break;default:this.triggerEvent(t)}"enterFrame"===t&&this.onEnterFrame&&this.onEnterFrame.call(this,new BMEnterFrameEvent(t,this.currentFrame,this.totalFrames,this.frameMult)),"loopComplete"===t&&this.onLoopComplete&&this.onLoopComplete.call(this,new BMCompleteLoopEvent(t,this.loop,this.playCount,this.frameMult)),"complete"===t&&this.onComplete&&this.onComplete.call(this,new BMCompleteEvent(t,this.frameMult)),"segmentStart"===t&&this.onSegmentStart&&this.onSegmentStart.call(this,new BMSegmentStartEvent(t,this.firstFrame,this.totalFrames)),"destroy"===t&&this.onDestroy&&this.onDestroy.call(this,new BMDestroyEvent(t,this))},AnimationItem.prototype.triggerRenderFrameError=function(t){var e=new BMRenderFrameErrorEvent(t,this.currentFrame);this.triggerEvent("error",e),this.onError&&this.onError.call(this,e)},AnimationItem.prototype.triggerConfigError=function(t){var e=new BMConfigErrorEvent(t,this.currentFrame);this.triggerEvent("error",e),this.onError&&this.onError.call(this,e)};const animationManager=function(){var t={},e=[],i=0,s=0,r=0,n=!0,a=!1;function c(t){for(var i=0,r=t.target;i<s;)e[i].animation===r&&(e.splice(i,1),i-=1,s-=1,r.isPaused||d()),i+=1}function l(t,i){if(!t)return null;for(var r=0;r<s;){if(e[r].elem===t&&null!==e[r].elem)return e[r].animation;r+=1}var n=new AnimationItem;return h(n,t),n.setData(t,i),n}function o(){r+=1,v()}function d(){r-=1}function h(t,i){t.addEventListener("destroy",c),t.addEventListener("_active",o),t.addEventListener("_idle",d),e.push({elem:i,animation:t}),s+=1}function m(t){var c,l=t-i;for(c=0;c<s;c+=1)e[c].animation.advanceTime(l);i=t,r&&!a?window.requestAnimationFrame(m):n=!0}function p(t){i=t,window.requestAnimationFrame(m)}function v(){!a&&r&&n&&(window.requestAnimationFrame(p),n=!1)}return t.registerAnimation=l,t.loadAnimation=function(t){var e=new AnimationItem;return h(e,null),e.setParams(t),e},t.setSpeed=function(t,i){var r;for(r=0;r<s;r+=1)e[r].animation.setSpeed(t,i)},t.setDirection=function(t,i){var r;for(r=0;r<s;r+=1)e[r].animation.setDirection(t,i)},t.play=function(t){var i;for(i=0;i<s;i+=1)e[i].animation.play(t)},t.pause=function(t){var i;for(i=0;i<s;i+=1)e[i].animation.pause(t)},t.stop=function(t){var i;for(i=0;i<s;i+=1)e[i].animation.stop(t)},t.togglePause=function(t){var i;for(i=0;i<s;i+=1)e[i].animation.togglePause(t)},t.searchAnimations=function(t,e,i){var s,r=[].concat([].slice.call(document.getElementsByClassName("lottie")),[].slice.call(document.getElementsByClassName("bodymovin"))),n=r.length;for(s=0;s<n;s+=1)i&&r[s].setAttribute("data-bm-type",i),l(r[s],t);if(e&&0===n){i||(i="svg");var a=document.getElementsByTagName("body")[0];a.innerText="";var c=createTag("div");c.style.width="100%",c.style.height="100%",c.setAttribute("data-bm-type",i),a.appendChild(c),l(c,t)}},t.resize=function(){var t;for(t=0;t<s;t+=1)e[t].animation.resize()},t.goToAndStop=function(t,i,r){var n;for(n=0;n<s;n+=1)e[n].animation.goToAndStop(t,i,r)},t.destroy=function(t){var i;for(i=s-1;i>=0;i-=1)e[i].animation.destroy(t)},t.freeze=function(){a=!0},t.unfreeze=function(){a=!1,v()},t.setVolume=function(t,i){var r;for(r=0;r<s;r+=1)e[r].animation.setVolume(t,i)},t.mute=function(t){var i;for(i=0;i<s;i+=1)e[i].animation.mute(t)},t.unmute=function(t){var i;for(i=0;i<s;i+=1)e[i].animation.unmute(t)},t.getRegisteredAnimations=function(){var t,i=e.length,s=[];for(t=0;t<i;t+=1)s.push(e[t].animation);return s},t}(),BezierFactory=function(){var t={getBezierEasing:function(t,i,s,r,n){var a=n||("bez_"+t+"_"+i+"_"+s+"_"+r).replace(/\./g,"p");if(e[a])return e[a];var c=new o([t,i,s,r]);return e[a]=c,c}},e={};var i=.1,s="function"==typeof Float32Array;function r(t,e){return 1-3*e+3*t}function n(t,e){return 3*e-6*t}function a(t){return 3*t}function c(t,e,i){return((r(e,i)*t+n(e,i))*t+a(e))*t}function l(t,e,i){return 3*r(e,i)*t*t+2*n(e,i)*t+a(e)}function o(t){this._p=t,this._mSampleValues=s?new Float32Array(11):new Array(11),this._precomputed=!1,this.get=this.get.bind(this)}return o.prototype={get:function(t){var e=this._p[0],i=this._p[1],s=this._p[2],r=this._p[3];return this._precomputed||this._precompute(),e===i&&s===r?t:0===t?0:1===t?1:c(this._getTForX(t),i,r)},_precompute:function(){var t=this._p[0],e=this._p[1],i=this._p[2],s=this._p[3];this._precomputed=!0,t===e&&i===s||this._calcSampleValues()},_calcSampleValues:function(){for(var t=this._p[0],e=this._p[2],s=0;s<11;++s)this._mSampleValues[s]=c(s*i,t,e)},_getTForX:function(t){for(var e=this._p[0],s=this._p[2],r=this._mSampleValues,n=0,a=1;10!==a&&r[a]<=t;++a)n+=i;var o=n+(t-r[--a])/(r[a+1]-r[a])*i,d=l(o,e,s);return d>=.001?function(t,e,i,s){for(var r=0;r<4;++r){var n=l(e,i,s);if(0===n)return e;e-=(c(e,i,s)-t)/n}return e}(t,o,e,s):0===d?o:function(t,e,i,s,r){var n,a,l=0;do{(n=c(a=e+(i-e)/2,s,r)-t)>0?i=a:e=a}while(Math.abs(n)>1e-7&&++l<10);return a}(t,n,n+i,e,s)}},t}(),pooling={double:function(t){return t.concat(createSizedArray(t.length))}},poolFactory=function(t,e,i){var s=0,r=t,n=createSizedArray(r);return{newElement:function(){return s?n[s-=1]:e()},release:function(t){s===r&&(n=pooling.double(n),r*=2),i&&i(t),n[s]=t,s+=1}}},bezierLengthPool=poolFactory(8,(function(){return{addedLength:0,percents:createTypedArray("float32",getDefaultCurveSegments()),lengths:createTypedArray("float32",getDefaultCurveSegments())}})),segmentsLengthPool=poolFactory(8,(function(){return{lengths:[],totalLength:0}}),(function(t){var e,i=t.lengths.length;for(e=0;e<i;e+=1)bezierLengthPool.release(t.lengths[e]);t.lengths.length=0}));function bezFunction(){var t=Math;function e(t,e,i,s,r,n){var a=t*s+e*r+i*n-r*s-n*t-i*e;return a>-.001&&a<.001}var i=function(t,e,i,s){var r,n,a,c,l,o,d=getDefaultCurveSegments(),h=0,m=[],p=[],v=bezierLengthPool.newElement();for(a=i.length,r=0;r<d;r+=1){for(l=r/(d-1),o=0,n=0;n<a;n+=1)c=bmPow(1-l,3)*t[n]+3*bmPow(1-l,2)*l*i[n]+3*(1-l)*bmPow(l,2)*s[n]+bmPow(l,3)*e[n],m[n]=c,null!==p[n]&&(o+=bmPow(m[n]-p[n],2)),p[n]=m[n];o&&(h+=o=bmSqrt(o)),v.percents[r]=l,v.lengths[r]=h}return v.addedLength=h,v};function s(t){this.segmentLength=0,this.points=new Array(t)}function r(t,e){this.partialLength=t,this.point=e}var n,a=(n={},function(t,i,a,c){var l=(t[0]+"_"+t[1]+"_"+i[0]+"_"+i[1]+"_"+a[0]+"_"+a[1]+"_"+c[0]+"_"+c[1]).replace(/\./g,"p");if(!n[l]){var o,d,h,m,p,v,f,u=getDefaultCurveSegments(),y=0,g=null;2===t.length&&(t[0]!==i[0]||t[1]!==i[1])&&e(t[0],t[1],i[0],i[1],t[0]+a[0],t[1]+a[1])&&e(t[0],t[1],i[0],i[1],i[0]+c[0],i[1]+c[1])&&(u=2);var _=new s(u);for(h=a.length,o=0;o<u;o+=1){for(f=createSizedArray(h),p=o/(u-1),v=0,d=0;d<h;d+=1)m=bmPow(1-p,3)*t[d]+3*bmPow(1-p,2)*p*(t[d]+a[d])+3*(1-p)*bmPow(p,2)*(i[d]+c[d])+bmPow(p,3)*i[d],f[d]=m,null!==g&&(v+=bmPow(f[d]-g[d],2));y+=v=bmSqrt(v),_.points[o]=new r(v,f),g=f}_.segmentLength=y,n[l]=_}return n[l]});function c(t,e){var i=e.percents,s=e.lengths,r=i.length,n=bmFloor((r-1)*t),a=t*e.addedLength,c=0;if(n===r-1||0===n||a===s[n])return i[n];for(var l=s[n]>a?-1:1,o=!0;o;)if(s[n]<=a&&s[n+1]>a?(c=(a-s[n])/(s[n+1]-s[n]),o=!1):n+=l,n<0||n>=r-1){if(n===r-1)return i[n];o=!1}return i[n]+(i[n+1]-i[n])*c}var l=createTypedArray("float32",8);return{getSegmentsLength:function(t){var e,s=segmentsLengthPool.newElement(),r=t.c,n=t.v,a=t.o,c=t.i,l=t._length,o=s.lengths,d=0;for(e=0;e<l-1;e+=1)o[e]=i(n[e],n[e+1],a[e],c[e+1]),d+=o[e].addedLength;return r&&l&&(o[e]=i(n[e],n[0],a[e],c[0]),d+=o[e].addedLength),s.totalLength=d,s},getNewSegment:function(e,i,s,r,n,a,o){n<0?n=0:n>1&&(n=1);var d,h=c(n,o),m=c(a=a>1?1:a,o),p=e.length,v=1-h,f=1-m,u=v*v*v,y=h*v*v*3,g=h*h*v*3,_=h*h*h,C=v*v*f,E=h*v*f+v*h*f+v*v*m,I=h*h*f+v*h*m+h*v*m,T=h*h*m,x=v*f*f,S=h*f*f+v*m*f+v*f*m,P=h*m*f+v*m*m+h*f*m,b=h*m*m,A=f*f*f,w=m*f*f+f*m*f+f*f*m,M=m*m*f+f*m*m+m*f*m,O=m*m*m;for(d=0;d<p;d+=1)l[4*d]=t.round(1e3*(u*e[d]+y*s[d]+g*r[d]+_*i[d]))/1e3,l[4*d+1]=t.round(1e3*(C*e[d]+E*s[d]+I*r[d]+T*i[d]))/1e3,l[4*d+2]=t.round(1e3*(x*e[d]+S*s[d]+P*r[d]+b*i[d]))/1e3,l[4*d+3]=t.round(1e3*(A*e[d]+w*s[d]+M*r[d]+O*i[d]))/1e3;return l},getPointInSegment:function(e,i,s,r,n,a){var l=c(n,a),o=1-l;return[t.round(1e3*(o*o*o*e[0]+(l*o*o+o*l*o+o*o*l)*s[0]+(l*l*o+o*l*l+l*o*l)*r[0]+l*l*l*i[0]))/1e3,t.round(1e3*(o*o*o*e[1]+(l*o*o+o*l*o+o*o*l)*s[1]+(l*l*o+o*l*l+l*o*l)*r[1]+l*l*l*i[1]))/1e3]},buildBezierData:a,pointOnLine2D:e,pointOnLine3D:function(i,s,r,n,a,c,l,o,d){if(0===r&&0===c&&0===d)return e(i,s,n,a,l,o);var h,m=t.sqrt(t.pow(n-i,2)+t.pow(a-s,2)+t.pow(c-r,2)),p=t.sqrt(t.pow(l-i,2)+t.pow(o-s,2)+t.pow(d-r,2)),v=t.sqrt(t.pow(l-n,2)+t.pow(o-a,2)+t.pow(d-c,2));return(h=m>p?m>v?m-p-v:v-p-m:v>p?v-p-m:p-m-v)>-1e-4&&h<1e-4}}}const bez=bezFunction();var initFrame=initialDefaultFrame,mathAbs=Math.abs;function interpolateValue(t,e){var i,s=this.offsetTime;"multidimensional"===this.propType&&(i=createTypedArray("float32",this.pv.length));for(var r,n,a,c,l,o,d,h,m,p=e.lastIndex,v=p,f=this.keyframes.length-1,u=!0;u;){if(r=this.keyframes[v],n=this.keyframes[v+1],v===f-1&&t>=n.t-s){r.h&&(r=n),p=0;break}if(n.t-s>t){p=v;break}v<f-1?v+=1:(p=0,u=!1)}a=this.keyframesMetadata[v]||{};var y,g=n.t-s,_=r.t-s;if(r.to){a.bezierData||(a.bezierData=bez.buildBezierData(r.s,n.s||r.e,r.to,r.ti));var C=a.bezierData;if(t>=g||t<_){var E=t>=g?C.points.length-1:0;for(l=C.points[E].point.length,c=0;c<l;c+=1)i[c]=C.points[E].point[c]}else{a.__fnct?m=a.__fnct:(m=BezierFactory.getBezierEasing(r.o.x,r.o.y,r.i.x,r.i.y,r.n).get,a.__fnct=m),o=m((t-_)/(g-_));var I,T=C.segmentLength*o,x=e.lastFrame<t&&e._lastKeyframeIndex===v?e._lastAddedLength:0;for(h=e.lastFrame<t&&e._lastKeyframeIndex===v?e._lastPoint:0,u=!0,d=C.points.length;u;){if(x+=C.points[h].partialLength,0===T||0===o||h===C.points.length-1){for(l=C.points[h].point.length,c=0;c<l;c+=1)i[c]=C.points[h].point[c];break}if(T>=x&&T<x+C.points[h+1].partialLength){for(I=(T-x)/C.points[h+1].partialLength,l=C.points[h].point.length,c=0;c<l;c+=1)i[c]=C.points[h].point[c]+(C.points[h+1].point[c]-C.points[h].point[c])*I;break}h<d-1?h+=1:u=!1}e._lastPoint=h,e._lastAddedLength=x-C.points[h].partialLength,e._lastKeyframeIndex=v}}else{var S,P,b,A,w;if(f=r.s.length,y=n.s||r.e,this.sh&&1!==r.h)if(t>=g)i[0]=y[0],i[1]=y[1],i[2]=y[2];else if(t<=_)i[0]=r.s[0],i[1]=r.s[1],i[2]=r.s[2];else{quaternionToEuler(i,slerp(createQuaternion(r.s),createQuaternion(y),(t-_)/(g-_)))}else for(v=0;v<f;v+=1)1!==r.h&&(t>=g?o=1:t<_?o=0:(r.o.x.constructor===Array?(a.__fnct||(a.__fnct=[]),a.__fnct[v]?m=a.__fnct[v]:(S=void 0===r.o.x[v]?r.o.x[0]:r.o.x[v],P=void 0===r.o.y[v]?r.o.y[0]:r.o.y[v],b=void 0===r.i.x[v]?r.i.x[0]:r.i.x[v],A=void 0===r.i.y[v]?r.i.y[0]:r.i.y[v],m=BezierFactory.getBezierEasing(S,P,b,A).get,a.__fnct[v]=m)):a.__fnct?m=a.__fnct:(S=r.o.x,P=r.o.y,b=r.i.x,A=r.i.y,m=BezierFactory.getBezierEasing(S,P,b,A).get,r.keyframeMetadata=m),o=m((t-_)/(g-_)))),y=n.s||r.e,w=1===r.h?r.s[v]:r.s[v]+(y[v]-r.s[v])*o,"multidimensional"===this.propType?i[v]=w:i=w}return e.lastIndex=p,i}function slerp(t,e,i){var s,r,n,a,c,l=[],o=t[0],d=t[1],h=t[2],m=t[3],p=e[0],v=e[1],f=e[2],u=e[3];return(r=o*p+d*v+h*f+m*u)<0&&(r=-r,p=-p,v=-v,f=-f,u=-u),1-r>1e-6?(s=Math.acos(r),n=Math.sin(s),a=Math.sin((1-i)*s)/n,c=Math.sin(i*s)/n):(a=1-i,c=i),l[0]=a*o+c*p,l[1]=a*d+c*v,l[2]=a*h+c*f,l[3]=a*m+c*u,l}function quaternionToEuler(t,e){var i=e[0],s=e[1],r=e[2],n=e[3],a=Math.atan2(2*s*n-2*i*r,1-2*s*s-2*r*r),c=Math.asin(2*i*s+2*r*n),l=Math.atan2(2*i*n-2*s*r,1-2*i*i-2*r*r);t[0]=a/degToRads,t[1]=c/degToRads,t[2]=l/degToRads}function createQuaternion(t){var e=t[0]*degToRads,i=t[1]*degToRads,s=t[2]*degToRads,r=Math.cos(e/2),n=Math.cos(i/2),a=Math.cos(s/2),c=Math.sin(e/2),l=Math.sin(i/2),o=Math.sin(s/2);return[c*l*a+r*n*o,c*n*a+r*l*o,r*l*a-c*n*o,r*n*a-c*l*o]}function getValueAtCurrentTime(){var t=this.comp.renderedFrame-this.offsetTime,e=this.keyframes[0].t-this.offsetTime,i=this.keyframes[this.keyframes.length-1].t-this.offsetTime;if(!(t===this._caching.lastFrame||this._caching.lastFrame!==initFrame&&(this._caching.lastFrame>=i&&t>=i||this._caching.lastFrame<e&&t<e))){this._caching.lastFrame>=t&&(this._caching._lastKeyframeIndex=-1,this._caching.lastIndex=0);var s=this.interpolateValue(t,this._caching);this.pv=s}return this._caching.lastFrame=t,this.pv}function setVValue(t){var e;if("unidimensional"===this.propType)e=t*this.mult,mathAbs(this.v-e)>1e-5&&(this.v=e,this._mdf=!0);else for(var i=0,s=this.v.length;i<s;)e=t[i]*this.mult,mathAbs(this.v[i]-e)>1e-5&&(this.v[i]=e,this._mdf=!0),i+=1}function processEffectsSequence(){if(this.elem.globalData.frameId!==this.frameId&&this.effectsSequence.length)if(this.lock)this.setVValue(this.pv);else{var t;this.lock=!0,this._mdf=this._isFirstFrame;var e=this.effectsSequence.length,i=this.kf?this.pv:this.data.k;for(t=0;t<e;t+=1)i=this.effectsSequence[t](i);this.setVValue(i),this._isFirstFrame=!1,this.lock=!1,this.frameId=this.elem.globalData.frameId}}function addEffect(t){this.effectsSequence.push(t),this.container.addDynamicProperty(this)}function ValueProperty(t,e,i,s){this.propType="unidimensional",this.mult=i||1,this.data=e,this.v=i?e.k*i:e.k,this.pv=e.k,this._mdf=!1,this.elem=t,this.container=s,this.comp=t.comp,this.k=!1,this.kf=!1,this.vel=0,this.effectsSequence=[],this._isFirstFrame=!0,this.getValue=processEffectsSequence,this.setVValue=setVValue,this.addEffect=addEffect}function MultiDimensionalProperty(t,e,i,s){var r;this.propType="multidimensional",this.mult=i||1,this.data=e,this._mdf=!1,this.elem=t,this.container=s,this.comp=t.comp,this.k=!1,this.kf=!1,this.frameId=-1;var n=e.k.length;for(this.v=createTypedArray("float32",n),this.pv=createTypedArray("float32",n),this.vel=createTypedArray("float32",n),r=0;r<n;r+=1)this.v[r]=e.k[r]*this.mult,this.pv[r]=e.k[r];this._isFirstFrame=!0,this.effectsSequence=[],this.getValue=processEffectsSequence,this.setVValue=setVValue,this.addEffect=addEffect}function KeyframedValueProperty(t,e,i,s){this.propType="unidimensional",this.keyframes=e.k,this.keyframesMetadata=[],this.offsetTime=t.data.st,this.frameId=-1,this._caching={lastFrame:initFrame,lastIndex:0,value:0,_lastKeyframeIndex:-1},this.k=!0,this.kf=!0,this.data=e,this.mult=i||1,this.elem=t,this.container=s,this.comp=t.comp,this.v=initFrame,this.pv=initFrame,this._isFirstFrame=!0,this.getValue=processEffectsSequence,this.setVValue=setVValue,this.interpolateValue=interpolateValue,this.effectsSequence=[getValueAtCurrentTime.bind(this)],this.addEffect=addEffect}function KeyframedMultidimensionalProperty(t,e,i,s){var r;this.propType="multidimensional";var n,a,c,l,o=e.k.length;for(r=0;r<o-1;r+=1)e.k[r].to&&e.k[r].s&&e.k[r+1]&&e.k[r+1].s&&(n=e.k[r].s,a=e.k[r+1].s,c=e.k[r].to,l=e.k[r].ti,(2===n.length&&(n[0]!==a[0]||n[1]!==a[1])&&bez.pointOnLine2D(n[0],n[1],a[0],a[1],n[0]+c[0],n[1]+c[1])&&bez.pointOnLine2D(n[0],n[1],a[0],a[1],a[0]+l[0],a[1]+l[1])||3===n.length&&(n[0]!==a[0]||n[1]!==a[1]||n[2]!==a[2])&&bez.pointOnLine3D(n[0],n[1],n[2],a[0],a[1],a[2],n[0]+c[0],n[1]+c[1],n[2]+c[2])&&bez.pointOnLine3D(n[0],n[1],n[2],a[0],a[1],a[2],a[0]+l[0],a[1]+l[1],a[2]+l[2]))&&(e.k[r].to=null,e.k[r].ti=null),n[0]===a[0]&&n[1]===a[1]&&0===c[0]&&0===c[1]&&0===l[0]&&0===l[1]&&(2===n.length||n[2]===a[2]&&0===c[2]&&0===l[2])&&(e.k[r].to=null,e.k[r].ti=null));this.effectsSequence=[getValueAtCurrentTime.bind(this)],this.data=e,this.keyframes=e.k,this.keyframesMetadata=[],this.offsetTime=t.data.st,this.k=!0,this.kf=!0,this._isFirstFrame=!0,this.mult=i||1,this.elem=t,this.container=s,this.comp=t.comp,this.getValue=processEffectsSequence,this.setVValue=setVValue,this.interpolateValue=interpolateValue,this.frameId=-1;var d=e.k[0].s.length;for(this.v=createTypedArray("float32",d),this.pv=createTypedArray("float32",d),r=0;r<d;r+=1)this.v[r]=initFrame,this.pv[r]=initFrame;this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray("float32",d)},this.addEffect=addEffect}const PropertyFactory={getProp:function(t,e,i,s,r){var n;if(e.sid&&(e=t.globalData.slotManager.getProp(e)),e.k.length)if("number"==typeof e.k[0])n=new MultiDimensionalProperty(t,e,s,r);else switch(i){case 0:n=new KeyframedValueProperty(t,e,s,r);break;case 1:n=new KeyframedMultidimensionalProperty(t,e,s,r)}else n=new ValueProperty(t,e,s,r);return n.effectsSequence.length&&r.addDynamicProperty(n),n}};function DynamicPropertyContainer(){}DynamicPropertyContainer.prototype={addDynamicProperty:function(t){-1===this.dynamicProperties.indexOf(t)&&(this.dynamicProperties.push(t),this.container.addDynamicProperty(this),this._isAnimated=!0)},iterateDynamicProperties:function(){var t;this._mdf=!1;var e=this.dynamicProperties.length;for(t=0;t<e;t+=1)this.dynamicProperties[t].getValue(),this.dynamicProperties[t]._mdf&&(this._mdf=!0)},initDynamicPropertyContainer:function(t){this.container=t,this.dynamicProperties=[],this._mdf=!1,this._isAnimated=!1}};const pointPool=poolFactory(8,(function(){return createTypedArray("float32",2)}));function ShapePath(){this.c=!1,this._length=0,this._maxLength=8,this.v=createSizedArray(this._maxLength),this.o=createSizedArray(this._maxLength),this.i=createSizedArray(this._maxLength)}ShapePath.prototype.setPathData=function(t,e){this.c=t,this.setLength(e);for(var i=0;i<e;)this.v[i]=pointPool.newElement(),this.o[i]=pointPool.newElement(),this.i[i]=pointPool.newElement(),i+=1},ShapePath.prototype.setLength=function(t){for(;this._maxLength<t;)this.doubleArrayLength();this._length=t},ShapePath.prototype.doubleArrayLength=function(){this.v=this.v.concat(createSizedArray(this._maxLength)),this.i=this.i.concat(createSizedArray(this._maxLength)),this.o=this.o.concat(createSizedArray(this._maxLength)),this._maxLength*=2},ShapePath.prototype.setXYAt=function(t,e,i,s,r){var n;switch(this._length=Math.max(this._length,s+1),this._length>=this._maxLength&&this.doubleArrayLength(),i){case"v":n=this.v;break;case"i":n=this.i;break;case"o":n=this.o;break;default:n=[]}(!n[s]||n[s]&&!r)&&(n[s]=pointPool.newElement()),n[s][0]=t,n[s][1]=e},ShapePath.prototype.setTripleAt=function(t,e,i,s,r,n,a,c){this.setXYAt(t,e,"v",a,c),this.setXYAt(i,s,"o",a,c),this.setXYAt(r,n,"i",a,c)},ShapePath.prototype.reverse=function(){var t=new ShapePath;t.setPathData(this.c,this._length);var e=this.v,i=this.o,s=this.i,r=0;this.c&&(t.setTripleAt(e[0][0],e[0][1],s[0][0],s[0][1],i[0][0],i[0][1],0,!1),r=1);var n,a=this._length-1,c=this._length;for(n=r;n<c;n+=1)t.setTripleAt(e[a][0],e[a][1],s[a][0],s[a][1],i[a][0],i[a][1],n,!1),a-=1;return t},ShapePath.prototype.length=function(){return this._length};const shapePool=(factory=poolFactory(4,(function(){return new ShapePath}),(function(t){var e,i=t._length;for(e=0;e<i;e+=1)pointPool.release(t.v[e]),pointPool.release(t.i[e]),pointPool.release(t.o[e]),t.v[e]=null,t.i[e]=null,t.o[e]=null;t._length=0,t.c=!1})),factory.clone=function(t){var e,i=factory.newElement(),s=void 0===t._length?t.v.length:t._length;for(i.setLength(s),i.c=t.c,e=0;e<s;e+=1)i.setTripleAt(t.v[e][0],t.v[e][1],t.o[e][0],t.o[e][1],t.i[e][0],t.i[e][1],e);return i},factory);var factory;function ShapeCollection(){this._length=0,this._maxLength=4,this.shapes=createSizedArray(this._maxLength)}ShapeCollection.prototype.addShape=function(t){this._length===this._maxLength&&(this.shapes=this.shapes.concat(createSizedArray(this._maxLength)),this._maxLength*=2),this.shapes[this._length]=t,this._length+=1},ShapeCollection.prototype.releaseShapes=function(){var t;for(t=0;t<this._length;t+=1)shapePool.release(this.shapes[t]);this._length=0};const shapeCollectionPool=(ob2={newShapeCollection:function(){return _length?pool[_length-=1]:new ShapeCollection},release:function(t){var e,i=t._length;for(e=0;e<i;e+=1)shapePool.release(t.shapes[e]);t._length=0,_length===_maxLength&&(pool=pooling.double(pool),_maxLength*=2),pool[_length]=t,_length+=1}},_length=0,_maxLength=4,pool=createSizedArray(_maxLength),ob2);var ob2,_length,_maxLength,pool;const ShapePropertyFactory=function(){var t=-999999;function e(t,e,i){var s,r,n,a,c,l,o,d,h,m=i.lastIndex,p=this.keyframes;if(t<p[0].t-this.offsetTime)s=p[0].s[0],n=!0,m=0;else if(t>=p[p.length-1].t-this.offsetTime)s=p[p.length-1].s?p[p.length-1].s[0]:p[p.length-2].e[0],n=!0;else{for(var v,f,u,y=m,g=p.length-1,_=!0;_&&(v=p[y],!((f=p[y+1]).t-this.offsetTime>t));)y<g-1?y+=1:_=!1;if(u=this.keyframesMetadata[y]||{},m=y,!(n=1===v.h)){if(t>=f.t-this.offsetTime)d=1;else if(t<v.t-this.offsetTime)d=0;else{var C;u.__fnct?C=u.__fnct:(C=BezierFactory.getBezierEasing(v.o.x,v.o.y,v.i.x,v.i.y).get,u.__fnct=C),d=C((t-(v.t-this.offsetTime))/(f.t-this.offsetTime-(v.t-this.offsetTime)))}r=f.s?f.s[0]:v.e[0]}s=v.s[0]}for(l=e._length,o=s.i[0].length,i.lastIndex=m,a=0;a<l;a+=1)for(c=0;c<o;c+=1)h=n?s.i[a][c]:s.i[a][c]+(r.i[a][c]-s.i[a][c])*d,e.i[a][c]=h,h=n?s.o[a][c]:s.o[a][c]+(r.o[a][c]-s.o[a][c])*d,e.o[a][c]=h,h=n?s.v[a][c]:s.v[a][c]+(r.v[a][c]-s.v[a][c])*d,e.v[a][c]=h}function i(){var e=this.comp.renderedFrame-this.offsetTime,i=this.keyframes[0].t-this.offsetTime,s=this.keyframes[this.keyframes.length-1].t-this.offsetTime,r=this._caching.lastFrame;return r!==t&&(r<i&&e<i||r>s&&e>s)||(this._caching.lastIndex=r<e?this._caching.lastIndex:0,this.interpolateShape(e,this.pv,this._caching)),this._caching.lastFrame=e,this.pv}function s(){this.paths=this.localShapeCollection}function r(t){(function(t,e){if(t._length!==e._length||t.c!==e.c)return!1;var i,s=t._length;for(i=0;i<s;i+=1)if(t.v[i][0]!==e.v[i][0]||t.v[i][1]!==e.v[i][1]||t.o[i][0]!==e.o[i][0]||t.o[i][1]!==e.o[i][1]||t.i[i][0]!==e.i[i][0]||t.i[i][1]!==e.i[i][1])return!1;return!0})(this.v,t)||(this.v=shapePool.clone(t),this.localShapeCollection.releaseShapes(),this.localShapeCollection.addShape(this.v),this._mdf=!0,this.paths=this.localShapeCollection)}function n(){if(this.elem.globalData.frameId!==this.frameId)if(this.effectsSequence.length)if(this.lock)this.setVValue(this.pv);else{var t,e;this.lock=!0,this._mdf=!1,t=this.kf?this.pv:this.data.ks?this.data.ks.k:this.data.pt.k;var i=this.effectsSequence.length;for(e=0;e<i;e+=1)t=this.effectsSequence[e](t);this.setVValue(t),this.lock=!1,this.frameId=this.elem.globalData.frameId}else this._mdf=!1}function a(t,e,i){this.propType="shape",this.comp=t.comp,this.container=t,this.elem=t,this.data=e,this.k=!1,this.kf=!1,this._mdf=!1;var r=3===i?e.pt.k:e.ks.k;this.v=shapePool.clone(r),this.pv=shapePool.clone(this.v),this.localShapeCollection=shapeCollectionPool.newShapeCollection(),this.paths=this.localShapeCollection,this.paths.addShape(this.v),this.reset=s,this.effectsSequence=[]}function c(t){this.effectsSequence.push(t),this.container.addDynamicProperty(this)}function l(e,r,n){this.propType="shape",this.comp=e.comp,this.elem=e,this.container=e,this.offsetTime=e.data.st,this.keyframes=3===n?r.pt.k:r.ks.k,this.keyframesMetadata=[],this.k=!0,this.kf=!0;var a=this.keyframes[0].s[0].i.length;this.v=shapePool.newElement(),this.v.setPathData(this.keyframes[0].s[0].c,a),this.pv=shapePool.clone(this.v),this.localShapeCollection=shapeCollectionPool.newShapeCollection(),this.paths=this.localShapeCollection,this.paths.addShape(this.v),this.lastFrame=t,this.reset=s,this._caching={lastFrame:t,lastIndex:0},this.effectsSequence=[i.bind(this)]}a.prototype.interpolateShape=e,a.prototype.getValue=n,a.prototype.setVValue=r,a.prototype.addEffect=c,l.prototype.getValue=n,l.prototype.interpolateShape=e,l.prototype.setVValue=r,l.prototype.addEffect=c;var o=function(){var t=roundCorner;function e(t,e){this.v=shapePool.newElement(),this.v.setPathData(!0,4),this.localShapeCollection=shapeCollectionPool.newShapeCollection(),this.paths=this.localShapeCollection,this.localShapeCollection.addShape(this.v),this.d=e.d,this.elem=t,this.comp=t.comp,this.frameId=-1,this.initDynamicPropertyContainer(t),this.p=PropertyFactory.getProp(t,e.p,1,0,this),this.s=PropertyFactory.getProp(t,e.s,1,0,this),this.dynamicProperties.length?this.k=!0:(this.k=!1,this.convertEllToPath())}return e.prototype={reset:s,getValue:function(){this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties(),this._mdf&&this.convertEllToPath())},convertEllToPath:function(){var e=this.p.v[0],i=this.p.v[1],s=this.s.v[0]/2,r=this.s.v[1]/2,n=3!==this.d,a=this.v;a.v[0][0]=e,a.v[0][1]=i-r,a.v[1][0]=n?e+s:e-s,a.v[1][1]=i,a.v[2][0]=e,a.v[2][1]=i+r,a.v[3][0]=n?e-s:e+s,a.v[3][1]=i,a.i[0][0]=n?e-s*t:e+s*t,a.i[0][1]=i-r,a.i[1][0]=n?e+s:e-s,a.i[1][1]=i-r*t,a.i[2][0]=n?e+s*t:e-s*t,a.i[2][1]=i+r,a.i[3][0]=n?e-s:e+s,a.i[3][1]=i+r*t,a.o[0][0]=n?e+s*t:e-s*t,a.o[0][1]=i-r,a.o[1][0]=n?e+s:e-s,a.o[1][1]=i+r*t,a.o[2][0]=n?e-s*t:e+s*t,a.o[2][1]=i+r,a.o[3][0]=n?e-s:e+s,a.o[3][1]=i-r*t}},extendPrototype([DynamicPropertyContainer],e),e}(),d=function(){function t(t,e){this.v=shapePool.newElement(),this.v.setPathData(!0,0),this.elem=t,this.comp=t.comp,this.data=e,this.frameId=-1,this.d=e.d,this.initDynamicPropertyContainer(t),1===e.sy?(this.ir=PropertyFactory.getProp(t,e.ir,0,0,this),this.is=PropertyFactory.getProp(t,e.is,0,.01,this),this.convertToPath=this.convertStarToPath):this.convertToPath=this.convertPolygonToPath,this.pt=PropertyFactory.getProp(t,e.pt,0,0,this),this.p=PropertyFactory.getProp(t,e.p,1,0,this),this.r=PropertyFactory.getProp(t,e.r,0,degToRads,this),this.or=PropertyFactory.getProp(t,e.or,0,0,this),this.os=PropertyFactory.getProp(t,e.os,0,.01,this),this.localShapeCollection=shapeCollectionPool.newShapeCollection(),this.localShapeCollection.addShape(this.v),this.paths=this.localShapeCollection,this.dynamicProperties.length?this.k=!0:(this.k=!1,this.convertToPath())}return t.prototype={reset:s,getValue:function(){this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties(),this._mdf&&this.convertToPath())},convertStarToPath:function(){var t,e,i,s,r=2*Math.floor(this.pt.v),n=2*Math.PI/r,a=!0,c=this.or.v,l=this.ir.v,o=this.os.v,d=this.is.v,h=2*Math.PI*c/(2*r),m=2*Math.PI*l/(2*r),p=-Math.PI/2;p+=this.r.v;var v=3===this.data.d?-1:1;for(this.v._length=0,t=0;t<r;t+=1){i=a?o:d,s=a?h:m;var f=(e=a?c:l)*Math.cos(p),u=e*Math.sin(p),y=0===f&&0===u?0:u/Math.sqrt(f*f+u*u),g=0===f&&0===u?0:-f/Math.sqrt(f*f+u*u);f+=+this.p.v[0],u+=+this.p.v[1],this.v.setTripleAt(f,u,f-y*s*i*v,u-g*s*i*v,f+y*s*i*v,u+g*s*i*v,t,!0),a=!a,p+=n*v}},convertPolygonToPath:function(){var t,e=Math.floor(this.pt.v),i=2*Math.PI/e,s=this.or.v,r=this.os.v,n=2*Math.PI*s/(4*e),a=.5*-Math.PI,c=3===this.data.d?-1:1;for(a+=this.r.v,this.v._length=0,t=0;t<e;t+=1){var l=s*Math.cos(a),o=s*Math.sin(a),d=0===l&&0===o?0:o/Math.sqrt(l*l+o*o),h=0===l&&0===o?0:-l/Math.sqrt(l*l+o*o);l+=+this.p.v[0],o+=+this.p.v[1],this.v.setTripleAt(l,o,l-d*n*r*c,o-h*n*r*c,l+d*n*r*c,o+h*n*r*c,t,!0),a+=i*c}this.paths.length=0,this.paths[0]=this.v}},extendPrototype([DynamicPropertyContainer],t),t}(),h=function(){function t(t,e){this.v=shapePool.newElement(),this.v.c=!0,this.localShapeCollection=shapeCollectionPool.newShapeCollection(),this.localShapeCollection.addShape(this.v),this.paths=this.localShapeCollection,this.elem=t,this.comp=t.comp,this.frameId=-1,this.d=e.d,this.initDynamicPropertyContainer(t),this.p=PropertyFactory.getProp(t,e.p,1,0,this),this.s=PropertyFactory.getProp(t,e.s,1,0,this),this.r=PropertyFactory.getProp(t,e.r,0,0,this),this.dynamicProperties.length?this.k=!0:(this.k=!1,this.convertRectToPath())}return t.prototype={convertRectToPath:function(){var t=this.p.v[0],e=this.p.v[1],i=this.s.v[0]/2,s=this.s.v[1]/2,r=bmMin(i,s,this.r.v),n=r*(1-roundCorner);this.v._length=0,2===this.d||1===this.d?(this.v.setTripleAt(t+i,e-s+r,t+i,e-s+r,t+i,e-s+n,0,!0),this.v.setTripleAt(t+i,e+s-r,t+i,e+s-n,t+i,e+s-r,1,!0),0!==r?(this.v.setTripleAt(t+i-r,e+s,t+i-r,e+s,t+i-n,e+s,2,!0),this.v.setTripleAt(t-i+r,e+s,t-i+n,e+s,t-i+r,e+s,3,!0),this.v.setTripleAt(t-i,e+s-r,t-i,e+s-r,t-i,e+s-n,4,!0),this.v.setTripleAt(t-i,e-s+r,t-i,e-s+n,t-i,e-s+r,5,!0),this.v.setTripleAt(t-i+r,e-s,t-i+r,e-s,t-i+n,e-s,6,!0),this.v.setTripleAt(t+i-r,e-s,t+i-n,e-s,t+i-r,e-s,7,!0)):(this.v.setTripleAt(t-i,e+s,t-i+n,e+s,t-i,e+s,2),this.v.setTripleAt(t-i,e-s,t-i,e-s+n,t-i,e-s,3))):(this.v.setTripleAt(t+i,e-s+r,t+i,e-s+n,t+i,e-s+r,0,!0),0!==r?(this.v.setTripleAt(t+i-r,e-s,t+i-r,e-s,t+i-n,e-s,1,!0),this.v.setTripleAt(t-i+r,e-s,t-i+n,e-s,t-i+r,e-s,2,!0),this.v.setTripleAt(t-i,e-s+r,t-i,e-s+r,t-i,e-s+n,3,!0),this.v.setTripleAt(t-i,e+s-r,t-i,e+s-n,t-i,e+s-r,4,!0),this.v.setTripleAt(t-i+r,e+s,t-i+r,e+s,t-i+n,e+s,5,!0),this.v.setTripleAt(t+i-r,e+s,t+i-n,e+s,t+i-r,e+s,6,!0),this.v.setTripleAt(t+i,e+s-r,t+i,e+s-r,t+i,e+s-n,7,!0)):(this.v.setTripleAt(t-i,e-s,t-i+n,e-s,t-i,e-s,1,!0),this.v.setTripleAt(t-i,e+s,t-i,e+s-n,t-i,e+s,2,!0),this.v.setTripleAt(t+i,e+s,t+i-n,e+s,t+i,e+s,3,!0)))},getValue:function(){this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties(),this._mdf&&this.convertRectToPath())},reset:s},extendPrototype([DynamicPropertyContainer],t),t}();var m={getShapeProp:function(t,e,i){var s;return 3===i||4===i?s=(3===i?e.pt:e.ks).k.length?new l(t,e,i):new a(t,e,i):5===i?s=new h(t,e):6===i?s=new o(t,e):7===i&&(s=new d(t,e)),s.k&&t.addDynamicProperty(s),s},getConstructorFunction:function(){return a},getKeyframedConstructorFunction:function(){return l}};return m}(),Matrix=function(){var t=Math.cos,e=Math.sin,i=Math.tan,s=Math.round;function r(){return this.props[0]=1,this.props[1]=0,this.props[2]=0,this.props[3]=0,this.props[4]=0,this.props[5]=1,this.props[6]=0,this.props[7]=0,this.props[8]=0,this.props[9]=0,this.props[10]=1,this.props[11]=0,this.props[12]=0,this.props[13]=0,this.props[14]=0,this.props[15]=1,this}function n(i){if(0===i)return this;var s=t(i),r=e(i);return this._t(s,-r,0,0,r,s,0,0,0,0,1,0,0,0,0,1)}function a(i){if(0===i)return this;var s=t(i),r=e(i);return this._t(1,0,0,0,0,s,-r,0,0,r,s,0,0,0,0,1)}function c(i){if(0===i)return this;var s=t(i),r=e(i);return this._t(s,0,r,0,0,1,0,0,-r,0,s,0,0,0,0,1)}function l(i){if(0===i)return this;var s=t(i),r=e(i);return this._t(s,-r,0,0,r,s,0,0,0,0,1,0,0,0,0,1)}function o(t,e){return this._t(1,e,t,1,0,0)}function d(t,e){return this.shear(i(t),i(e))}function h(s,r){var n=t(r),a=e(r);return this._t(n,a,0,0,-a,n,0,0,0,0,1,0,0,0,0,1)._t(1,0,0,0,i(s),1,0,0,0,0,1,0,0,0,0,1)._t(n,-a,0,0,a,n,0,0,0,0,1,0,0,0,0,1)}function m(t,e,i){return i||0===i||(i=1),1===t&&1===e&&1===i?this:this._t(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1)}function p(t,e,i,s,r,n,a,c,l,o,d,h,m,p,v,f){return this.props[0]=t,this.props[1]=e,this.props[2]=i,this.props[3]=s,this.props[4]=r,this.props[5]=n,this.props[6]=a,this.props[7]=c,this.props[8]=l,this.props[9]=o,this.props[10]=d,this.props[11]=h,this.props[12]=m,this.props[13]=p,this.props[14]=v,this.props[15]=f,this}function v(t,e,i){return i=i||0,0!==t||0!==e||0!==i?this._t(1,0,0,0,0,1,0,0,0,0,1,0,t,e,i,1):this}function f(t,e,i,s,r,n,a,c,l,o,d,h,m,p,v,f){var u=this.props;if(1===t&&0===e&&0===i&&0===s&&0===r&&1===n&&0===a&&0===c&&0===l&&0===o&&1===d&&0===h)return u[12]=u[12]*t+u[15]*m,u[13]=u[13]*n+u[15]*p,u[14]=u[14]*d+u[15]*v,u[15]*=f,this._identityCalculated=!1,this;var y=u[0],g=u[1],_=u[2],C=u[3],E=u[4],I=u[5],T=u[6],x=u[7],S=u[8],P=u[9],b=u[10],A=u[11],w=u[12],M=u[13],O=u[14],D=u[15];return u[0]=y*t+g*r+_*l+C*m,u[1]=y*e+g*n+_*o+C*p,u[2]=y*i+g*a+_*d+C*v,u[3]=y*s+g*c+_*h+C*f,u[4]=E*t+I*r+T*l+x*m,u[5]=E*e+I*n+T*o+x*p,u[6]=E*i+I*a+T*d+x*v,u[7]=E*s+I*c+T*h+x*f,u[8]=S*t+P*r+b*l+A*m,u[9]=S*e+P*n+b*o+A*p,u[10]=S*i+P*a+b*d+A*v,u[11]=S*s+P*c+b*h+A*f,u[12]=w*t+M*r+O*l+D*m,u[13]=w*e+M*n+O*o+D*p,u[14]=w*i+M*a+O*d+D*v,u[15]=w*s+M*c+O*h+D*f,this._identityCalculated=!1,this}function u(t){var e=t.props;return this.transform(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])}function y(){return this._identityCalculated||(this._identity=!(1!==this.props[0]||0!==this.props[1]||0!==this.props[2]||0!==this.props[3]||0!==this.props[4]||1!==this.props[5]||0!==this.props[6]||0!==this.props[7]||0!==this.props[8]||0!==this.props[9]||1!==this.props[10]||0!==this.props[11]||0!==this.props[12]||0!==this.props[13]||0!==this.props[14]||1!==this.props[15]),this._identityCalculated=!0),this._identity}function g(t){for(var e=0;e<16;){if(t.props[e]!==this.props[e])return!1;e+=1}return!0}function _(t){var e;for(e=0;e<16;e+=1)t.props[e]=this.props[e];return t}function C(t){var e;for(e=0;e<16;e+=1)this.props[e]=t[e]}function E(t,e,i){return{x:t*this.props[0]+e*this.props[4]+i*this.props[8]+this.props[12],y:t*this.props[1]+e*this.props[5]+i*this.props[9]+this.props[13],z:t*this.props[2]+e*this.props[6]+i*this.props[10]+this.props[14]}}function I(t,e,i){return t*this.props[0]+e*this.props[4]+i*this.props[8]+this.props[12]}function T(t,e,i){return t*this.props[1]+e*this.props[5]+i*this.props[9]+this.props[13]}function x(t,e,i){return t*this.props[2]+e*this.props[6]+i*this.props[10]+this.props[14]}function S(){var t=this.props[0]*this.props[5]-this.props[1]*this.props[4],e=this.props[5]/t,i=-this.props[1]/t,s=-this.props[4]/t,r=this.props[0]/t,n=(this.props[4]*this.props[13]-this.props[5]*this.props[12])/t,a=-(this.props[0]*this.props[13]-this.props[1]*this.props[12])/t,c=new Matrix;return c.props[0]=e,c.props[1]=i,c.props[4]=s,c.props[5]=r,c.props[12]=n,c.props[13]=a,c}function P(t){return this.getInverseMatrix().applyToPointArray(t[0],t[1],t[2]||0)}function b(t){var e,i=t.length,s=[];for(e=0;e<i;e+=1)s[e]=P(t[e]);return s}function A(t,e,i){var s=createTypedArray("float32",6);if(this.isIdentity())s[0]=t[0],s[1]=t[1],s[2]=e[0],s[3]=e[1],s[4]=i[0],s[5]=i[1];else{var r=this.props[0],n=this.props[1],a=this.props[4],c=this.props[5],l=this.props[12],o=this.props[13];s[0]=t[0]*r+t[1]*a+l,s[1]=t[0]*n+t[1]*c+o,s[2]=e[0]*r+e[1]*a+l,s[3]=e[0]*n+e[1]*c+o,s[4]=i[0]*r+i[1]*a+l,s[5]=i[0]*n+i[1]*c+o}return s}function w(t,e,i){return this.isIdentity()?[t,e,i]:[t*this.props[0]+e*this.props[4]+i*this.props[8]+this.props[12],t*this.props[1]+e*this.props[5]+i*this.props[9]+this.props[13],t*this.props[2]+e*this.props[6]+i*this.props[10]+this.props[14]]}function M(t,e){if(this.isIdentity())return t+","+e;var i=this.props;return Math.round(100*(t*i[0]+e*i[4]+i[12]))/100+","+Math.round(100*(t*i[1]+e*i[5]+i[13]))/100}function O(){for(var t=0,e=this.props,i="matrix3d(";t<16;)i+=s(1e4*e[t])/1e4,i+=15===t?")":",",t+=1;return i}function D(t){return t<1e-6&&t>0||t>-1e-6&&t<0?s(1e4*t)/1e4:t}function L(){var t=this.props;return"matrix("+D(t[0])+","+D(t[1])+","+D(t[4])+","+D(t[5])+","+D(t[12])+","+D(t[13])+")"}return function(){this.reset=r,this.rotate=n,this.rotateX=a,this.rotateY=c,this.rotateZ=l,this.skew=d,this.skewFromAxis=h,this.shear=o,this.scale=m,this.setTransform=p,this.translate=v,this.transform=f,this.multiply=u,this.applyToPoint=E,this.applyToX=I,this.applyToY=T,this.applyToZ=x,this.applyToPointArray=w,this.applyToTriplePoints=A,this.applyToPointStringified=M,this.toCSS=O,this.to2dCSS=L,this.clone=_,this.cloneFromProps=C,this.equals=g,this.inversePoints=b,this.inversePoint=P,this.getInverseMatrix=S,this._t=this.transform,this.isIdentity=y,this._identity=!0,this._identityCalculated=!1,this.props=createTypedArray("float32",16),this.reset()}}(),lottie={};
/*!
 Transformation Matrix v2.0
 (c) Epistemex 2014-2015
 www.epistemex.com
 By Ken Fyrstenberg
 Contributions by leeoniya.
 License: MIT, header required.
 */function setLocation(t){setLocationHref(t)}function searchAnimations(){animationManager.searchAnimations()}function setSubframeRendering(t){setSubframeEnabled(t)}function setPrefix(t){setIdPrefix(t)}function loadAnimation(t){return animationManager.loadAnimation(t)}function setQuality(t){if("string"==typeof t)switch(t){case"high":setDefaultCurveSegments(200);break;default:case"medium":setDefaultCurveSegments(50);break;case"low":setDefaultCurveSegments(10)}else!isNaN(t)&&t>1&&setDefaultCurveSegments(t)}function inBrowser(){return"undefined"!=typeof navigator}function installPlugin(t,e){"expressions"===t&&setExpressionsPlugin(e)}function getFactory(t){switch(t){case"propertyFactory":return PropertyFactory;case"shapePropertyFactory":return ShapePropertyFactory;case"matrix":return Matrix;default:return null}}function checkReady(){"complete"===document.readyState&&(clearInterval(readyStateCheckInterval),searchAnimations())}function getQueryVariable(t){for(var e=queryString.split("&"),i=0;i<e.length;i+=1){var s=e[i].split("=");if(decodeURIComponent(s[0])==t)return decodeURIComponent(s[1])}return null}lottie.play=animationManager.play,lottie.pause=animationManager.pause,lottie.setLocationHref=setLocation,lottie.togglePause=animationManager.togglePause,lottie.setSpeed=animationManager.setSpeed,lottie.setDirection=animationManager.setDirection,lottie.stop=animationManager.stop,lottie.searchAnimations=searchAnimations,lottie.registerAnimation=animationManager.registerAnimation,lottie.loadAnimation=loadAnimation,lottie.setSubframeRendering=setSubframeRendering,lottie.resize=animationManager.resize,lottie.goToAndStop=animationManager.goToAndStop,lottie.destroy=animationManager.destroy,lottie.setQuality=setQuality,lottie.inBrowser=inBrowser,lottie.installPlugin=installPlugin,lottie.freeze=animationManager.freeze,lottie.unfreeze=animationManager.unfreeze,lottie.setVolume=animationManager.setVolume,lottie.mute=animationManager.mute,lottie.unmute=animationManager.unmute,lottie.getRegisteredAnimations=animationManager.getRegisteredAnimations,lottie.useWebWorker=setWebWorker,lottie.setIDPrefix=setPrefix,lottie.__getFactory=getFactory,lottie.version="[[BM_VERSION]]";var queryString="",scripts=document.getElementsByTagName("script"),index$1=scripts.length-1,myScript=scripts[index$1]||{src:""};queryString=myScript.src?myScript.src.replace(/^[^\?]+\??/,""):"",getQueryVariable("renderer");var readyStateCheckInterval=setInterval(checkReady,100);try{"object"==typeof exports&&"undefined"!=typeof module||"function"==typeof define&&define.amd||(window.bodymovin=lottie)}catch(err){}const ShapeModifiers=function(){var t={},e={};return t.registerModifier=function(t,i){e[t]||(e[t]=i)},t.getModifier=function(t,i,s){return new e[t](i,s)},t}();function ShapeModifier(){}function TrimModifier(){}function PuckerAndBloatModifier(){}ShapeModifier.prototype.initModifierProperties=function(){},ShapeModifier.prototype.addShapeToModifier=function(){},ShapeModifier.prototype.addShape=function(t){if(!this.closed){t.sh.container.addDynamicProperty(t.sh);var e={shape:t.sh,data:t,localShapeCollection:shapeCollectionPool.newShapeCollection()};this.shapes.push(e),this.addShapeToModifier(e),this._isAnimated&&t.setAsAnimated()}},ShapeModifier.prototype.init=function(t,e){this.shapes=[],this.elem=t,this.initDynamicPropertyContainer(t),this.initModifierProperties(t,e),this.frameId=initialDefaultFrame,this.closed=!1,this.k=!1,this.dynamicProperties.length?this.k=!0:this.getValue(!0)},ShapeModifier.prototype.processKeys=function(){this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties())},extendPrototype([DynamicPropertyContainer],ShapeModifier),extendPrototype([ShapeModifier],TrimModifier),TrimModifier.prototype.initModifierProperties=function(t,e){this.s=PropertyFactory.getProp(t,e.s,0,.01,this),this.e=PropertyFactory.getProp(t,e.e,0,.01,this),this.o=PropertyFactory.getProp(t,e.o,0,0,this),this.sValue=0,this.eValue=0,this.getValue=this.processKeys,this.m=e.m,this._isAnimated=!!this.s.effectsSequence.length||!!this.e.effectsSequence.length||!!this.o.effectsSequence.length},TrimModifier.prototype.addShapeToModifier=function(t){t.pathsData=[]},TrimModifier.prototype.calculateShapeEdges=function(t,e,i,s,r){var n=[];e<=1?n.push({s:t,e:e}):t>=1?n.push({s:t-1,e:e-1}):(n.push({s:t,e:1}),n.push({s:0,e:e-1}));var a,c,l=[],o=n.length;for(a=0;a<o;a+=1){var d,h;if(!((c=n[a]).e*r<s||c.s*r>s+i))d=c.s*r<=s?0:(c.s*r-s)/i,h=c.e*r>=s+i?1:(c.e*r-s)/i,l.push([d,h])}return l.length||l.push([0,0]),l},TrimModifier.prototype.releasePathsData=function(t){var e,i=t.length;for(e=0;e<i;e+=1)segmentsLengthPool.release(t[e]);return t.length=0,t},TrimModifier.prototype.processShapes=function(t){var e,i,s,r;if(this._mdf||t){var n=this.o.v%360/360;if(n<0&&(n+=1),(e=this.s.v>1?1+n:this.s.v<0?0+n:this.s.v+n)>(i=this.e.v>1?1+n:this.e.v<0?0+n:this.e.v+n)){var a=e;e=i,i=a}e=1e-4*Math.round(1e4*e),i=1e-4*Math.round(1e4*i),this.sValue=e,this.eValue=i}else e=this.sValue,i=this.eValue;var c,l,o,d,h,m=this.shapes.length,p=0;if(i===e)for(r=0;r<m;r+=1)this.shapes[r].localShapeCollection.releaseShapes(),this.shapes[r].shape._mdf=!0,this.shapes[r].shape.paths=this.shapes[r].localShapeCollection,this._mdf&&(this.shapes[r].pathsData.length=0);else if(1===i&&0===e||0===i&&1===e){if(this._mdf)for(r=0;r<m;r+=1)this.shapes[r].pathsData.length=0,this.shapes[r].shape._mdf=!0}else{var v,f,u=[];for(r=0;r<m;r+=1)if((v=this.shapes[r]).shape._mdf||this._mdf||t||2===this.m){if(l=(s=v.shape.paths)._length,h=0,!v.shape._mdf&&v.pathsData.length)h=v.totalShapeLength;else{for(o=this.releasePathsData(v.pathsData),c=0;c<l;c+=1)d=bez.getSegmentsLength(s.shapes[c]),o.push(d),h+=d.totalLength;v.totalShapeLength=h,v.pathsData=o}p+=h,v.shape._mdf=!0}else v.shape.paths=v.localShapeCollection;var y,g=e,_=i,C=0;for(r=m-1;r>=0;r-=1)if((v=this.shapes[r]).shape._mdf){for((f=v.localShapeCollection).releaseShapes(),2===this.m&&m>1?(y=this.calculateShapeEdges(e,i,v.totalShapeLength,C,p),C+=v.totalShapeLength):y=[[g,_]],l=y.length,c=0;c<l;c+=1){g=y[c][0],_=y[c][1],u.length=0,_<=1?u.push({s:v.totalShapeLength*g,e:v.totalShapeLength*_}):g>=1?u.push({s:v.totalShapeLength*(g-1),e:v.totalShapeLength*(_-1)}):(u.push({s:v.totalShapeLength*g,e:v.totalShapeLength}),u.push({s:0,e:v.totalShapeLength*(_-1)}));var E=this.addShapes(v,u[0]);if(u[0].s!==u[0].e){if(u.length>1)if(v.shape.paths.shapes[v.shape.paths._length-1].c){var I=E.pop();this.addPaths(E,f),E=this.addShapes(v,u[1],I)}else this.addPaths(E,f),E=this.addShapes(v,u[1]);this.addPaths(E,f)}}v.shape.paths=f}}},TrimModifier.prototype.addPaths=function(t,e){var i,s=t.length;for(i=0;i<s;i+=1)e.addShape(t[i])},TrimModifier.prototype.addSegment=function(t,e,i,s,r,n,a){r.setXYAt(e[0],e[1],"o",n),r.setXYAt(i[0],i[1],"i",n+1),a&&r.setXYAt(t[0],t[1],"v",n),r.setXYAt(s[0],s[1],"v",n+1)},TrimModifier.prototype.addSegmentFromArray=function(t,e,i,s){e.setXYAt(t[1],t[5],"o",i),e.setXYAt(t[2],t[6],"i",i+1),s&&e.setXYAt(t[0],t[4],"v",i),e.setXYAt(t[3],t[7],"v",i+1)},TrimModifier.prototype.addShapes=function(t,e,i){var s,r,n,a,c,l,o,d,h=t.pathsData,m=t.shape.paths.shapes,p=t.shape.paths._length,v=0,f=[],u=!0;for(i?(c=i._length,d=i._length):(i=shapePool.newElement(),c=0,d=0),f.push(i),s=0;s<p;s+=1){for(l=h[s].lengths,i.c=m[s].c,n=m[s].c?l.length:l.length+1,r=1;r<n;r+=1)if(v+(a=l[r-1]).addedLength<e.s)v+=a.addedLength,i.c=!1;else{if(v>e.e){i.c=!1;break}e.s<=v&&e.e>=v+a.addedLength?(this.addSegment(m[s].v[r-1],m[s].o[r-1],m[s].i[r],m[s].v[r],i,c,u),u=!1):(o=bez.getNewSegment(m[s].v[r-1],m[s].v[r],m[s].o[r-1],m[s].i[r],(e.s-v)/a.addedLength,(e.e-v)/a.addedLength,l[r-1]),this.addSegmentFromArray(o,i,c,u),u=!1,i.c=!1),v+=a.addedLength,c+=1}if(m[s].c&&l.length){if(a=l[r-1],v<=e.e){var y=l[r-1].addedLength;e.s<=v&&e.e>=v+y?(this.addSegment(m[s].v[r-1],m[s].o[r-1],m[s].i[0],m[s].v[0],i,c,u),u=!1):(o=bez.getNewSegment(m[s].v[r-1],m[s].v[0],m[s].o[r-1],m[s].i[0],(e.s-v)/y,(e.e-v)/y,l[r-1]),this.addSegmentFromArray(o,i,c,u),u=!1,i.c=!1)}else i.c=!1;v+=a.addedLength,c+=1}if(i._length&&(i.setXYAt(i.v[d][0],i.v[d][1],"i",d),i.setXYAt(i.v[i._length-1][0],i.v[i._length-1][1],"o",i._length-1)),v>e.e)break;s<p-1&&(i=shapePool.newElement(),u=!0,f.push(i),c=0)}return f},extendPrototype([ShapeModifier],PuckerAndBloatModifier),PuckerAndBloatModifier.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.amount=PropertyFactory.getProp(t,e.a,0,null,this),this._isAnimated=!!this.amount.effectsSequence.length},PuckerAndBloatModifier.prototype.processPath=function(t,e){var i=e/100,s=[0,0],r=t._length,n=0;for(n=0;n<r;n+=1)s[0]+=t.v[n][0],s[1]+=t.v[n][1];s[0]/=r,s[1]/=r;var a,c,l,o,d,h,m=shapePool.newElement();for(m.c=t.c,n=0;n<r;n+=1)a=t.v[n][0]+(s[0]-t.v[n][0])*i,c=t.v[n][1]+(s[1]-t.v[n][1])*i,l=t.o[n][0]+(s[0]-t.o[n][0])*-i,o=t.o[n][1]+(s[1]-t.o[n][1])*-i,d=t.i[n][0]+(s[0]-t.i[n][0])*-i,h=t.i[n][1]+(s[1]-t.i[n][1])*-i,m.setTripleAt(a,c,l,o,d,h,n);return m},PuckerAndBloatModifier.prototype.processShapes=function(t){var e,i,s,r,n,a,c=this.shapes.length,l=this.amount.v;if(0!==l)for(i=0;i<c;i+=1){if(a=(n=this.shapes[i]).localShapeCollection,n.shape._mdf||this._mdf||t)for(a.releaseShapes(),n.shape._mdf=!0,e=n.shape.paths.shapes,r=n.shape.paths._length,s=0;s<r;s+=1)a.addShape(this.processPath(e[s],l));n.shape.paths=n.localShapeCollection}this.dynamicProperties.length||(this._mdf=!1)};const TransformPropertyFactory=function(){var t=[0,0];function e(t,e,i){if(this.elem=t,this.frameId=-1,this.propType="transform",this.data=e,this.v=new Matrix,this.pre=new Matrix,this.appliedTransformations=0,this.initDynamicPropertyContainer(i||t),e.p&&e.p.s?(this.px=PropertyFactory.getProp(t,e.p.x,0,0,this),this.py=PropertyFactory.getProp(t,e.p.y,0,0,this),e.p.z&&(this.pz=PropertyFactory.getProp(t,e.p.z,0,0,this))):this.p=PropertyFactory.getProp(t,e.p||{k:[0,0,0]},1,0,this),e.rx){if(this.rx=PropertyFactory.getProp(t,e.rx,0,degToRads,this),this.ry=PropertyFactory.getProp(t,e.ry,0,degToRads,this),this.rz=PropertyFactory.getProp(t,e.rz,0,degToRads,this),e.or.k[0].ti){var s,r=e.or.k.length;for(s=0;s<r;s+=1)e.or.k[s].to=null,e.or.k[s].ti=null}this.or=PropertyFactory.getProp(t,e.or,1,degToRads,this),this.or.sh=!0}else this.r=PropertyFactory.getProp(t,e.r||{k:0},0,degToRads,this);e.sk&&(this.sk=PropertyFactory.getProp(t,e.sk,0,degToRads,this),this.sa=PropertyFactory.getProp(t,e.sa,0,degToRads,this)),this.a=PropertyFactory.getProp(t,e.a||{k:[0,0,0]},1,0,this),this.s=PropertyFactory.getProp(t,e.s||{k:[100,100,100]},1,.01,this),e.o?this.o=PropertyFactory.getProp(t,e.o,0,.01,t):this.o={_mdf:!1,v:1},this._isDirty=!0,this.dynamicProperties.length||this.getValue(!0)}return e.prototype={applyToMatrix:function(t){var e=this._mdf;this.iterateDynamicProperties(),this._mdf=this._mdf||e,this.a&&t.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]),this.s&&t.scale(this.s.v[0],this.s.v[1],this.s.v[2]),this.sk&&t.skewFromAxis(-this.sk.v,this.sa.v),this.r?t.rotate(-this.r.v):t.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),this.data.p.s?this.data.p.z?t.translate(this.px.v,this.py.v,-this.pz.v):t.translate(this.px.v,this.py.v,0):t.translate(this.p.v[0],this.p.v[1],-this.p.v[2])},getValue:function(e){if(this.elem.globalData.frameId!==this.frameId){if(this._isDirty&&(this.precalculateMatrix(),this._isDirty=!1),this.iterateDynamicProperties(),this._mdf||e){var i;if(this.v.cloneFromProps(this.pre.props),this.appliedTransformations<1&&this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]),this.appliedTransformations<2&&this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]),this.sk&&this.appliedTransformations<3&&this.v.skewFromAxis(-this.sk.v,this.sa.v),this.r&&this.appliedTransformations<4?this.v.rotate(-this.r.v):!this.r&&this.appliedTransformations<4&&this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),this.autoOriented){var s,r;if(i=this.elem.globalData.frameRate,this.p&&this.p.keyframes&&this.p.getValueAtTime)this.p._caching.lastFrame+this.p.offsetTime<=this.p.keyframes[0].t?(s=this.p.getValueAtTime((this.p.keyframes[0].t+.01)/i,0),r=this.p.getValueAtTime(this.p.keyframes[0].t/i,0)):this.p._caching.lastFrame+this.p.offsetTime>=this.p.keyframes[this.p.keyframes.length-1].t?(s=this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length-1].t/i,0),r=this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length-1].t-.05)/i,0)):(s=this.p.pv,r=this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime-.01)/i,this.p.offsetTime));else if(this.px&&this.px.keyframes&&this.py.keyframes&&this.px.getValueAtTime&&this.py.getValueAtTime){s=[],r=[];var n=this.px,a=this.py;n._caching.lastFrame+n.offsetTime<=n.keyframes[0].t?(s[0]=n.getValueAtTime((n.keyframes[0].t+.01)/i,0),s[1]=a.getValueAtTime((a.keyframes[0].t+.01)/i,0),r[0]=n.getValueAtTime(n.keyframes[0].t/i,0),r[1]=a.getValueAtTime(a.keyframes[0].t/i,0)):n._caching.lastFrame+n.offsetTime>=n.keyframes[n.keyframes.length-1].t?(s[0]=n.getValueAtTime(n.keyframes[n.keyframes.length-1].t/i,0),s[1]=a.getValueAtTime(a.keyframes[a.keyframes.length-1].t/i,0),r[0]=n.getValueAtTime((n.keyframes[n.keyframes.length-1].t-.01)/i,0),r[1]=a.getValueAtTime((a.keyframes[a.keyframes.length-1].t-.01)/i,0)):(s=[n.pv,a.pv],r[0]=n.getValueAtTime((n._caching.lastFrame+n.offsetTime-.01)/i,n.offsetTime),r[1]=a.getValueAtTime((a._caching.lastFrame+a.offsetTime-.01)/i,a.offsetTime))}else s=r=t;this.v.rotate(-Math.atan2(s[1]-r[1],s[0]-r[0]))}this.data.p&&this.data.p.s?this.data.p.z?this.v.translate(this.px.v,this.py.v,-this.pz.v):this.v.translate(this.px.v,this.py.v,0):this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2])}this.frameId=this.elem.globalData.frameId}},precalculateMatrix:function(){if(this.appliedTransformations=0,this.pre.reset(),!this.a.effectsSequence.length&&(this.pre.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]),this.appliedTransformations=1,!this.s.effectsSequence.length)){if(this.pre.scale(this.s.v[0],this.s.v[1],this.s.v[2]),this.appliedTransformations=2,this.sk){if(this.sk.effectsSequence.length||this.sa.effectsSequence.length)return;this.pre.skewFromAxis(-this.sk.v,this.sa.v),this.appliedTransformations=3}this.r?this.r.effectsSequence.length||(this.pre.rotate(-this.r.v),this.appliedTransformations=4):this.rz.effectsSequence.length||this.ry.effectsSequence.length||this.rx.effectsSequence.length||this.or.effectsSequence.length||(this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),this.appliedTransformations=4)}},autoOrient:function(){}},extendPrototype([DynamicPropertyContainer],e),e.prototype.addDynamicProperty=function(t){this._addDynamicProperty(t),this.elem.addDynamicProperty(t),this._isDirty=!0},e.prototype._addDynamicProperty=DynamicPropertyContainer.prototype.addDynamicProperty,{getTransformProperty:function(t,i,s){return new e(t,i,s)}}}();function RepeaterModifier(){}function RoundCornersModifier(){}function floatEqual(t,e){return 1e5*Math.abs(t-e)<=Math.min(Math.abs(t),Math.abs(e))}function floatZero(t){return Math.abs(t)<=1e-5}function lerp(t,e,i){return t*(1-i)+e*i}function lerpPoint(t,e,i){return[lerp(t[0],e[0],i),lerp(t[1],e[1],i)]}function quadRoots(t,e,i){if(0===t)return[];var s=e*e-4*t*i;if(s<0)return[];var r=-e/(2*t);if(0===s)return[r];var n=Math.sqrt(s)/(2*t);return[r-n,r+n]}function polynomialCoefficients(t,e,i,s){return[3*e-t-3*i+s,3*t-6*e+3*i,-3*t+3*e,t]}function singlePoint(t){return new PolynomialBezier(t,t,t,t,!1)}function PolynomialBezier(t,e,i,s,r){r&&pointEqual(t,e)&&(e=lerpPoint(t,s,1/3)),r&&pointEqual(i,s)&&(i=lerpPoint(t,s,2/3));var n=polynomialCoefficients(t[0],e[0],i[0],s[0]),a=polynomialCoefficients(t[1],e[1],i[1],s[1]);this.a=[n[0],a[0]],this.b=[n[1],a[1]],this.c=[n[2],a[2]],this.d=[n[3],a[3]],this.points=[t,e,i,s]}function extrema(t,e){var i=t.points[0][e],s=t.points[t.points.length-1][e];if(i>s){var r=s;s=i,i=r}for(var n=quadRoots(3*t.a[e],2*t.b[e],t.c[e]),a=0;a<n.length;a+=1)if(n[a]>0&&n[a]<1){var c=t.point(n[a])[e];c<i?i=c:c>s&&(s=c)}return{min:i,max:s}}function intersectData(t,e,i){var s=t.boundingBox();return{cx:s.cx,cy:s.cy,width:s.width,height:s.height,bez:t,t:(e+i)/2,t1:e,t2:i}}function splitData(t){var e=t.bez.split(.5);return[intersectData(e[0],t.t1,t.t),intersectData(e[1],t.t,t.t2)]}function boxIntersect(t,e){return 2*Math.abs(t.cx-e.cx)<t.width+e.width&&2*Math.abs(t.cy-e.cy)<t.height+e.height}function intersectsImpl(t,e,i,s,r,n){if(boxIntersect(t,e))if(i>=n||t.width<=s&&t.height<=s&&e.width<=s&&e.height<=s)r.push([t.t,e.t]);else{var a=splitData(t),c=splitData(e);intersectsImpl(a[0],c[0],i+1,s,r,n),intersectsImpl(a[0],c[1],i+1,s,r,n),intersectsImpl(a[1],c[0],i+1,s,r,n),intersectsImpl(a[1],c[1],i+1,s,r,n)}}function crossProduct(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function lineIntersection(t,e,i,s){var r=[t[0],t[1],1],n=[e[0],e[1],1],a=[i[0],i[1],1],c=[s[0],s[1],1],l=crossProduct(crossProduct(r,n),crossProduct(a,c));return floatZero(l[2])?null:[l[0]/l[2],l[1]/l[2]]}function polarOffset(t,e,i){return[t[0]+Math.cos(e)*i,t[1]-Math.sin(e)*i]}function pointDistance(t,e){return Math.hypot(t[0]-e[0],t[1]-e[1])}function pointEqual(t,e){return floatEqual(t[0],e[0])&&floatEqual(t[1],e[1])}function ZigZagModifier(){}function setPoint(t,e,i,s,r,n,a){var c=i-Math.PI/2,l=i+Math.PI/2,o=e[0]+Math.cos(i)*s*r,d=e[1]-Math.sin(i)*s*r;t.setTripleAt(o,d,o+Math.cos(c)*n,d-Math.sin(c)*n,o+Math.cos(l)*a,d-Math.sin(l)*a,t.length())}function getPerpendicularVector(t,e){var i=[e[0]-t[0],e[1]-t[1]],s=.5*-Math.PI;return[Math.cos(s)*i[0]-Math.sin(s)*i[1],Math.sin(s)*i[0]+Math.cos(s)*i[1]]}function getProjectingAngle(t,e){var i=0===e?t.length()-1:e-1,s=(e+1)%t.length(),r=getPerpendicularVector(t.v[i],t.v[s]);return Math.atan2(0,1)-Math.atan2(r[1],r[0])}function zigZagCorner(t,e,i,s,r,n,a){var c=getProjectingAngle(e,i),l=e.v[i%e._length],o=e.v[0===i?e._length-1:i-1],d=e.v[(i+1)%e._length],h=2===n?Math.sqrt(Math.pow(l[0]-o[0],2)+Math.pow(l[1]-o[1],2)):0,m=2===n?Math.sqrt(Math.pow(l[0]-d[0],2)+Math.pow(l[1]-d[1],2)):0;setPoint(t,e.v[i%e._length],c,a,s,m/(2*(r+1)),h/(2*(r+1)))}function zigZagSegment(t,e,i,s,r,n){for(var a=0;a<s;a+=1){var c=(a+1)/(s+1),l=2===r?Math.sqrt(Math.pow(e.points[3][0]-e.points[0][0],2)+Math.pow(e.points[3][1]-e.points[0][1],2)):0,o=e.normalAngle(c);setPoint(t,e.point(c),o,n,i,l/(2*(s+1)),l/(2*(s+1))),n=-n}return n}function linearOffset(t,e,i){var s=Math.atan2(e[0]-t[0],e[1]-t[1]);return[polarOffset(t,s,i),polarOffset(e,s,i)]}function offsetSegment(t,e){var i,s,r,n,a,c,l;i=(l=linearOffset(t.points[0],t.points[1],e))[0],s=l[1],r=(l=linearOffset(t.points[1],t.points[2],e))[0],n=l[1],a=(l=linearOffset(t.points[2],t.points[3],e))[0],c=l[1];var o=lineIntersection(i,s,r,n);null===o&&(o=s);var d=lineIntersection(a,c,r,n);return null===d&&(d=a),new PolynomialBezier(i,o,d,c)}function joinLines(t,e,i,s,r){var n=e.points[3],a=i.points[0];if(3===s)return n;if(pointEqual(n,a))return n;if(2===s){var c=-e.tangentAngle(1),l=-i.tangentAngle(0)+Math.PI,o=lineIntersection(n,polarOffset(n,c+Math.PI/2,100),a,polarOffset(a,c+Math.PI/2,100)),d=o?pointDistance(o,n):pointDistance(n,a)/2,h=polarOffset(n,c,2*d*roundCorner);return t.setXYAt(h[0],h[1],"o",t.length()-1),h=polarOffset(a,l,2*d*roundCorner),t.setTripleAt(a[0],a[1],a[0],a[1],h[0],h[1],t.length()),a}var m=lineIntersection(pointEqual(n,e.points[2])?e.points[0]:e.points[2],n,a,pointEqual(a,i.points[1])?i.points[3]:i.points[1]);return m&&pointDistance(m,n)<r?(t.setTripleAt(m[0],m[1],m[0],m[1],m[0],m[1],t.length()),m):n}function getIntersection(t,e){const i=t.intersections(e);return i.length&&floatEqual(i[0][0],1)&&i.shift(),i.length?i[0]:null}function pruneSegmentIntersection(t,e){var i=t.slice(),s=e.slice(),r=getIntersection(t[t.length-1],e[0]);return r&&(i[t.length-1]=t[t.length-1].split(r[0])[0],s[0]=e[0].split(r[1])[1]),t.length>1&&e.length>1&&(r=getIntersection(t[0],e[e.length-1]))?[[t[0].split(r[0])[0]],[e[e.length-1].split(r[1])[1]]]:[i,s]}function pruneIntersections(t){for(var e,i=1;i<t.length;i+=1)e=pruneSegmentIntersection(t[i-1],t[i]),t[i-1]=e[0],t[i]=e[1];return t.length>1&&(e=pruneSegmentIntersection(t[t.length-1],t[0]),t[t.length-1]=e[0],t[0]=e[1]),t}function offsetSegmentSplit(t,e){var i,s,r,n,a=t.inflectionPoints();if(0===a.length)return[offsetSegment(t,e)];if(1===a.length||floatEqual(a[1],1))return i=(r=t.split(a[0]))[0],s=r[1],[offsetSegment(i,e),offsetSegment(s,e)];i=(r=t.split(a[0]))[0];var c=(a[1]-a[0])/(1-a[0]);return n=(r=r[1].split(c))[0],s=r[1],[offsetSegment(i,e),offsetSegment(n,e),offsetSegment(s,e)]}function OffsetPathModifier(){}function getFontProperties(t){for(var e=t.fStyle?t.fStyle.split(" "):[],i="normal",s="normal",r=e.length,n=0;n<r;n+=1)switch(e[n].toLowerCase()){case"italic":s="italic";break;case"bold":i="700";break;case"black":i="900";break;case"medium":i="500";break;case"regular":case"normal":i="400";break;case"light":case"thin":i="200"}return{style:s,weight:t.fWeight||i}}extendPrototype([ShapeModifier],RepeaterModifier),RepeaterModifier.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.c=PropertyFactory.getProp(t,e.c,0,null,this),this.o=PropertyFactory.getProp(t,e.o,0,null,this),this.tr=TransformPropertyFactory.getTransformProperty(t,e.tr,this),this.so=PropertyFactory.getProp(t,e.tr.so,0,.01,this),this.eo=PropertyFactory.getProp(t,e.tr.eo,0,.01,this),this.data=e,this.dynamicProperties.length||this.getValue(!0),this._isAnimated=!!this.dynamicProperties.length,this.pMatrix=new Matrix,this.rMatrix=new Matrix,this.sMatrix=new Matrix,this.tMatrix=new Matrix,this.matrix=new Matrix},RepeaterModifier.prototype.applyTransforms=function(t,e,i,s,r,n){var a=n?-1:1,c=s.s.v[0]+(1-s.s.v[0])*(1-r),l=s.s.v[1]+(1-s.s.v[1])*(1-r);t.translate(s.p.v[0]*a*r,s.p.v[1]*a*r,s.p.v[2]),e.translate(-s.a.v[0],-s.a.v[1],s.a.v[2]),e.rotate(-s.r.v*a*r),e.translate(s.a.v[0],s.a.v[1],s.a.v[2]),i.translate(-s.a.v[0],-s.a.v[1],s.a.v[2]),i.scale(n?1/c:c,n?1/l:l),i.translate(s.a.v[0],s.a.v[1],s.a.v[2])},RepeaterModifier.prototype.init=function(t,e,i,s){for(this.elem=t,this.arr=e,this.pos=i,this.elemsData=s,this._currentCopies=0,this._elements=[],this._groups=[],this.frameId=-1,this.initDynamicPropertyContainer(t),this.initModifierProperties(t,e[i]);i>0;)i-=1,this._elements.unshift(e[i]);this.dynamicProperties.length?this.k=!0:this.getValue(!0)},RepeaterModifier.prototype.resetElements=function(t){var e,i=t.length;for(e=0;e<i;e+=1)t[e]._processed=!1,"gr"===t[e].ty&&this.resetElements(t[e].it)},RepeaterModifier.prototype.cloneElements=function(t){var e=JSON.parse(JSON.stringify(t));return this.resetElements(e),e},RepeaterModifier.prototype.changeGroupRender=function(t,e){var i,s=t.length;for(i=0;i<s;i+=1)t[i]._render=e,"gr"===t[i].ty&&this.changeGroupRender(t[i].it,e)},RepeaterModifier.prototype.processShapes=function(t){var e,i,s,r,n,a=!1;if(this._mdf||t){var c,l=Math.ceil(this.c.v);if(this._groups.length<l){for(;this._groups.length<l;){var o={it:this.cloneElements(this._elements),ty:"gr"};o.it.push({a:{a:0,ix:1,k:[0,0]},nm:"Transform",o:{a:0,ix:7,k:100},p:{a:0,ix:2,k:[0,0]},r:{a:1,ix:6,k:[{s:0,e:0,t:0},{s:0,e:0,t:1}]},s:{a:0,ix:3,k:[100,100]},sa:{a:0,ix:5,k:0},sk:{a:0,ix:4,k:0},ty:"tr"}),this.arr.splice(0,0,o),this._groups.splice(0,0,o),this._currentCopies+=1}this.elem.reloadShapes(),a=!0}for(n=0,s=0;s<=this._groups.length-1;s+=1){if(c=n<l,this._groups[s]._render=c,this.changeGroupRender(this._groups[s].it,c),!c){var d=this.elemsData[s].it,h=d[d.length-1];0!==h.transform.op.v?(h.transform.op._mdf=!0,h.transform.op.v=0):h.transform.op._mdf=!1}n+=1}this._currentCopies=l;var m=this.o.v,p=m%1,v=m>0?Math.floor(m):Math.ceil(m),f=this.pMatrix.props,u=this.rMatrix.props,y=this.sMatrix.props;this.pMatrix.reset(),this.rMatrix.reset(),this.sMatrix.reset(),this.tMatrix.reset(),this.matrix.reset();var g,_,C=0;if(m>0){for(;C<v;)this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,!1),C+=1;p&&(this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,p,!1),C+=p)}else if(m<0){for(;C>v;)this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,!0),C-=1;p&&(this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,-p,!0),C-=p)}for(s=1===this.data.m?0:this._currentCopies-1,r=1===this.data.m?1:-1,n=this._currentCopies;n;){if(_=(i=(e=this.elemsData[s].it)[e.length-1].transform.mProps.v.props).length,e[e.length-1].transform.mProps._mdf=!0,e[e.length-1].transform.op._mdf=!0,e[e.length-1].transform.op.v=1===this._currentCopies?this.so.v:this.so.v+(this.eo.v-this.so.v)*(s/(this._currentCopies-1)),0!==C){for((0!==s&&1===r||s!==this._currentCopies-1&&-1===r)&&this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,!1),this.matrix.transform(u[0],u[1],u[2],u[3],u[4],u[5],u[6],u[7],u[8],u[9],u[10],u[11],u[12],u[13],u[14],u[15]),this.matrix.transform(y[0],y[1],y[2],y[3],y[4],y[5],y[6],y[7],y[8],y[9],y[10],y[11],y[12],y[13],y[14],y[15]),this.matrix.transform(f[0],f[1],f[2],f[3],f[4],f[5],f[6],f[7],f[8],f[9],f[10],f[11],f[12],f[13],f[14],f[15]),g=0;g<_;g+=1)i[g]=this.matrix.props[g];this.matrix.reset()}else for(this.matrix.reset(),g=0;g<_;g+=1)i[g]=this.matrix.props[g];C+=1,n-=1,s+=r}}else for(n=this._currentCopies,s=0,r=1;n;)i=(e=this.elemsData[s].it)[e.length-1].transform.mProps.v.props,e[e.length-1].transform.mProps._mdf=!1,e[e.length-1].transform.op._mdf=!1,n-=1,s+=r;return a},RepeaterModifier.prototype.addShape=function(){},extendPrototype([ShapeModifier],RoundCornersModifier),RoundCornersModifier.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.rd=PropertyFactory.getProp(t,e.r,0,null,this),this._isAnimated=!!this.rd.effectsSequence.length},RoundCornersModifier.prototype.processPath=function(t,e){var i,s=shapePool.newElement();s.c=t.c;var r,n,a,c,l,o,d,h,m,p,v,f,u=t._length,y=0;for(i=0;i<u;i+=1)r=t.v[i],a=t.o[i],n=t.i[i],r[0]===a[0]&&r[1]===a[1]&&r[0]===n[0]&&r[1]===n[1]?0!==i&&i!==u-1||t.c?(c=0===i?t.v[u-1]:t.v[i-1],o=(l=Math.sqrt(Math.pow(r[0]-c[0],2)+Math.pow(r[1]-c[1],2)))?Math.min(l/2,e)/l:0,d=v=r[0]+(c[0]-r[0])*o,h=f=r[1]-(r[1]-c[1])*o,m=d-(d-r[0])*roundCorner,p=h-(h-r[1])*roundCorner,s.setTripleAt(d,h,m,p,v,f,y),y+=1,c=i===u-1?t.v[0]:t.v[i+1],o=(l=Math.sqrt(Math.pow(r[0]-c[0],2)+Math.pow(r[1]-c[1],2)))?Math.min(l/2,e)/l:0,d=m=r[0]+(c[0]-r[0])*o,h=p=r[1]+(c[1]-r[1])*o,v=d-(d-r[0])*roundCorner,f=h-(h-r[1])*roundCorner,s.setTripleAt(d,h,m,p,v,f,y),y+=1):(s.setTripleAt(r[0],r[1],a[0],a[1],n[0],n[1],y),y+=1):(s.setTripleAt(t.v[i][0],t.v[i][1],t.o[i][0],t.o[i][1],t.i[i][0],t.i[i][1],y),y+=1);return s},RoundCornersModifier.prototype.processShapes=function(t){var e,i,s,r,n,a,c=this.shapes.length,l=this.rd.v;if(0!==l)for(i=0;i<c;i+=1){if(a=(n=this.shapes[i]).localShapeCollection,n.shape._mdf||this._mdf||t)for(a.releaseShapes(),n.shape._mdf=!0,e=n.shape.paths.shapes,r=n.shape.paths._length,s=0;s<r;s+=1)a.addShape(this.processPath(e[s],l));n.shape.paths=n.localShapeCollection}this.dynamicProperties.length||(this._mdf=!1)},PolynomialBezier.prototype.point=function(t){return[((this.a[0]*t+this.b[0])*t+this.c[0])*t+this.d[0],((this.a[1]*t+this.b[1])*t+this.c[1])*t+this.d[1]]},PolynomialBezier.prototype.derivative=function(t){return[(3*t*this.a[0]+2*this.b[0])*t+this.c[0],(3*t*this.a[1]+2*this.b[1])*t+this.c[1]]},PolynomialBezier.prototype.tangentAngle=function(t){var e=this.derivative(t);return Math.atan2(e[1],e[0])},PolynomialBezier.prototype.normalAngle=function(t){var e=this.derivative(t);return Math.atan2(e[0],e[1])},PolynomialBezier.prototype.inflectionPoints=function(){var t=this.a[1]*this.b[0]-this.a[0]*this.b[1];if(floatZero(t))return[];var e=-.5*(this.a[1]*this.c[0]-this.a[0]*this.c[1])/t,i=e*e-1/3*(this.b[1]*this.c[0]-this.b[0]*this.c[1])/t;if(i<0)return[];var s=Math.sqrt(i);return floatZero(s)?s>0&&s<1?[e]:[]:[e-s,e+s].filter((function(t){return t>0&&t<1}))},PolynomialBezier.prototype.split=function(t){if(t<=0)return[singlePoint(this.points[0]),this];if(t>=1)return[this,singlePoint(this.points[this.points.length-1])];var e=lerpPoint(this.points[0],this.points[1],t),i=lerpPoint(this.points[1],this.points[2],t),s=lerpPoint(this.points[2],this.points[3],t),r=lerpPoint(e,i,t),n=lerpPoint(i,s,t),a=lerpPoint(r,n,t);return[new PolynomialBezier(this.points[0],e,r,a,!0),new PolynomialBezier(a,n,s,this.points[3],!0)]},PolynomialBezier.prototype.bounds=function(){return{x:extrema(this,0),y:extrema(this,1)}},PolynomialBezier.prototype.boundingBox=function(){var t=this.bounds();return{left:t.x.min,right:t.x.max,top:t.y.min,bottom:t.y.max,width:t.x.max-t.x.min,height:t.y.max-t.y.min,cx:(t.x.max+t.x.min)/2,cy:(t.y.max+t.y.min)/2}},PolynomialBezier.prototype.intersections=function(t,e,i){void 0===e&&(e=2),void 0===i&&(i=7);var s=[];return intersectsImpl(intersectData(this,0,1),intersectData(t,0,1),0,e,s,i),s},PolynomialBezier.shapeSegment=function(t,e){var i=(e+1)%t.length();return new PolynomialBezier(t.v[e],t.o[e],t.i[i],t.v[i],!0)},PolynomialBezier.shapeSegmentInverted=function(t,e){var i=(e+1)%t.length();return new PolynomialBezier(t.v[i],t.i[i],t.o[e],t.v[e],!0)},extendPrototype([ShapeModifier],ZigZagModifier),ZigZagModifier.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.amplitude=PropertyFactory.getProp(t,e.s,0,null,this),this.frequency=PropertyFactory.getProp(t,e.r,0,null,this),this.pointsType=PropertyFactory.getProp(t,e.pt,0,null,this),this._isAnimated=0!==this.amplitude.effectsSequence.length||0!==this.frequency.effectsSequence.length||0!==this.pointsType.effectsSequence.length},ZigZagModifier.prototype.processPath=function(t,e,i,s){var r=t._length,n=shapePool.newElement();if(n.c=t.c,t.c||(r-=1),0===r)return n;var a=-1,c=PolynomialBezier.shapeSegment(t,0);zigZagCorner(n,t,0,e,i,s,a);for(var l=0;l<r;l+=1)a=zigZagSegment(n,c,e,i,s,-a),c=l!==r-1||t.c?PolynomialBezier.shapeSegment(t,(l+1)%r):null,zigZagCorner(n,t,l+1,e,i,s,a);return n},ZigZagModifier.prototype.processShapes=function(t){var e,i,s,r,n,a,c=this.shapes.length,l=this.amplitude.v,o=Math.max(0,Math.round(this.frequency.v)),d=this.pointsType.v;if(0!==l)for(i=0;i<c;i+=1){if(a=(n=this.shapes[i]).localShapeCollection,n.shape._mdf||this._mdf||t)for(a.releaseShapes(),n.shape._mdf=!0,e=n.shape.paths.shapes,r=n.shape.paths._length,s=0;s<r;s+=1)a.addShape(this.processPath(e[s],l,o,d));n.shape.paths=n.localShapeCollection}this.dynamicProperties.length||(this._mdf=!1)},extendPrototype([ShapeModifier],OffsetPathModifier),OffsetPathModifier.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.amount=PropertyFactory.getProp(t,e.a,0,null,this),this.miterLimit=PropertyFactory.getProp(t,e.ml,0,null,this),this.lineJoin=e.lj,this._isAnimated=0!==this.amount.effectsSequence.length},OffsetPathModifier.prototype.processPath=function(t,e,i,s){var r=shapePool.newElement();r.c=t.c;var n,a,c,l=t.length();t.c||(l-=1);var o=[];for(n=0;n<l;n+=1)c=PolynomialBezier.shapeSegment(t,n),o.push(offsetSegmentSplit(c,e));if(!t.c)for(n=l-1;n>=0;n-=1)c=PolynomialBezier.shapeSegmentInverted(t,n),o.push(offsetSegmentSplit(c,e));o=pruneIntersections(o);var d=null,h=null;for(n=0;n<o.length;n+=1){var m=o[n];for(h&&(d=joinLines(r,h,m[0],i,s)),h=m[m.length-1],a=0;a<m.length;a+=1)c=m[a],d&&pointEqual(c.points[0],d)?r.setXYAt(c.points[1][0],c.points[1][1],"o",r.length()-1):r.setTripleAt(c.points[0][0],c.points[0][1],c.points[1][0],c.points[1][1],c.points[0][0],c.points[0][1],r.length()),r.setTripleAt(c.points[3][0],c.points[3][1],c.points[3][0],c.points[3][1],c.points[2][0],c.points[2][1],r.length()),d=c.points[3]}return o.length&&joinLines(r,h,o[0][0],i,s),r},OffsetPathModifier.prototype.processShapes=function(t){var e,i,s,r,n,a,c=this.shapes.length,l=this.amount.v,o=this.miterLimit.v,d=this.lineJoin;if(0!==l)for(i=0;i<c;i+=1){if(a=(n=this.shapes[i]).localShapeCollection,n.shape._mdf||this._mdf||t)for(a.releaseShapes(),n.shape._mdf=!0,e=n.shape.paths.shapes,r=n.shape.paths._length,s=0;s<r;s+=1)a.addShape(this.processPath(e[s],l,d,o));n.shape.paths=n.localShapeCollection}this.dynamicProperties.length||(this._mdf=!1)};const FontManager=function(){var t={w:0,size:0,shapes:[],data:{shapes:[]}},e=[];e=e.concat([2304,2305,2306,2307,2362,2363,2364,2364,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2387,2388,2389,2390,2391,2402,2403]);var i=127988,s=["d83cdffb","d83cdffc","d83cdffd","d83cdffe","d83cdfff"];function r(t,e){var i=createTag("span");i.setAttribute("aria-hidden",!0),i.style.fontFamily=e;var s=createTag("span");s.innerText="giItT1WQy@!-/#",i.style.position="absolute",i.style.left="-10000px",i.style.top="-10000px",i.style.fontSize="300px",i.style.fontVariant="normal",i.style.fontStyle="normal",i.style.fontWeight="normal",i.style.letterSpacing="0",i.appendChild(s),document.body.appendChild(i);var r=s.offsetWidth;return s.style.fontFamily=function(t){var e,i=t.split(","),s=i.length,r=[];for(e=0;e<s;e+=1)"sans-serif"!==i[e]&&"monospace"!==i[e]&&r.push(i[e]);return r.join(",")}(t)+", "+e,{node:s,w:r,parent:i}}function n(t,e){var i,s=document.body&&e?"svg":"canvas",r=getFontProperties(t);if("svg"===s){var n=createNS("text");n.style.fontSize="100px",n.setAttribute("font-family",t.fFamily),n.setAttribute("font-style",r.style),n.setAttribute("font-weight",r.weight),n.textContent="1",t.fClass?(n.style.fontFamily="inherit",n.setAttribute("class",t.fClass)):n.style.fontFamily=t.fFamily,e.appendChild(n),i=n}else{var a=new OffscreenCanvas(500,500).getContext("2d");a.font=r.style+" "+r.weight+" 100px "+t.fFamily,i=a}return{measureText:function(t){return"svg"===s?(i.textContent=t,i.getComputedTextLength()):i.measureText(t).width}}}function a(t){var e=0,i=t.charCodeAt(0);if(i>=55296&&i<=56319){var s=t.charCodeAt(1);s>=56320&&s<=57343&&(e=1024*(i-55296)+s-56320+65536)}return e}function c(t){var e=a(t);return e>=127462&&e<=127487}var l=function(){this.fonts=[],this.chars=null,this.typekitLoaded=0,this.isLoaded=!1,this._warned=!1,this.initTime=Date.now(),this.setIsLoadedBinded=this.setIsLoaded.bind(this),this.checkLoadedFontsBinded=this.checkLoadedFonts.bind(this)};return l.isModifier=function(t,e){var i=t.toString(16)+e.toString(16);return-1!==s.indexOf(i)},l.isZeroWidthJoiner=function(t){return 8205===t},l.isFlagEmoji=function(t){return c(t.substr(0,2))&&c(t.substr(2,2))},l.isRegionalCode=c,l.isCombinedCharacter=function(t){return-1!==e.indexOf(t)},l.isRegionalFlag=function(t,e){var s=a(t.substr(e,2));if(s!==i)return!1;var r=0;for(e+=2;r<5;){if((s=a(t.substr(e,2)))<917601||s>917626)return!1;r+=1,e+=2}return 917631===a(t.substr(e,2))},l.isVariationSelector=function(t){return 65039===t},l.BLACK_FLAG_CODE_POINT=i,l.prototype={addChars:function(t){if(t){var e;this.chars||(this.chars=[]);var i,s,r=t.length,n=this.chars.length;for(e=0;e<r;e+=1){for(i=0,s=!1;i<n;)this.chars[i].style===t[e].style&&this.chars[i].fFamily===t[e].fFamily&&this.chars[i].ch===t[e].ch&&(s=!0),i+=1;s||(this.chars.push(t[e]),n+=1)}}},addFonts:function(t,e){if(t){if(this.chars)return this.isLoaded=!0,void(this.fonts=t.list);if(!document.body)return this.isLoaded=!0,t.list.forEach((t=>{t.helper=n(t),t.cache={}})),void(this.fonts=t.list);var i,s=t.list,a=s.length,c=a;for(i=0;i<a;i+=1){var l,o,d=!0;if(s[i].loaded=!1,s[i].monoCase=r(s[i].fFamily,"monospace"),s[i].sansCase=r(s[i].fFamily,"sans-serif"),s[i].fPath){if("p"===s[i].fOrigin||3===s[i].origin){if((l=document.querySelectorAll('style[f-forigin="p"][f-family="'+s[i].fFamily+'"], style[f-origin="3"][f-family="'+s[i].fFamily+'"]')).length>0&&(d=!1),d){var h=createTag("style");h.setAttribute("f-forigin",s[i].fOrigin),h.setAttribute("f-origin",s[i].origin),h.setAttribute("f-family",s[i].fFamily),h.type="text/css",h.innerText="@font-face {font-family: "+s[i].fFamily+"; font-style: normal; src: url('"+s[i].fPath+"');}",e.appendChild(h)}}else if("g"===s[i].fOrigin||1===s[i].origin){for(l=document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]'),o=0;o<l.length;o+=1)-1!==l[o].href.indexOf(s[i].fPath)&&(d=!1);if(d){var m=createTag("link");m.setAttribute("f-forigin",s[i].fOrigin),m.setAttribute("f-origin",s[i].origin),m.type="text/css",m.rel="stylesheet",m.href=s[i].fPath,document.body.appendChild(m)}}else if("t"===s[i].fOrigin||2===s[i].origin){for(l=document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]'),o=0;o<l.length;o+=1)s[i].fPath===l[o].src&&(d=!1);if(d){var p=createTag("link");p.setAttribute("f-forigin",s[i].fOrigin),p.setAttribute("f-origin",s[i].origin),p.setAttribute("rel","stylesheet"),p.setAttribute("href",s[i].fPath),e.appendChild(p)}}}else s[i].loaded=!0,c-=1;s[i].helper=n(s[i],e),s[i].cache={},this.fonts.push(s[i])}0===c?this.isLoaded=!0:setTimeout(this.checkLoadedFonts.bind(this),100)}else this.isLoaded=!0},getCharData:function(e,i,s){for(var r=0,n=this.chars.length;r<n;){if(this.chars[r].ch===e&&this.chars[r].style===i&&this.chars[r].fFamily===s)return this.chars[r];r+=1}return("string"==typeof e&&13!==e.charCodeAt(0)||!e)&&console&&console.warn&&!this._warned&&(this._warned=!0,console.warn("Missing character from exported characters list: ",e,i,s)),t},getFontByName:function(t){for(var e=0,i=this.fonts.length;e<i;){if(this.fonts[e].fName===t)return this.fonts[e];e+=1}return this.fonts[0]},measureText:function(t,e,i){var s=this.getFontByName(e),r=t;if(!s.cache[r]){var n=s.helper;if(" "===t){var a=n.measureText("|"+t+"|"),c=n.measureText("||");s.cache[r]=(a-c)/100}else s.cache[r]=n.measureText(t)/100}return s.cache[r]*i},checkLoadedFonts:function(){var t,e,i,s=this.fonts.length,r=s;for(t=0;t<s;t+=1)this.fonts[t].loaded?r-=1:"n"===this.fonts[t].fOrigin||0===this.fonts[t].origin?this.fonts[t].loaded=!0:(e=this.fonts[t].monoCase.node,i=this.fonts[t].monoCase.w,e.offsetWidth!==i?(r-=1,this.fonts[t].loaded=!0):(e=this.fonts[t].sansCase.node,i=this.fonts[t].sansCase.w,e.offsetWidth!==i&&(r-=1,this.fonts[t].loaded=!0)),this.fonts[t].loaded&&(this.fonts[t].sansCase.parent.parentNode.removeChild(this.fonts[t].sansCase.parent),this.fonts[t].monoCase.parent.parentNode.removeChild(this.fonts[t].monoCase.parent)));0!==r&&Date.now()-this.initTime<5e3?setTimeout(this.checkLoadedFontsBinded,20):setTimeout(this.setIsLoadedBinded,10)},setIsLoaded:function(){this.isLoaded=!0}},l}();function SlotManager(t){this.animationData=t}function slotFactory(t){return new SlotManager(t)}function RenderableElement(){}SlotManager.prototype.getProp=function(t){return this.animationData.slots&&this.animationData.slots[t.sid]?Object.assign(t,this.animationData.slots[t.sid].p):t},RenderableElement.prototype={initRenderable:function(){this.isInRange=!1,this.hidden=!1,this.isTransparent=!1,this.renderableComponents=[]},addRenderableComponent:function(t){-1===this.renderableComponents.indexOf(t)&&this.renderableComponents.push(t)},removeRenderableComponent:function(t){-1!==this.renderableComponents.indexOf(t)&&this.renderableComponents.splice(this.renderableComponents.indexOf(t),1)},prepareRenderableFrame:function(t){this.checkLayerLimits(t)},checkTransparency:function(){this.finalTransform.mProp.o.v<=0?!this.isTransparent&&this.globalData.renderConfig.hideOnTransparent&&(this.isTransparent=!0,this.hide()):this.isTransparent&&(this.isTransparent=!1,this.show())},checkLayerLimits:function(t){this.data.ip-this.data.st<=t&&this.data.op-this.data.st>t?!0!==this.isInRange&&(this.globalData._mdf=!0,this._mdf=!0,this.isInRange=!0,this.show()):!1!==this.isInRange&&(this.globalData._mdf=!0,this.isInRange=!1,this.hide())},renderRenderable:function(){var t,e=this.renderableComponents.length;for(t=0;t<e;t+=1)this.renderableComponents[t].renderFrame(this._isFirstFrame)},sourceRectAtTime:function(){return{top:0,left:0,width:100,height:100}},getLayerSize:function(){return 5===this.data.ty?{w:this.data.textData.width,h:this.data.textData.height}:{w:this.data.width,h:this.data.height}}};const getBlendMode=(blendModeEnums={0:"source-over",1:"multiply",2:"screen",3:"overlay",4:"darken",5:"lighten",6:"color-dodge",7:"color-burn",8:"hard-light",9:"soft-light",10:"difference",11:"exclusion",12:"hue",13:"saturation",14:"color",15:"luminosity"},function(t){return blendModeEnums[t]||""});var blendModeEnums;function SliderEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,0,0,i)}function AngleEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,0,0,i)}function ColorEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,1,0,i)}function PointEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,1,0,i)}function LayerIndexEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,0,0,i)}function MaskIndexEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,0,0,i)}function CheckboxEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,0,0,i)}function NoValueEffect(){this.p={}}function EffectsManager(t,e){var i,s=t.ef||[];this.effectElements=[];var r,n=s.length;for(i=0;i<n;i+=1)r=new GroupEffect(s[i],e),this.effectElements.push(r)}function GroupEffect(t,e){this.init(t,e)}function BaseElement(){}function FrameElement(){}function FootageElement(t,e,i){this.initFrame(),this.initRenderable(),this.assetData=e.getAssetData(t.refId),this.footageData=e.imageLoader.getAsset(this.assetData),this.initBaseData(t,e,i)}function AudioElement(t,e,i){this.initFrame(),this.initRenderable(),this.assetData=e.getAssetData(t.refId),this.initBaseData(t,e,i),this._isPlaying=!1,this._canPlay=!1;var s=this.globalData.getAssetsPath(this.assetData);this.audio=this.globalData.audioController.createAudio(s),this._currentTime=0,this.globalData.audioController.addAudio(this),this._volumeMultiplier=1,this._volume=1,this._previousVolume=null,this.tm=t.tm?PropertyFactory.getProp(this,t.tm,0,e.frameRate,this):{_placeholder:!0},this.lv=PropertyFactory.getProp(this,t.au&&t.au.lv?t.au.lv:{k:[100]},1,.01,this)}function BaseRenderer(){}extendPrototype([DynamicPropertyContainer],GroupEffect),GroupEffect.prototype.getValue=GroupEffect.prototype.iterateDynamicProperties,GroupEffect.prototype.init=function(t,e){var i;this.data=t,this.effectElements=[],this.initDynamicPropertyContainer(e);var s,r=this.data.ef.length,n=this.data.ef;for(i=0;i<r;i+=1){switch(s=null,n[i].ty){case 0:s=new SliderEffect(n[i],e,this);break;case 1:s=new AngleEffect(n[i],e,this);break;case 2:s=new ColorEffect(n[i],e,this);break;case 3:s=new PointEffect(n[i],e,this);break;case 4:case 7:s=new CheckboxEffect(n[i],e,this);break;case 10:s=new LayerIndexEffect(n[i],e,this);break;case 11:s=new MaskIndexEffect(n[i],e,this);break;case 5:s=new EffectsManager(n[i],e);break;default:s=new NoValueEffect(n[i])}s&&this.effectElements.push(s)}},BaseElement.prototype={checkMasks:function(){if(!this.data.hasMask)return!1;for(var t=0,e=this.data.masksProperties.length;t<e;){if("n"!==this.data.masksProperties[t].mode&&!1!==this.data.masksProperties[t].cl)return!0;t+=1}return!1},initExpressions:function(){const t=getExpressionInterfaces();if(!t)return;const e=t("layer"),i=t("effects"),s=t("shape"),r=t("text"),n=t("comp");this.layerInterface=e(this),this.data.hasMask&&this.maskManager&&this.layerInterface.registerMaskInterface(this.maskManager);var a=i.createEffectsInterface(this,this.layerInterface);this.layerInterface.registerEffectsInterface(a),0===this.data.ty||this.data.xt?this.compInterface=n(this):4===this.data.ty?(this.layerInterface.shapeInterface=s(this.shapesData,this.itemsData,this.layerInterface),this.layerInterface.content=this.layerInterface.shapeInterface):5===this.data.ty&&(this.layerInterface.textInterface=r(this),this.layerInterface.text=this.layerInterface.textInterface)},setBlendMode:function(){var t=getBlendMode(this.data.bm);(this.baseElement||this.layerElement).style["mix-blend-mode"]=t},initBaseData:function(t,e,i){this.globalData=e,this.comp=i,this.data=t,this.layerId=createElementID(),this.data.sr||(this.data.sr=1),this.effectsManager=new EffectsManager(this.data,this,this.dynamicProperties)},getType:function(){return this.type},sourceRectAtTime:function(){}},FrameElement.prototype={initFrame:function(){this._isFirstFrame=!1,this.dynamicProperties=[],this._mdf=!1},prepareProperties:function(t,e){var i,s=this.dynamicProperties.length;for(i=0;i<s;i+=1)(e||this._isParent&&"transform"===this.dynamicProperties[i].propType)&&(this.dynamicProperties[i].getValue(),this.dynamicProperties[i]._mdf&&(this.globalData._mdf=!0,this._mdf=!0))},addDynamicProperty:function(t){-1===this.dynamicProperties.indexOf(t)&&this.dynamicProperties.push(t)}},FootageElement.prototype.prepareFrame=function(){},extendPrototype([RenderableElement,BaseElement,FrameElement],FootageElement),FootageElement.prototype.getBaseElement=function(){return null},FootageElement.prototype.renderFrame=function(){},FootageElement.prototype.destroy=function(){},FootageElement.prototype.initExpressions=function(){const t=getExpressionInterfaces();if(!t)return;const e=t("footage");this.layerInterface=e(this)},FootageElement.prototype.getFootageData=function(){return this.footageData},AudioElement.prototype.prepareFrame=function(t){if(this.prepareRenderableFrame(t,!0),this.prepareProperties(t,!0),this.tm._placeholder)this._currentTime=t/this.data.sr;else{var e=this.tm.v;this._currentTime=e}this._volume=this.lv.v[0];var i=this._volume*this._volumeMultiplier;this._previousVolume!==i&&(this._previousVolume=i,this.audio.volume(i))},extendPrototype([RenderableElement,BaseElement,FrameElement],AudioElement),AudioElement.prototype.renderFrame=function(){this.isInRange&&this._canPlay&&(this._isPlaying?(!this.audio.playing()||Math.abs(this._currentTime/this.globalData.frameRate-this.audio.seek())>.1)&&this.audio.seek(this._currentTime/this.globalData.frameRate):(this.audio.play(),this.audio.seek(this._currentTime/this.globalData.frameRate),this._isPlaying=!0))},AudioElement.prototype.show=function(){},AudioElement.prototype.hide=function(){this.audio.pause(),this._isPlaying=!1},AudioElement.prototype.pause=function(){this.audio.pause(),this._isPlaying=!1,this._canPlay=!1},AudioElement.prototype.resume=function(){this._canPlay=!0},AudioElement.prototype.setRate=function(t){this.audio.rate(t)},AudioElement.prototype.volume=function(t){this._volumeMultiplier=t,this._previousVolume=t*this._volume,this.audio.volume(this._previousVolume)},AudioElement.prototype.getBaseElement=function(){return null},AudioElement.prototype.destroy=function(){},AudioElement.prototype.sourceRectAtTime=function(){},AudioElement.prototype.initExpressions=function(){},BaseRenderer.prototype.checkLayers=function(t){var e,i,s=this.layers.length;for(this.completeLayers=!0,e=s-1;e>=0;e-=1)this.elements[e]||(i=this.layers[e]).ip-i.st<=t-this.layers[e].st&&i.op-i.st>t-this.layers[e].st&&this.buildItem(e),this.completeLayers=!!this.elements[e]&&this.completeLayers;this.checkPendingElements()},BaseRenderer.prototype.createItem=function(t){switch(t.ty){case 2:return this.createImage(t);case 0:return this.createComp(t);case 1:return this.createSolid(t);case 3:return this.createNull(t);case 4:return this.createShape(t);case 5:return this.createText(t);case 6:return this.createAudio(t);case 13:return this.createCamera(t);case 15:return this.createFootage(t);default:return this.createNull(t)}},BaseRenderer.prototype.createCamera=function(){throw new Error("You're using a 3d camera. Try the html renderer.")},BaseRenderer.prototype.createAudio=function(t){return new AudioElement(t,this.globalData,this)},BaseRenderer.prototype.createFootage=function(t){return new FootageElement(t,this.globalData,this)},BaseRenderer.prototype.buildAllItems=function(){var t,e=this.layers.length;for(t=0;t<e;t+=1)this.buildItem(t);this.checkPendingElements()},BaseRenderer.prototype.includeLayers=function(t){var e;this.completeLayers=!1;var i,s=t.length,r=this.layers.length;for(e=0;e<s;e+=1)for(i=0;i<r;){if(this.layers[i].id===t[e].id){this.layers[i]=t[e];break}i+=1}},BaseRenderer.prototype.setProjectInterface=function(t){this.globalData.projectInterface=t},BaseRenderer.prototype.initItems=function(){this.globalData.progressiveLoad||this.buildAllItems()},BaseRenderer.prototype.buildElementParenting=function(t,e,i){for(var s=this.elements,r=this.layers,n=0,a=r.length;n<a;)r[n].ind==e&&(s[n]&&!0!==s[n]?(i.push(s[n]),s[n].setAsParent(),void 0!==r[n].parent?this.buildElementParenting(t,r[n].parent,i):t.setHierarchy(i)):(this.buildItem(n),this.addPendingElement(t))),n+=1},BaseRenderer.prototype.addPendingElement=function(t){this.pendingElements.push(t)},BaseRenderer.prototype.searchExtraCompositions=function(t){var e,i=t.length;for(e=0;e<i;e+=1)if(t[e].xt){var s=this.createComp(t[e]);s.initExpressions(),this.globalData.projectInterface.registerComposition(s)}},BaseRenderer.prototype.getElementById=function(t){var e,i=this.elements.length;for(e=0;e<i;e+=1)if(this.elements[e].data.ind===t)return this.elements[e];return null},BaseRenderer.prototype.getElementByPath=function(t){var e,i=t.shift();if("number"==typeof i)e=this.elements[i];else{var s,r=this.elements.length;for(s=0;s<r;s+=1)if(this.elements[s].data.nm===i){e=this.elements[s];break}}return 0===t.length?e:e.getElementByPath(t)},BaseRenderer.prototype.setupGlobalData=function(t,e){this.globalData.fontManager=new FontManager,this.globalData.slotManager=slotFactory(t),this.globalData.fontManager.addChars(t.chars),this.globalData.fontManager.addFonts(t.fonts,e),this.globalData.getAssetData=this.animationItem.getAssetData.bind(this.animationItem),this.globalData.getAssetsPath=this.animationItem.getAssetsPath.bind(this.animationItem),this.globalData.imageLoader=this.animationItem.imagePreloader,this.globalData.audioController=this.animationItem.audioController,this.globalData.frameId=0,this.globalData.frameRate=t.fr,this.globalData.nm=t.nm,this.globalData.compSize={w:t.w,h:t.h}};var effectTypes={TRANSFORM_EFFECT:"transformEFfect"};function TransformElement(){}function MaskElement(t,e,i){this.data=t,this.element=e,this.globalData=i,this.storedData=[],this.masksProperties=this.data.masksProperties||[],this.maskElement=null;var s,r,n=this.globalData.defs,a=this.masksProperties?this.masksProperties.length:0;this.viewData=createSizedArray(a),this.solidPath="";var c,l,o,d,h,m,p=this.masksProperties,v=0,f=[],u=createElementID(),y="clipPath",g="clip-path";for(s=0;s<a;s+=1)if(("a"!==p[s].mode&&"n"!==p[s].mode||p[s].inv||100!==p[s].o.k||p[s].o.x)&&(y="mask",g="mask"),"s"!==p[s].mode&&"i"!==p[s].mode||0!==v?o=null:((o=createNS("rect")).setAttribute("fill","#ffffff"),o.setAttribute("width",this.element.comp.data.w||0),o.setAttribute("height",this.element.comp.data.h||0),f.push(o)),r=createNS("path"),"n"===p[s].mode)this.viewData[s]={op:PropertyFactory.getProp(this.element,p[s].o,0,.01,this.element),prop:ShapePropertyFactory.getShapeProp(this.element,p[s],3),elem:r,lastPath:""},n.appendChild(r);else{var _;if(v+=1,r.setAttribute("fill","s"===p[s].mode?"#000000":"#ffffff"),r.setAttribute("clip-rule","nonzero"),0!==p[s].x.k?(y="mask",g="mask",m=PropertyFactory.getProp(this.element,p[s].x,0,null,this.element),_=createElementID(),(d=createNS("filter")).setAttribute("id",_),(h=createNS("feMorphology")).setAttribute("operator","erode"),h.setAttribute("in","SourceGraphic"),h.setAttribute("radius","0"),d.appendChild(h),n.appendChild(d),r.setAttribute("stroke","s"===p[s].mode?"#000000":"#ffffff")):(h=null,m=null),this.storedData[s]={elem:r,x:m,expan:h,lastPath:"",lastOperator:"",filterId:_,lastRadius:0},"i"===p[s].mode){l=f.length;var C=createNS("g");for(c=0;c<l;c+=1)C.appendChild(f[c]);var E=createNS("mask");E.setAttribute("mask-type","alpha"),E.setAttribute("id",u+"_"+v),E.appendChild(r),n.appendChild(E),C.setAttribute("mask","url("+getLocationHref()+"#"+u+"_"+v+")"),f.length=0,f.push(C)}else f.push(r);p[s].inv&&!this.solidPath&&(this.solidPath=this.createLayerSolidPath()),this.viewData[s]={elem:r,lastPath:"",op:PropertyFactory.getProp(this.element,p[s].o,0,.01,this.element),prop:ShapePropertyFactory.getShapeProp(this.element,p[s],3),invRect:o},this.viewData[s].prop.k||this.drawPath(p[s],this.viewData[s].prop.v,this.viewData[s])}for(this.maskElement=createNS(y),a=f.length,s=0;s<a;s+=1)this.maskElement.appendChild(f[s]);v>0&&(this.maskElement.setAttribute("id",u),this.element.maskedElement.setAttribute(g,"url("+getLocationHref()+"#"+u+")"),n.appendChild(this.maskElement)),this.viewData.length&&this.element.addRenderableComponent(this)}TransformElement.prototype={initTransform:function(){var t=new Matrix;this.finalTransform={mProp:this.data.ks?TransformPropertyFactory.getTransformProperty(this,this.data.ks,this):{o:0},_matMdf:!1,_localMatMdf:!1,_opMdf:!1,mat:t,localMat:t,localOpacity:1},this.data.ao&&(this.finalTransform.mProp.autoOriented=!0),this.data.ty},renderTransform:function(){if(this.finalTransform._opMdf=this.finalTransform.mProp.o._mdf||this._isFirstFrame,this.finalTransform._matMdf=this.finalTransform.mProp._mdf||this._isFirstFrame,this.hierarchy){var t,e=this.finalTransform.mat,i=0,s=this.hierarchy.length;if(!this.finalTransform._matMdf)for(;i<s;){if(this.hierarchy[i].finalTransform.mProp._mdf){this.finalTransform._matMdf=!0;break}i+=1}if(this.finalTransform._matMdf)for(t=this.finalTransform.mProp.v.props,e.cloneFromProps(t),i=0;i<s;i+=1)e.multiply(this.hierarchy[i].finalTransform.mProp.v)}this.finalTransform._matMdf&&(this.finalTransform._localMatMdf=this.finalTransform._matMdf),this.finalTransform._opMdf&&(this.finalTransform.localOpacity=this.finalTransform.mProp.o.v)},renderLocalTransform:function(){if(this.localTransforms){var t=0,e=this.localTransforms.length;if(this.finalTransform._localMatMdf=this.finalTransform._matMdf,!this.finalTransform._localMatMdf||!this.finalTransform._opMdf)for(;t<e;)this.localTransforms[t]._mdf&&(this.finalTransform._localMatMdf=!0),this.localTransforms[t]._opMdf&&!this.finalTransform._opMdf&&(this.finalTransform.localOpacity=this.finalTransform.mProp.o.v,this.finalTransform._opMdf=!0),t+=1;if(this.finalTransform._localMatMdf){var i=this.finalTransform.localMat;for(this.localTransforms[0].matrix.clone(i),t=1;t<e;t+=1){var s=this.localTransforms[t].matrix;i.multiply(s)}i.multiply(this.finalTransform.mat)}if(this.finalTransform._opMdf){var r=this.finalTransform.localOpacity;for(t=0;t<e;t+=1)r*=.01*this.localTransforms[t].opacity;this.finalTransform.localOpacity=r}}},searchEffectTransforms:function(){if(this.renderableEffectsManager){var t=this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);if(t.length){this.localTransforms=[],this.finalTransform.localMat=new Matrix;var e=0,i=t.length;for(e=0;e<i;e+=1)this.localTransforms.push(t[e])}}},globalToLocal:function(t){var e=[];e.push(this.finalTransform);for(var i,s=!0,r=this.comp;s;)r.finalTransform?(r.data.hasMask&&e.splice(0,0,r.finalTransform),r=r.comp):s=!1;var n,a=e.length;for(i=0;i<a;i+=1)n=e[i].mat.applyToPointArray(0,0,0),t=[t[0]-n[0],t[1]-n[1],0];return t},mHelper:new Matrix},MaskElement.prototype.getMaskProperty=function(t){return this.viewData[t].prop},MaskElement.prototype.renderFrame=function(t){var e,i=this.element.finalTransform.mat,s=this.masksProperties.length;for(e=0;e<s;e+=1)if((this.viewData[e].prop._mdf||t)&&this.drawPath(this.masksProperties[e],this.viewData[e].prop.v,this.viewData[e]),(this.viewData[e].op._mdf||t)&&this.viewData[e].elem.setAttribute("fill-opacity",this.viewData[e].op.v),"n"!==this.masksProperties[e].mode&&(this.viewData[e].invRect&&(this.element.finalTransform.mProp._mdf||t)&&this.viewData[e].invRect.setAttribute("transform",i.getInverseMatrix().to2dCSS()),this.storedData[e].x&&(this.storedData[e].x._mdf||t))){var r=this.storedData[e].expan;this.storedData[e].x.v<0?("erode"!==this.storedData[e].lastOperator&&(this.storedData[e].lastOperator="erode",this.storedData[e].elem.setAttribute("filter","url("+getLocationHref()+"#"+this.storedData[e].filterId+")")),r.setAttribute("radius",-this.storedData[e].x.v)):("dilate"!==this.storedData[e].lastOperator&&(this.storedData[e].lastOperator="dilate",this.storedData[e].elem.setAttribute("filter",null)),this.storedData[e].elem.setAttribute("stroke-width",2*this.storedData[e].x.v))}},MaskElement.prototype.getMaskelement=function(){return this.maskElement},MaskElement.prototype.createLayerSolidPath=function(){var t="M0,0 ";return t+=" h"+this.globalData.compSize.w,t+=" v"+this.globalData.compSize.h,t+=" h-"+this.globalData.compSize.w,t+=" v-"+this.globalData.compSize.h+" "},MaskElement.prototype.drawPath=function(t,e,i){var s,r,n=" M"+e.v[0][0]+","+e.v[0][1];for(r=e._length,s=1;s<r;s+=1)n+=" C"+e.o[s-1][0]+","+e.o[s-1][1]+" "+e.i[s][0]+","+e.i[s][1]+" "+e.v[s][0]+","+e.v[s][1];if(e.c&&r>1&&(n+=" C"+e.o[s-1][0]+","+e.o[s-1][1]+" "+e.i[0][0]+","+e.i[0][1]+" "+e.v[0][0]+","+e.v[0][1]),i.lastPath!==n){var a="";i.elem&&(e.c&&(a=t.inv?this.solidPath+n:n),i.elem.setAttribute("d",a)),i.lastPath=n}},MaskElement.prototype.destroy=function(){this.element=null,this.globalData=null,this.maskElement=null,this.data=null,this.masksProperties=null};const filtersFactory=function(){var t={};return t.createFilter=function(t,e){var i=createNS("filter");i.setAttribute("id",t),!0!==e&&(i.setAttribute("filterUnits","objectBoundingBox"),i.setAttribute("x","0%"),i.setAttribute("y","0%"),i.setAttribute("width","100%"),i.setAttribute("height","100%"));return i},t.createAlphaToLuminanceFilter=function(){var t=createNS("feColorMatrix");return t.setAttribute("type","matrix"),t.setAttribute("color-interpolation-filters","sRGB"),t.setAttribute("values","0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"),t},t}(),featureSupport=function(){var t={maskType:!0,svgLumaHidden:!0,offscreenCanvas:"undefined"!=typeof OffscreenCanvas};return(/MSIE 10/i.test(navigator.userAgent)||/MSIE 9/i.test(navigator.userAgent)||/rv:11.0/i.test(navigator.userAgent)||/Edge\/\d./i.test(navigator.userAgent))&&(t.maskType=!1),/firefox/i.test(navigator.userAgent)&&(t.svgLumaHidden=!1),t}();var registeredEffects$1={},idPrefix="filter_result_";function SVGEffects(t){var e,i,s="SourceGraphic",r=t.data.ef?t.data.ef.length:0,n=createElementID(),a=filtersFactory.createFilter(n,!0),c=0;for(this.filters=[],e=0;e<r;e+=1){i=null;var l=t.data.ef[e].ty;if(registeredEffects$1[l])i=new(0,registeredEffects$1[l].effect)(a,t.effectsManager.effectElements[e],t,idPrefix+c,s),s=idPrefix+c,registeredEffects$1[l].countsAsEffect&&(c+=1);i&&this.filters.push(i)}c&&(t.globalData.defs.appendChild(a),t.layerElement.setAttribute("filter","url("+getLocationHref()+"#"+n+")")),this.filters.length&&t.addRenderableComponent(this)}function SVGBaseElement(){}function HierarchyElement(){}function RenderableDOMElement(){}function IImageElement(t,e,i){this.assetData=e.getAssetData(t.refId),this.assetData&&this.assetData.sid&&(this.assetData=e.slotManager.getProp(this.assetData)),this.initElement(t,e,i),this.sourceRect={top:0,left:0,width:this.assetData.w,height:this.assetData.h}}function ProcessedElement(t,e){this.elem=t,this.pos=e}function IShapeElement(){}SVGEffects.prototype.renderFrame=function(t){var e,i=this.filters.length;for(e=0;e<i;e+=1)this.filters[e].renderFrame(t)},SVGEffects.prototype.getEffects=function(t){var e,i=this.filters.length,s=[];for(e=0;e<i;e+=1)this.filters[e].type===t&&s.push(this.filters[e]);return s},SVGBaseElement.prototype={initRendererElement:function(){this.layerElement=createNS("g")},createContainerElements:function(){this.matteElement=createNS("g"),this.transformedElement=this.layerElement,this.maskedElement=this.layerElement,this._sizeChanged=!1;var t=null;if(this.data.td){this.matteMasks={};var e=createNS("g");e.setAttribute("id",this.layerId),e.appendChild(this.layerElement),t=e,this.globalData.defs.appendChild(e)}else this.data.tt?(this.matteElement.appendChild(this.layerElement),t=this.matteElement,this.baseElement=this.matteElement):this.baseElement=this.layerElement;if(this.data.ln&&this.layerElement.setAttribute("id",this.data.ln),this.data.cl&&this.layerElement.setAttribute("class",this.data.cl),0===this.data.ty&&!this.data.hd){var i=createNS("clipPath"),s=createNS("path");s.setAttribute("d","M0,0 L"+this.data.w+",0 L"+this.data.w+","+this.data.h+" L0,"+this.data.h+"z");var r=createElementID();if(i.setAttribute("id",r),i.appendChild(s),this.globalData.defs.appendChild(i),this.checkMasks()){var n=createNS("g");n.setAttribute("clip-path","url("+getLocationHref()+"#"+r+")"),n.appendChild(this.layerElement),this.transformedElement=n,t?t.appendChild(this.transformedElement):this.baseElement=this.transformedElement}else this.layerElement.setAttribute("clip-path","url("+getLocationHref()+"#"+r+")")}0!==this.data.bm&&this.setBlendMode()},renderElement:function(){this.finalTransform._localMatMdf&&this.transformedElement.setAttribute("transform",this.finalTransform.localMat.to2dCSS()),this.finalTransform._opMdf&&this.transformedElement.setAttribute("opacity",this.finalTransform.localOpacity)},destroyBaseElement:function(){this.layerElement=null,this.matteElement=null,this.maskManager.destroy()},getBaseElement:function(){return this.data.hd?null:this.baseElement},createRenderableComponents:function(){this.maskManager=new MaskElement(this.data,this,this.globalData),this.renderableEffectsManager=new SVGEffects(this),this.searchEffectTransforms()},getMatte:function(t){if(this.matteMasks||(this.matteMasks={}),!this.matteMasks[t]){var e,i,s,r,n=this.layerId+"_"+t;if(1===t||3===t){var a=createNS("mask");a.setAttribute("id",n),a.setAttribute("mask-type",3===t?"luminance":"alpha"),(s=createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink","href","#"+this.layerId),a.appendChild(s),this.globalData.defs.appendChild(a),featureSupport.maskType||1!==t||(a.setAttribute("mask-type","luminance"),e=createElementID(),i=filtersFactory.createFilter(e),this.globalData.defs.appendChild(i),i.appendChild(filtersFactory.createAlphaToLuminanceFilter()),(r=createNS("g")).appendChild(s),a.appendChild(r),r.setAttribute("filter","url("+getLocationHref()+"#"+e+")"))}else if(2===t){var c=createNS("mask");c.setAttribute("id",n),c.setAttribute("mask-type","alpha");var l=createNS("g");c.appendChild(l),e=createElementID(),i=filtersFactory.createFilter(e);var o=createNS("feComponentTransfer");o.setAttribute("in","SourceGraphic"),i.appendChild(o);var d=createNS("feFuncA");d.setAttribute("type","table"),d.setAttribute("tableValues","1.0 0.0"),o.appendChild(d),this.globalData.defs.appendChild(i);var h=createNS("rect");h.setAttribute("width",this.comp.data.w),h.setAttribute("height",this.comp.data.h),h.setAttribute("x","0"),h.setAttribute("y","0"),h.setAttribute("fill","#ffffff"),h.setAttribute("opacity","0"),l.setAttribute("filter","url("+getLocationHref()+"#"+e+")"),l.appendChild(h),(s=createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink","href","#"+this.layerId),l.appendChild(s),featureSupport.maskType||(c.setAttribute("mask-type","luminance"),i.appendChild(filtersFactory.createAlphaToLuminanceFilter()),r=createNS("g"),l.appendChild(h),r.appendChild(this.layerElement),l.appendChild(r)),this.globalData.defs.appendChild(c)}this.matteMasks[t]=n}return this.matteMasks[t]},setMatte:function(t){this.matteElement&&this.matteElement.setAttribute("mask","url("+getLocationHref()+"#"+t+")")}},HierarchyElement.prototype={initHierarchy:function(){this.hierarchy=[],this._isParent=!1,this.checkParenting()},setHierarchy:function(t){this.hierarchy=t},setAsParent:function(){this._isParent=!0},checkParenting:function(){void 0!==this.data.parent&&this.comp.buildElementParenting(this,this.data.parent,[])}},extendPrototype([RenderableElement,createProxyFunction({initElement:function(t,e,i){this.initFrame(),this.initBaseData(t,e,i),this.initTransform(t,e,i),this.initHierarchy(),this.initRenderable(),this.initRendererElement(),this.createContainerElements(),this.createRenderableComponents(),this.createContent(),this.hide()},hide:function(){this.hidden||this.isInRange&&!this.isTransparent||((this.baseElement||this.layerElement).style.display="none",this.hidden=!0)},show:function(){this.isInRange&&!this.isTransparent&&(this.data.hd||((this.baseElement||this.layerElement).style.display="block"),this.hidden=!1,this._isFirstFrame=!0)},renderFrame:function(){this.data.hd||this.hidden||(this.renderTransform(),this.renderRenderable(),this.renderLocalTransform(),this.renderElement(),this.renderInnerContent(),this._isFirstFrame&&(this._isFirstFrame=!1))},renderInnerContent:function(){},prepareFrame:function(t){this._mdf=!1,this.prepareRenderableFrame(t),this.prepareProperties(t,this.isInRange),this.checkTransparency()},destroy:function(){this.innerElem=null,this.destroyBaseElement()}})],RenderableDOMElement),extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement],IImageElement),IImageElement.prototype.createContent=function(){var t=this.globalData.getAssetsPath(this.assetData);this.innerElem=createNS("image"),this.innerElem.setAttribute("width",this.assetData.w+"px"),this.innerElem.setAttribute("height",this.assetData.h+"px"),this.innerElem.setAttribute("preserveAspectRatio",this.assetData.pr||this.globalData.renderConfig.imagePreserveAspectRatio),this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink","href",t),this.layerElement.appendChild(this.innerElem)},IImageElement.prototype.sourceRectAtTime=function(){return this.sourceRect},IShapeElement.prototype={addShapeToModifiers:function(t){var e,i=this.shapeModifiers.length;for(e=0;e<i;e+=1)this.shapeModifiers[e].addShape(t)},isShapeInAnimatedModifiers:function(t){for(var e=this.shapeModifiers.length;0<e;)if(this.shapeModifiers[0].isAnimatedWithShape(t))return!0;return!1},renderModifiers:function(){if(this.shapeModifiers.length){var t,e=this.shapes.length;for(t=0;t<e;t+=1)this.shapes[t].sh.reset();for(t=(e=this.shapeModifiers.length)-1;t>=0&&!this.shapeModifiers[t].processShapes(this._isFirstFrame);t-=1);}},searchProcessedElement:function(t){for(var e=this.processedElements,i=0,s=e.length;i<s;){if(e[i].elem===t)return e[i].pos;i+=1}return 0},addProcessedElement:function(t,e){for(var i=this.processedElements,s=i.length;s;)if(i[s-=1].elem===t)return void(i[s].pos=e);i.push(new ProcessedElement(t,e))},prepareFrame:function(t){this.prepareRenderableFrame(t),this.prepareProperties(t,this.isInRange)}};const lineCapEnum={1:"butt",2:"round",3:"square"},lineJoinEnum={1:"miter",2:"round",3:"bevel"};function SVGShapeData(t,e,i){this.caches=[],this.styles=[],this.transformers=t,this.lStr="",this.sh=i,this.lvl=e,this._isAnimated=!!i.k;for(var s=0,r=t.length;s<r;){if(t[s].mProps.dynamicProperties.length){this._isAnimated=!0;break}s+=1}}function SVGStyleData(t,e){this.data=t,this.type=t.ty,this.d="",this.lvl=e,this._mdf=!1,this.closed=!0===t.hd,this.pElem=createNS("path"),this.msElem=null}function DashProperty(t,e,i,s){var r;this.elem=t,this.frameId=-1,this.dataProps=createSizedArray(e.length),this.renderer=i,this.k=!1,this.dashStr="",this.dashArray=createTypedArray("float32",e.length?e.length-1:0),this.dashoffset=createTypedArray("float32",1),this.initDynamicPropertyContainer(s);var n,a=e.length||0;for(r=0;r<a;r+=1)n=PropertyFactory.getProp(t,e[r].v,0,0,this),this.k=n.k||this.k,this.dataProps[r]={n:e[r].n,p:n};this.k||this.getValue(!0),this._isAnimated=this.k}function SVGStrokeStyleData(t,e,i){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.o=PropertyFactory.getProp(t,e.o,0,.01,this),this.w=PropertyFactory.getProp(t,e.w,0,null,this),this.d=new DashProperty(t,e.d||{},"svg",this),this.c=PropertyFactory.getProp(t,e.c,1,255,this),this.style=i,this._isAnimated=!!this._isAnimated}function SVGFillStyleData(t,e,i){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.o=PropertyFactory.getProp(t,e.o,0,.01,this),this.c=PropertyFactory.getProp(t,e.c,1,255,this),this.style=i}function SVGNoStyleData(t,e,i){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.style=i}function GradientProperty(t,e,i){this.data=e,this.c=createTypedArray("uint8c",4*e.p);var s=e.k.k[0].s?e.k.k[0].s.length-4*e.p:e.k.k.length-4*e.p;this.o=createTypedArray("float32",s),this._cmdf=!1,this._omdf=!1,this._collapsable=this.checkCollapsable(),this._hasOpacity=s,this.initDynamicPropertyContainer(i),this.prop=PropertyFactory.getProp(t,e.k,1,null,this),this.k=this.prop.k,this.getValue(!0)}function SVGGradientFillStyleData(t,e,i){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.initGradientData(t,e,i)}function SVGGradientStrokeStyleData(t,e,i){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.w=PropertyFactory.getProp(t,e.w,0,null,this),this.d=new DashProperty(t,e.d||{},"svg",this),this.initGradientData(t,e,i),this._isAnimated=!!this._isAnimated}function ShapeGroupData(){this.it=[],this.prevViewData=[],this.gr=createNS("g")}function SVGTransformData(t,e,i){this.transform={mProps:t,op:e,container:i},this.elements=[],this._isAnimated=this.transform.mProps.dynamicProperties.length||this.transform.op.effectsSequence.length}SVGShapeData.prototype.setAsAnimated=function(){this._isAnimated=!0},SVGStyleData.prototype.reset=function(){this.d="",this._mdf=!1},DashProperty.prototype.getValue=function(t){if((this.elem.globalData.frameId!==this.frameId||t)&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties(),this._mdf=this._mdf||t,this._mdf)){var e=0,i=this.dataProps.length;for("svg"===this.renderer&&(this.dashStr=""),e=0;e<i;e+=1)"o"!==this.dataProps[e].n?"svg"===this.renderer?this.dashStr+=" "+this.dataProps[e].p.v:this.dashArray[e]=this.dataProps[e].p.v:this.dashoffset[0]=this.dataProps[e].p.v}},extendPrototype([DynamicPropertyContainer],DashProperty),extendPrototype([DynamicPropertyContainer],SVGStrokeStyleData),extendPrototype([DynamicPropertyContainer],SVGFillStyleData),extendPrototype([DynamicPropertyContainer],SVGNoStyleData),GradientProperty.prototype.comparePoints=function(t,e){for(var i=0,s=this.o.length/2;i<s;){if(Math.abs(t[4*i]-t[4*e+2*i])>.01)return!1;i+=1}return!0},GradientProperty.prototype.checkCollapsable=function(){if(this.o.length/2!=this.c.length/4)return!1;if(this.data.k.k[0].s)for(var t=0,e=this.data.k.k.length;t<e;){if(!this.comparePoints(this.data.k.k[t].s,this.data.p))return!1;t+=1}else if(!this.comparePoints(this.data.k.k,this.data.p))return!1;return!0},GradientProperty.prototype.getValue=function(t){if(this.prop.getValue(),this._mdf=!1,this._cmdf=!1,this._omdf=!1,this.prop._mdf||t){var e,i,s,r=4*this.data.p;for(e=0;e<r;e+=1)i=e%4==0?100:255,s=Math.round(this.prop.v[e]*i),this.c[e]!==s&&(this.c[e]=s,this._cmdf=!t);if(this.o.length)for(r=this.prop.v.length,e=4*this.data.p;e<r;e+=1)i=e%2==0?100:1,s=e%2==0?Math.round(100*this.prop.v[e]):this.prop.v[e],this.o[e-4*this.data.p]!==s&&(this.o[e-4*this.data.p]=s,this._omdf=!t);this._mdf=!t}},extendPrototype([DynamicPropertyContainer],GradientProperty),SVGGradientFillStyleData.prototype.initGradientData=function(t,e,i){this.o=PropertyFactory.getProp(t,e.o,0,.01,this),this.s=PropertyFactory.getProp(t,e.s,1,null,this),this.e=PropertyFactory.getProp(t,e.e,1,null,this),this.h=PropertyFactory.getProp(t,e.h||{k:0},0,.01,this),this.a=PropertyFactory.getProp(t,e.a||{k:0},0,degToRads,this),this.g=new GradientProperty(t,e.g,this),this.style=i,this.stops=[],this.setGradientData(i.pElem,e),this.setGradientOpacity(e,i),this._isAnimated=!!this._isAnimated},SVGGradientFillStyleData.prototype.setGradientData=function(t,e){var i=createElementID(),s=createNS(1===e.t?"linearGradient":"radialGradient");s.setAttribute("id",i),s.setAttribute("spreadMethod","pad"),s.setAttribute("gradientUnits","userSpaceOnUse");var r,n,a,c=[];for(a=4*e.g.p,n=0;n<a;n+=4)r=createNS("stop"),s.appendChild(r),c.push(r);t.setAttribute("gf"===e.ty?"fill":"stroke","url("+getLocationHref()+"#"+i+")"),this.gf=s,this.cst=c},SVGGradientFillStyleData.prototype.setGradientOpacity=function(t,e){if(this.g._hasOpacity&&!this.g._collapsable){var i,s,r,n=createNS("mask"),a=createNS("path");n.appendChild(a);var c=createElementID(),l=createElementID();n.setAttribute("id",l);var o=createNS(1===t.t?"linearGradient":"radialGradient");o.setAttribute("id",c),o.setAttribute("spreadMethod","pad"),o.setAttribute("gradientUnits","userSpaceOnUse"),r=t.g.k.k[0].s?t.g.k.k[0].s.length:t.g.k.k.length;var d=this.stops;for(s=4*t.g.p;s<r;s+=2)(i=createNS("stop")).setAttribute("stop-color","rgb(255,255,255)"),o.appendChild(i),d.push(i);a.setAttribute("gf"===t.ty?"fill":"stroke","url("+getLocationHref()+"#"+c+")"),"gs"===t.ty&&(a.setAttribute("stroke-linecap",lineCapEnum[t.lc||2]),a.setAttribute("stroke-linejoin",lineJoinEnum[t.lj||2]),1===t.lj&&a.setAttribute("stroke-miterlimit",t.ml)),this.of=o,this.ms=n,this.ost=d,this.maskId=l,e.msElem=a}},extendPrototype([DynamicPropertyContainer],SVGGradientFillStyleData),extendPrototype([SVGGradientFillStyleData,DynamicPropertyContainer],SVGGradientStrokeStyleData);const buildShapeString=function(t,e,i,s){if(0===e)return"";var r,n=t.o,a=t.i,c=t.v,l=" M"+s.applyToPointStringified(c[0][0],c[0][1]);for(r=1;r<e;r+=1)l+=" C"+s.applyToPointStringified(n[r-1][0],n[r-1][1])+" "+s.applyToPointStringified(a[r][0],a[r][1])+" "+s.applyToPointStringified(c[r][0],c[r][1]);return i&&e&&(l+=" C"+s.applyToPointStringified(n[r-1][0],n[r-1][1])+" "+s.applyToPointStringified(a[0][0],a[0][1])+" "+s.applyToPointStringified(c[0][0],c[0][1]),l+="z"),l},SVGElementsRenderer=function(){var t=new Matrix,e=new Matrix;function i(t,e,i){(i||e.transform.op._mdf)&&e.transform.container.setAttribute("opacity",e.transform.op.v),(i||e.transform.mProps._mdf)&&e.transform.container.setAttribute("transform",e.transform.mProps.v.to2dCSS())}function s(){}function r(i,s,r){var n,a,c,l,o,d,h,m,p,v,f=s.styles.length,u=s.lvl;for(d=0;d<f;d+=1){if(l=s.sh._mdf||r,s.styles[d].lvl<u){for(m=e.reset(),p=u-s.styles[d].lvl,v=s.transformers.length-1;!l&&p>0;)l=s.transformers[v].mProps._mdf||l,p-=1,v-=1;if(l)for(p=u-s.styles[d].lvl,v=s.transformers.length-1;p>0;)m.multiply(s.transformers[v].mProps.v),p-=1,v-=1}else m=t;if(a=(h=s.sh.paths)._length,l){for(c="",n=0;n<a;n+=1)(o=h.shapes[n])&&o._length&&(c+=buildShapeString(o,o._length,o.c,m));s.caches[d]=c}else c=s.caches[d];s.styles[d].d+=!0===i.hd?"":c,s.styles[d]._mdf=l||s.styles[d]._mdf}}function n(t,e,i){var s=e.style;(e.c._mdf||i)&&s.pElem.setAttribute("fill","rgb("+bmFloor(e.c.v[0])+","+bmFloor(e.c.v[1])+","+bmFloor(e.c.v[2])+")"),(e.o._mdf||i)&&s.pElem.setAttribute("fill-opacity",e.o.v)}function a(t,e,i){c(t,e,i),l(t,e,i)}function c(t,e,i){var s,r,n,a,c,l=e.gf,o=e.g._hasOpacity,d=e.s.v,h=e.e.v;if(e.o._mdf||i){var m="gf"===t.ty?"fill-opacity":"stroke-opacity";e.style.pElem.setAttribute(m,e.o.v)}if(e.s._mdf||i){var p=1===t.t?"x1":"cx",v="x1"===p?"y1":"cy";l.setAttribute(p,d[0]),l.setAttribute(v,d[1]),o&&!e.g._collapsable&&(e.of.setAttribute(p,d[0]),e.of.setAttribute(v,d[1]))}if(e.g._cmdf||i){s=e.cst;var f=e.g.c;for(n=s.length,r=0;r<n;r+=1)(a=s[r]).setAttribute("offset",f[4*r]+"%"),a.setAttribute("stop-color","rgb("+f[4*r+1]+","+f[4*r+2]+","+f[4*r+3]+")")}if(o&&(e.g._omdf||i)){var u=e.g.o;for(n=(s=e.g._collapsable?e.cst:e.ost).length,r=0;r<n;r+=1)a=s[r],e.g._collapsable||a.setAttribute("offset",u[2*r]+"%"),a.setAttribute("stop-opacity",u[2*r+1])}if(1===t.t)(e.e._mdf||i)&&(l.setAttribute("x2",h[0]),l.setAttribute("y2",h[1]),o&&!e.g._collapsable&&(e.of.setAttribute("x2",h[0]),e.of.setAttribute("y2",h[1])));else if((e.s._mdf||e.e._mdf||i)&&(c=Math.sqrt(Math.pow(d[0]-h[0],2)+Math.pow(d[1]-h[1],2)),l.setAttribute("r",c),o&&!e.g._collapsable&&e.of.setAttribute("r",c)),e.e._mdf||e.h._mdf||e.a._mdf||i){c||(c=Math.sqrt(Math.pow(d[0]-h[0],2)+Math.pow(d[1]-h[1],2)));var y=Math.atan2(h[1]-d[1],h[0]-d[0]),g=e.h.v;g>=1?g=.99:g<=-1&&(g=-.99);var _=c*g,C=Math.cos(y+e.a.v)*_+d[0],E=Math.sin(y+e.a.v)*_+d[1];l.setAttribute("fx",C),l.setAttribute("fy",E),o&&!e.g._collapsable&&(e.of.setAttribute("fx",C),e.of.setAttribute("fy",E))}}function l(t,e,i){var s=e.style,r=e.d;r&&(r._mdf||i)&&r.dashStr&&(s.pElem.setAttribute("stroke-dasharray",r.dashStr),s.pElem.setAttribute("stroke-dashoffset",r.dashoffset[0])),e.c&&(e.c._mdf||i)&&s.pElem.setAttribute("stroke","rgb("+bmFloor(e.c.v[0])+","+bmFloor(e.c.v[1])+","+bmFloor(e.c.v[2])+")"),(e.o._mdf||i)&&s.pElem.setAttribute("stroke-opacity",e.o.v),(e.w._mdf||i)&&(s.pElem.setAttribute("stroke-width",e.w.v),s.msElem&&s.msElem.setAttribute("stroke-width",e.w.v))}return{createRenderFunction:function(t){switch(t.ty){case"fl":return n;case"gf":return c;case"gs":return a;case"st":return l;case"sh":case"el":case"rc":case"sr":return r;case"tr":return i;case"no":return s;default:return null}}}}();function SVGShapeElement(t,e,i){this.shapes=[],this.shapesData=t.shapes,this.stylesList=[],this.shapeModifiers=[],this.itemsData=[],this.processedElements=[],this.animatedContents=[],this.initElement(t,e,i),this.prevViewData=[]}function LetterProps(t,e,i,s,r,n){this.o=t,this.sw=e,this.sc=i,this.fc=s,this.m=r,this.p=n,this._mdf={o:!0,sw:!!e,sc:!!i,fc:!!s,m:!0,p:!0}}function TextProperty(t,e){this._frameId=initialDefaultFrame,this.pv="",this.v="",this.kf=!1,this._isFirstFrame=!0,this._mdf=!1,e.d&&e.d.sid&&(e.d=t.globalData.slotManager.getProp(e.d)),this.data=e,this.elem=t,this.comp=this.elem.comp,this.keysIndex=0,this.canResize=!1,this.minimumFontSize=1,this.effectsSequence=[],this.currentData={ascent:0,boxWidth:this.defaultBoxWidth,f:"",fStyle:"",fWeight:"",fc:"",j:"",justifyOffset:"",l:[],lh:0,lineWidths:[],ls:"",of:"",s:"",sc:"",sw:0,t:0,tr:0,sz:0,ps:null,fillColorAnim:!1,strokeColorAnim:!1,strokeWidthAnim:!1,yOffset:0,finalSize:0,finalText:[],finalLineHeight:0,__complete:!1},this.copyData(this.currentData,this.data.d.k[0].s),this.searchProperty()||this.completeTextData(this.currentData)}extendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement],SVGShapeElement),SVGShapeElement.prototype.initSecondaryElement=function(){},SVGShapeElement.prototype.identityMatrix=new Matrix,SVGShapeElement.prototype.buildExpressionInterface=function(){},SVGShapeElement.prototype.createContent=function(){this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,0,[],!0),this.filterUniqueShapes()},SVGShapeElement.prototype.filterUniqueShapes=function(){var t,e,i,s,r=this.shapes.length,n=this.stylesList.length,a=[],c=!1;for(i=0;i<n;i+=1){for(s=this.stylesList[i],c=!1,a.length=0,t=0;t<r;t+=1)-1!==(e=this.shapes[t]).styles.indexOf(s)&&(a.push(e),c=e._isAnimated||c);a.length>1&&c&&this.setShapesAsAnimated(a)}},SVGShapeElement.prototype.setShapesAsAnimated=function(t){var e,i=t.length;for(e=0;e<i;e+=1)t[e].setAsAnimated()},SVGShapeElement.prototype.createStyleElement=function(t,e){var i,s=new SVGStyleData(t,e),r=s.pElem;if("st"===t.ty)i=new SVGStrokeStyleData(this,t,s);else if("fl"===t.ty)i=new SVGFillStyleData(this,t,s);else if("gf"===t.ty||"gs"===t.ty){i=new("gf"===t.ty?SVGGradientFillStyleData:SVGGradientStrokeStyleData)(this,t,s),this.globalData.defs.appendChild(i.gf),i.maskId&&(this.globalData.defs.appendChild(i.ms),this.globalData.defs.appendChild(i.of),r.setAttribute("mask","url("+getLocationHref()+"#"+i.maskId+")"))}else"no"===t.ty&&(i=new SVGNoStyleData(this,t,s));return"st"!==t.ty&&"gs"!==t.ty||(r.setAttribute("stroke-linecap",lineCapEnum[t.lc||2]),r.setAttribute("stroke-linejoin",lineJoinEnum[t.lj||2]),r.setAttribute("fill-opacity","0"),1===t.lj&&r.setAttribute("stroke-miterlimit",t.ml)),2===t.r&&r.setAttribute("fill-rule","evenodd"),t.ln&&r.setAttribute("id",t.ln),t.cl&&r.setAttribute("class",t.cl),t.bm&&(r.style["mix-blend-mode"]=getBlendMode(t.bm)),this.stylesList.push(s),this.addToAnimatedContents(t,i),i},SVGShapeElement.prototype.createGroupElement=function(t){var e=new ShapeGroupData;return t.ln&&e.gr.setAttribute("id",t.ln),t.cl&&e.gr.setAttribute("class",t.cl),t.bm&&(e.gr.style["mix-blend-mode"]=getBlendMode(t.bm)),e},SVGShapeElement.prototype.createTransformElement=function(t,e){var i=TransformPropertyFactory.getTransformProperty(this,t,this),s=new SVGTransformData(i,i.o,e);return this.addToAnimatedContents(t,s),s},SVGShapeElement.prototype.createShapeElement=function(t,e,i){var s=4;"rc"===t.ty?s=5:"el"===t.ty?s=6:"sr"===t.ty&&(s=7);var r=new SVGShapeData(e,i,ShapePropertyFactory.getShapeProp(this,t,s,this));return this.shapes.push(r),this.addShapeToModifiers(r),this.addToAnimatedContents(t,r),r},SVGShapeElement.prototype.addToAnimatedContents=function(t,e){for(var i=0,s=this.animatedContents.length;i<s;){if(this.animatedContents[i].element===e)return;i+=1}this.animatedContents.push({fn:SVGElementsRenderer.createRenderFunction(t),element:e,data:t})},SVGShapeElement.prototype.setElementStyles=function(t){var e,i=t.styles,s=this.stylesList.length;for(e=0;e<s;e+=1)this.stylesList[e].closed||i.push(this.stylesList[e])},SVGShapeElement.prototype.reloadShapes=function(){var t;this._isFirstFrame=!0;var e=this.itemsData.length;for(t=0;t<e;t+=1)this.prevViewData[t]=this.itemsData[t];for(this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,0,[],!0),this.filterUniqueShapes(),e=this.dynamicProperties.length,t=0;t<e;t+=1)this.dynamicProperties[t].getValue();this.renderModifiers()},SVGShapeElement.prototype.searchShapes=function(t,e,i,s,r,n,a){var c,l,o,d,h,m,p=[].concat(n),v=t.length-1,f=[],u=[];for(c=v;c>=0;c-=1){if((m=this.searchProcessedElement(t[c]))?e[c]=i[m-1]:t[c]._render=a,"fl"===t[c].ty||"st"===t[c].ty||"gf"===t[c].ty||"gs"===t[c].ty||"no"===t[c].ty)m?e[c].style.closed=!1:e[c]=this.createStyleElement(t[c],r),t[c]._render&&e[c].style.pElem.parentNode!==s&&s.appendChild(e[c].style.pElem),f.push(e[c].style);else if("gr"===t[c].ty){if(m)for(o=e[c].it.length,l=0;l<o;l+=1)e[c].prevViewData[l]=e[c].it[l];else e[c]=this.createGroupElement(t[c]);this.searchShapes(t[c].it,e[c].it,e[c].prevViewData,e[c].gr,r+1,p,a),t[c]._render&&e[c].gr.parentNode!==s&&s.appendChild(e[c].gr)}else"tr"===t[c].ty?(m||(e[c]=this.createTransformElement(t[c],s)),d=e[c].transform,p.push(d)):"sh"===t[c].ty||"rc"===t[c].ty||"el"===t[c].ty||"sr"===t[c].ty?(m||(e[c]=this.createShapeElement(t[c],p,r)),this.setElementStyles(e[c])):"tm"===t[c].ty||"rd"===t[c].ty||"ms"===t[c].ty||"pb"===t[c].ty||"zz"===t[c].ty||"op"===t[c].ty?(m?(h=e[c]).closed=!1:((h=ShapeModifiers.getModifier(t[c].ty)).init(this,t[c]),e[c]=h,this.shapeModifiers.push(h)),u.push(h)):"rp"===t[c].ty&&(m?(h=e[c]).closed=!0:(h=ShapeModifiers.getModifier(t[c].ty),e[c]=h,h.init(this,t,c,e),this.shapeModifiers.push(h),a=!1),u.push(h));this.addProcessedElement(t[c],c+1)}for(v=f.length,c=0;c<v;c+=1)f[c].closed=!0;for(v=u.length,c=0;c<v;c+=1)u[c].closed=!0},SVGShapeElement.prototype.renderInnerContent=function(){var t;this.renderModifiers();var e=this.stylesList.length;for(t=0;t<e;t+=1)this.stylesList[t].reset();for(this.renderShape(),t=0;t<e;t+=1)(this.stylesList[t]._mdf||this._isFirstFrame)&&(this.stylesList[t].msElem&&(this.stylesList[t].msElem.setAttribute("d",this.stylesList[t].d),this.stylesList[t].d="M0 0"+this.stylesList[t].d),this.stylesList[t].pElem.setAttribute("d",this.stylesList[t].d||"M0 0"))},SVGShapeElement.prototype.renderShape=function(){var t,e,i=this.animatedContents.length;for(t=0;t<i;t+=1)e=this.animatedContents[t],(this._isFirstFrame||e.element._isAnimated)&&!0!==e.data&&e.fn(e.data,e.element,this._isFirstFrame)},SVGShapeElement.prototype.destroy=function(){this.destroyBaseElement(),this.shapesData=null,this.itemsData=null},LetterProps.prototype.update=function(t,e,i,s,r,n){this._mdf.o=!1,this._mdf.sw=!1,this._mdf.sc=!1,this._mdf.fc=!1,this._mdf.m=!1,this._mdf.p=!1;var a=!1;return this.o!==t&&(this.o=t,this._mdf.o=!0,a=!0),this.sw!==e&&(this.sw=e,this._mdf.sw=!0,a=!0),this.sc!==i&&(this.sc=i,this._mdf.sc=!0,a=!0),this.fc!==s&&(this.fc=s,this._mdf.fc=!0,a=!0),this.m!==r&&(this.m=r,this._mdf.m=!0,a=!0),!n.length||this.p[0]===n[0]&&this.p[1]===n[1]&&this.p[4]===n[4]&&this.p[5]===n[5]&&this.p[12]===n[12]&&this.p[13]===n[13]||(this.p=n,this._mdf.p=!0,a=!0),a},TextProperty.prototype.defaultBoxWidth=[0,0],TextProperty.prototype.copyData=function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},TextProperty.prototype.setCurrentData=function(t){t.__complete||this.completeTextData(t),this.currentData=t,this.currentData.boxWidth=this.currentData.boxWidth||this.defaultBoxWidth,this._mdf=!0},TextProperty.prototype.searchProperty=function(){return this.searchKeyframes()},TextProperty.prototype.searchKeyframes=function(){return this.kf=this.data.d.k.length>1,this.kf&&this.addEffect(this.getKeyframeValue.bind(this)),this.kf},TextProperty.prototype.addEffect=function(t){this.effectsSequence.push(t),this.elem.addDynamicProperty(this)},TextProperty.prototype.getValue=function(t){if(this.elem.globalData.frameId!==this.frameId&&this.effectsSequence.length||t){this.currentData.t=this.data.d.k[this.keysIndex].s.t;var e=this.currentData,i=this.keysIndex;if(this.lock)this.setCurrentData(this.currentData);else{var s;this.lock=!0,this._mdf=!1;var r=this.effectsSequence.length,n=t||this.data.d.k[this.keysIndex].s;for(s=0;s<r;s+=1)n=i!==this.keysIndex?this.effectsSequence[s](n,n.t):this.effectsSequence[s](this.currentData,n.t);e!==n&&this.setCurrentData(n),this.v=this.currentData,this.pv=this.v,this.lock=!1,this.frameId=this.elem.globalData.frameId}}},TextProperty.prototype.getKeyframeValue=function(){for(var t=this.data.d.k,e=this.elem.comp.renderedFrame,i=0,s=t.length;i<=s-1&&!(i===s-1||t[i+1].t>e);)i+=1;return this.keysIndex!==i&&(this.keysIndex=i),this.data.d.k[this.keysIndex].s},TextProperty.prototype.buildFinalText=function(t){for(var e,i,s=[],r=0,n=t.length,a=!1,c=!1,l="";r<n;)a=c,c=!1,e=t.charCodeAt(r),l=t.charAt(r),FontManager.isCombinedCharacter(e)?a=!0:e>=55296&&e<=56319?FontManager.isRegionalFlag(t,r)?l=t.substr(r,14):(i=t.charCodeAt(r+1))>=56320&&i<=57343&&(FontManager.isModifier(e,i)?(l=t.substr(r,2),a=!0):l=FontManager.isFlagEmoji(t.substr(r,4))?t.substr(r,4):t.substr(r,2)):e>56319?(i=t.charCodeAt(r+1),FontManager.isVariationSelector(e)&&(a=!0)):FontManager.isZeroWidthJoiner(e)&&(a=!0,c=!0),a?(s[s.length-1]+=l,a=!1):s.push(l),r+=l.length;return s},TextProperty.prototype.completeTextData=function(t){t.__complete=!0;var e,i,s,r,n,a,c,l=this.elem.globalData.fontManager,o=this.data,d=[],h=0,m=o.m.g,p=0,v=0,f=0,u=[],y=0,g=0,_=l.getFontByName(t.f),C=0,E=getFontProperties(_);t.fWeight=E.weight,t.fStyle=E.style,t.finalSize=t.s,t.finalText=this.buildFinalText(t.t),i=t.finalText.length,t.finalLineHeight=t.lh;var I,T=t.tr/1e3*t.finalSize;if(t.sz)for(var x,S,P=!0,b=t.sz[0],A=t.sz[1];P;){x=0,y=0,i=(S=this.buildFinalText(t.t)).length,T=t.tr/1e3*t.finalSize;var w=-1;for(e=0;e<i;e+=1)I=S[e].charCodeAt(0),s=!1," "===S[e]?w=e:13!==I&&3!==I||(y=0,s=!0,x+=t.finalLineHeight||1.2*t.finalSize),l.chars?(c=l.getCharData(S[e],_.fStyle,_.fFamily),C=s?0:c.w*t.finalSize/100):C=l.measureText(S[e],t.f,t.finalSize),y+C>b&&" "!==S[e]?(-1===w?i+=1:e=w,x+=t.finalLineHeight||1.2*t.finalSize,S.splice(e,w===e?1:0,"\r"),w=-1,y=0):(y+=C,y+=T);x+=_.ascent*t.finalSize/100,this.canResize&&t.finalSize>this.minimumFontSize&&A<x?(t.finalSize-=1,t.finalLineHeight=t.finalSize*t.lh/t.s):(t.finalText=S,i=t.finalText.length,P=!1)}y=-T,C=0;var M,O=0;for(e=0;e<i;e+=1)if(s=!1,13===(I=(M=t.finalText[e]).charCodeAt(0))||3===I?(O=0,u.push(y),g=y>g?y:g,y=-2*T,r="",s=!0,f+=1):r=M,l.chars?(c=l.getCharData(M,_.fStyle,l.getFontByName(t.f).fFamily),C=s?0:c.w*t.finalSize/100):C=l.measureText(r,t.f,t.finalSize)," "===M?O+=C+T:(y+=C+T+O,O=0),d.push({l:C,an:C,add:p,n:s,anIndexes:[],val:r,line:f,animatorJustifyOffset:0}),2==m){if(p+=C,""===r||" "===r||e===i-1){for(""!==r&&" "!==r||(p-=C);v<=e;)d[v].an=p,d[v].ind=h,d[v].extra=C,v+=1;h+=1,p=0}}else if(3==m){if(p+=C,""===r||e===i-1){for(""===r&&(p-=C);v<=e;)d[v].an=p,d[v].ind=h,d[v].extra=C,v+=1;p=0,h+=1}}else d[h].ind=h,d[h].extra=0,h+=1;if(t.l=d,g=y>g?y:g,u.push(y),t.sz)t.boxWidth=t.sz[0],t.justifyOffset=0;else switch(t.boxWidth=g,t.j){case 1:t.justifyOffset=-t.boxWidth;break;case 2:t.justifyOffset=-t.boxWidth/2;break;default:t.justifyOffset=0}t.lineWidths=u;var D,L,k,F,R=o.a;a=R.length;var N=[];for(n=0;n<a;n+=1){for((D=R[n]).a.sc&&(t.strokeColorAnim=!0),D.a.sw&&(t.strokeWidthAnim=!0),(D.a.fc||D.a.fh||D.a.fs||D.a.fb)&&(t.fillColorAnim=!0),F=0,k=D.s.b,e=0;e<i;e+=1)(L=d[e]).anIndexes[n]=F,(1==k&&""!==L.val||2==k&&""!==L.val&&" "!==L.val||3==k&&(L.n||" "==L.val||e==i-1)||4==k&&(L.n||e==i-1))&&(1===D.s.rn&&N.push(F),F+=1);o.a[n].s.totalChars=F;var V,B=-1;if(1===D.s.rn)for(e=0;e<i;e+=1)B!=(L=d[e]).anIndexes[n]&&(B=L.anIndexes[n],V=N.splice(Math.floor(Math.random()*N.length),1)[0]),L.anIndexes[n]=V}t.yOffset=t.finalLineHeight||1.2*t.finalSize,t.ls=t.ls||0,t.ascent=_.ascent*t.finalSize/100},TextProperty.prototype.updateDocumentData=function(t,e){e=void 0===e?this.keysIndex:e;var i=this.copyData({},this.data.d.k[e].s);i=this.copyData(i,t),this.data.d.k[e].s=i,this.recalculate(e),this.setCurrentData(i),this.elem.addDynamicProperty(this)},TextProperty.prototype.recalculate=function(t){var e=this.data.d.k[t].s;e.__complete=!1,this.keysIndex=0,this._isFirstFrame=!0,this.getValue(e)},TextProperty.prototype.canResizeFont=function(t){this.canResize=t,this.recalculate(this.keysIndex),this.elem.addDynamicProperty(this)},TextProperty.prototype.setMinimumFontSize=function(t){this.minimumFontSize=Math.floor(t)||1,this.recalculate(this.keysIndex),this.elem.addDynamicProperty(this)};const TextSelectorProp=function(){var t=Math.max,e=Math.min,i=Math.floor;function s(t,e){this._currentTextLength=-1,this.k=!1,this.data=e,this.elem=t,this.comp=t.comp,this.finalS=0,this.finalE=0,this.initDynamicPropertyContainer(t),this.s=PropertyFactory.getProp(t,e.s||{k:0},0,0,this),this.e="e"in e?PropertyFactory.getProp(t,e.e,0,0,this):{v:100},this.o=PropertyFactory.getProp(t,e.o||{k:0},0,0,this),this.xe=PropertyFactory.getProp(t,e.xe||{k:0},0,0,this),this.ne=PropertyFactory.getProp(t,e.ne||{k:0},0,0,this),this.sm=PropertyFactory.getProp(t,e.sm||{k:100},0,0,this),this.a=PropertyFactory.getProp(t,e.a,0,.01,this),this.dynamicProperties.length||this.getValue()}return s.prototype={getMult:function(s){this._currentTextLength!==this.elem.textProperty.currentData.l.length&&this.getValue();var r=0,n=0,a=1,c=1;this.ne.v>0?r=this.ne.v/100:n=-this.ne.v/100,this.xe.v>0?a=1-this.xe.v/100:c=1+this.xe.v/100;var l=BezierFactory.getBezierEasing(r,n,a,c).get,o=0,d=this.finalS,h=this.finalE,m=this.data.sh;if(2===m)o=l(o=h===d?s>=h?1:0:t(0,e(.5/(h-d)+(s-d)/(h-d),1)));else if(3===m)o=l(o=h===d?s>=h?0:1:1-t(0,e(.5/(h-d)+(s-d)/(h-d),1)));else if(4===m)h===d?o=0:(o=t(0,e(.5/(h-d)+(s-d)/(h-d),1)))<.5?o*=2:o=1-2*(o-.5),o=l(o);else if(5===m){if(h===d)o=0;else{var p=h-d,v=-p/2+(s=e(t(0,s+.5-d),h-d)),f=p/2;o=Math.sqrt(1-v*v/(f*f))}o=l(o)}else 6===m?(h===d?o=0:(s=e(t(0,s+.5-d),h-d),o=(1+Math.cos(Math.PI+2*Math.PI*s/(h-d)))/2),o=l(o)):(s>=i(d)&&(o=t(0,e(s-d<0?e(h,1)-(d-s):h-s,1))),o=l(o));if(100!==this.sm.v){var u=.01*this.sm.v;0===u&&(u=1e-8);var y=.5-.5*u;o<y?o=0:(o=(o-y)/u)>1&&(o=1)}return o*this.a.v},getValue:function(t){this.iterateDynamicProperties(),this._mdf=t||this._mdf,this._currentTextLength=this.elem.textProperty.currentData.l.length||0,t&&2===this.data.r&&(this.e.v=this._currentTextLength);var e=2===this.data.r?1:100/this.data.totalChars,i=this.o.v/e,s=this.s.v/e+i,r=this.e.v/e+i;if(s>r){var n=s;s=r,r=n}this.finalS=s,this.finalE=r}},extendPrototype([DynamicPropertyContainer],s),{getTextSelectorProp:function(t,e,i){return new s(t,e)}}}();function TextAnimatorDataProperty(t,e,i){var s={propType:!1},r=PropertyFactory.getProp,n=e.a;this.a={r:n.r?r(t,n.r,0,degToRads,i):s,rx:n.rx?r(t,n.rx,0,degToRads,i):s,ry:n.ry?r(t,n.ry,0,degToRads,i):s,sk:n.sk?r(t,n.sk,0,degToRads,i):s,sa:n.sa?r(t,n.sa,0,degToRads,i):s,s:n.s?r(t,n.s,1,.01,i):s,a:n.a?r(t,n.a,1,0,i):s,o:n.o?r(t,n.o,0,.01,i):s,p:n.p?r(t,n.p,1,0,i):s,sw:n.sw?r(t,n.sw,0,0,i):s,sc:n.sc?r(t,n.sc,1,0,i):s,fc:n.fc?r(t,n.fc,1,0,i):s,fh:n.fh?r(t,n.fh,0,0,i):s,fs:n.fs?r(t,n.fs,0,.01,i):s,fb:n.fb?r(t,n.fb,0,.01,i):s,t:n.t?r(t,n.t,0,0,i):s},this.s=TextSelectorProp.getTextSelectorProp(t,e.s,i),this.s.t=e.s.t}function TextAnimatorProperty(t,e,i){this._isFirstFrame=!0,this._hasMaskedPath=!1,this._frameId=-1,this._textData=t,this._renderType=e,this._elem=i,this._animatorsData=createSizedArray(this._textData.a.length),this._pathData={},this._moreOptions={alignment:{}},this.renderedLetters=[],this.lettersChangedFlag=!1,this.initDynamicPropertyContainer(i)}function ITextElement(){}TextAnimatorProperty.prototype.searchProperties=function(){var t,e,i=this._textData.a.length,s=PropertyFactory.getProp;for(t=0;t<i;t+=1)e=this._textData.a[t],this._animatorsData[t]=new TextAnimatorDataProperty(this._elem,e,this);this._textData.p&&"m"in this._textData.p?(this._pathData={a:s(this._elem,this._textData.p.a,0,0,this),f:s(this._elem,this._textData.p.f,0,0,this),l:s(this._elem,this._textData.p.l,0,0,this),r:s(this._elem,this._textData.p.r,0,0,this),p:s(this._elem,this._textData.p.p,0,0,this),m:this._elem.maskManager.getMaskProperty(this._textData.p.m)},this._hasMaskedPath=!0):this._hasMaskedPath=!1,this._moreOptions.alignment=s(this._elem,this._textData.m.a,1,0,this)},TextAnimatorProperty.prototype.getMeasures=function(t,e){if(this.lettersChangedFlag=e,this._mdf||this._isFirstFrame||e||this._hasMaskedPath&&this._pathData.m._mdf){this._isFirstFrame=!1;var i,s,r,n,a,c,l,o,d,h,m,p,v,f,u,y,g,_,C,E=this._moreOptions.alignment.v,I=this._animatorsData,T=this._textData,x=this.mHelper,S=this._renderType,P=this.renderedLetters.length,b=t.l;if(this._hasMaskedPath){if(C=this._pathData.m,!this._pathData.n||this._pathData._mdf){var A,w=C.v;for(this._pathData.r.v&&(w=w.reverse()),a={tLength:0,segments:[]},n=w._length-1,y=0,r=0;r<n;r+=1)A=bez.buildBezierData(w.v[r],w.v[r+1],[w.o[r][0]-w.v[r][0],w.o[r][1]-w.v[r][1]],[w.i[r+1][0]-w.v[r+1][0],w.i[r+1][1]-w.v[r+1][1]]),a.tLength+=A.segmentLength,a.segments.push(A),y+=A.segmentLength;r=n,C.v.c&&(A=bez.buildBezierData(w.v[r],w.v[0],[w.o[r][0]-w.v[r][0],w.o[r][1]-w.v[r][1]],[w.i[0][0]-w.v[0][0],w.i[0][1]-w.v[0][1]]),a.tLength+=A.segmentLength,a.segments.push(A),y+=A.segmentLength),this._pathData.pi=a}if(a=this._pathData.pi,c=this._pathData.f.v,m=0,h=1,o=0,d=!0,f=a.segments,c<0&&C.v.c)for(a.tLength<Math.abs(c)&&(c=-Math.abs(c)%a.tLength),h=(v=f[m=f.length-1].points).length-1;c<0;)c+=v[h].partialLength,(h-=1)<0&&(h=(v=f[m-=1].points).length-1);p=(v=f[m].points)[h-1],u=(l=v[h]).partialLength}n=b.length,i=0,s=0;var M,O,D,L,k,F=1.2*t.finalSize*.714,R=!0;D=I.length;var N,V,B,z,j,H,G,U,W,J,Y,X,Z=-1,q=c,K=m,Q=h,$=-1,tt="",et=this.defaultPropsArray;if(2===t.j||1===t.j){var it=0,st=0,rt=2===t.j?-.5:-1,nt=0,at=!0;for(r=0;r<n;r+=1)if(b[r].n){for(it&&(it+=st);nt<r;)b[nt].animatorJustifyOffset=it,nt+=1;it=0,at=!0}else{for(O=0;O<D;O+=1)(M=I[O].a).t.propType&&(at&&2===t.j&&(st+=M.t.v*rt),(k=I[O].s.getMult(b[r].anIndexes[O],T.a[O].s.totalChars)).length?it+=M.t.v*k[0]*rt:it+=M.t.v*k*rt);at=!1}for(it&&(it+=st);nt<r;)b[nt].animatorJustifyOffset=it,nt+=1}for(r=0;r<n;r+=1){if(x.reset(),z=1,b[r].n)i=0,s+=t.yOffset,s+=R?1:0,c=q,R=!1,this._hasMaskedPath&&(h=Q,p=(v=f[m=K].points)[h-1],u=(l=v[h]).partialLength,o=0),tt="",Y="",W="",X="",et=this.defaultPropsArray;else{if(this._hasMaskedPath){if($!==b[r].line){switch(t.j){case 1:c+=y-t.lineWidths[b[r].line];break;case 2:c+=(y-t.lineWidths[b[r].line])/2}$=b[r].line}Z!==b[r].ind&&(b[Z]&&(c+=b[Z].extra),c+=b[r].an/2,Z=b[r].ind),c+=E[0]*b[r].an*.005;var ct=0;for(O=0;O<D;O+=1)(M=I[O].a).p.propType&&((k=I[O].s.getMult(b[r].anIndexes[O],T.a[O].s.totalChars)).length?ct+=M.p.v[0]*k[0]:ct+=M.p.v[0]*k),M.a.propType&&((k=I[O].s.getMult(b[r].anIndexes[O],T.a[O].s.totalChars)).length?ct+=M.a.v[0]*k[0]:ct+=M.a.v[0]*k);for(d=!0,this._pathData.a.v&&(c=.5*b[0].an+(y-this._pathData.f.v-.5*b[0].an-.5*b[b.length-1].an)*Z/(n-1),c+=this._pathData.f.v);d;)o+u>=c+ct||!v?(g=(c+ct-o)/l.partialLength,V=p.point[0]+(l.point[0]-p.point[0])*g,B=p.point[1]+(l.point[1]-p.point[1])*g,x.translate(-E[0]*b[r].an*.005,-E[1]*F*.01),d=!1):v&&(o+=l.partialLength,(h+=1)>=v.length&&(h=0,f[m+=1]?v=f[m].points:C.v.c?(h=0,v=f[m=0].points):(o-=l.partialLength,v=null)),v&&(p=l,u=(l=v[h]).partialLength));N=b[r].an/2-b[r].add,x.translate(-N,0,0)}else N=b[r].an/2-b[r].add,x.translate(-N,0,0),x.translate(-E[0]*b[r].an*.005,-E[1]*F*.01,0);for(O=0;O<D;O+=1)(M=I[O].a).t.propType&&(k=I[O].s.getMult(b[r].anIndexes[O],T.a[O].s.totalChars),0===i&&0===t.j||(this._hasMaskedPath?k.length?c+=M.t.v*k[0]:c+=M.t.v*k:k.length?i+=M.t.v*k[0]:i+=M.t.v*k));for(t.strokeWidthAnim&&(H=t.sw||0),t.strokeColorAnim&&(j=t.sc?[t.sc[0],t.sc[1],t.sc[2]]:[0,0,0]),t.fillColorAnim&&t.fc&&(G=[t.fc[0],t.fc[1],t.fc[2]]),O=0;O<D;O+=1)(M=I[O].a).a.propType&&((k=I[O].s.getMult(b[r].anIndexes[O],T.a[O].s.totalChars)).length?x.translate(-M.a.v[0]*k[0],-M.a.v[1]*k[1],M.a.v[2]*k[2]):x.translate(-M.a.v[0]*k,-M.a.v[1]*k,M.a.v[2]*k));for(O=0;O<D;O+=1)(M=I[O].a).s.propType&&((k=I[O].s.getMult(b[r].anIndexes[O],T.a[O].s.totalChars)).length?x.scale(1+(M.s.v[0]-1)*k[0],1+(M.s.v[1]-1)*k[1],1):x.scale(1+(M.s.v[0]-1)*k,1+(M.s.v[1]-1)*k,1));for(O=0;O<D;O+=1){if(M=I[O].a,k=I[O].s.getMult(b[r].anIndexes[O],T.a[O].s.totalChars),M.sk.propType&&(k.length?x.skewFromAxis(-M.sk.v*k[0],M.sa.v*k[1]):x.skewFromAxis(-M.sk.v*k,M.sa.v*k)),M.r.propType&&(k.length?x.rotateZ(-M.r.v*k[2]):x.rotateZ(-M.r.v*k)),M.ry.propType&&(k.length?x.rotateY(M.ry.v*k[1]):x.rotateY(M.ry.v*k)),M.rx.propType&&(k.length?x.rotateX(M.rx.v*k[0]):x.rotateX(M.rx.v*k)),M.o.propType&&(k.length?z+=(M.o.v*k[0]-z)*k[0]:z+=(M.o.v*k-z)*k),t.strokeWidthAnim&&M.sw.propType&&(k.length?H+=M.sw.v*k[0]:H+=M.sw.v*k),t.strokeColorAnim&&M.sc.propType)for(U=0;U<3;U+=1)k.length?j[U]+=(M.sc.v[U]-j[U])*k[0]:j[U]+=(M.sc.v[U]-j[U])*k;if(t.fillColorAnim&&t.fc){if(M.fc.propType)for(U=0;U<3;U+=1)k.length?G[U]+=(M.fc.v[U]-G[U])*k[0]:G[U]+=(M.fc.v[U]-G[U])*k;M.fh.propType&&(G=k.length?addHueToRGB(G,M.fh.v*k[0]):addHueToRGB(G,M.fh.v*k)),M.fs.propType&&(G=k.length?addSaturationToRGB(G,M.fs.v*k[0]):addSaturationToRGB(G,M.fs.v*k)),M.fb.propType&&(G=k.length?addBrightnessToRGB(G,M.fb.v*k[0]):addBrightnessToRGB(G,M.fb.v*k))}}for(O=0;O<D;O+=1)(M=I[O].a).p.propType&&(k=I[O].s.getMult(b[r].anIndexes[O],T.a[O].s.totalChars),this._hasMaskedPath?k.length?x.translate(0,M.p.v[1]*k[0],-M.p.v[2]*k[1]):x.translate(0,M.p.v[1]*k,-M.p.v[2]*k):k.length?x.translate(M.p.v[0]*k[0],M.p.v[1]*k[1],-M.p.v[2]*k[2]):x.translate(M.p.v[0]*k,M.p.v[1]*k,-M.p.v[2]*k));if(t.strokeWidthAnim&&(W=H<0?0:H),t.strokeColorAnim&&(J="rgb("+Math.round(255*j[0])+","+Math.round(255*j[1])+","+Math.round(255*j[2])+")"),t.fillColorAnim&&t.fc&&(Y="rgb("+Math.round(255*G[0])+","+Math.round(255*G[1])+","+Math.round(255*G[2])+")"),this._hasMaskedPath){if(x.translate(0,-t.ls),x.translate(0,E[1]*F*.01+s,0),this._pathData.p.v){_=(l.point[1]-p.point[1])/(l.point[0]-p.point[0]);var lt=180*Math.atan(_)/Math.PI;l.point[0]<p.point[0]&&(lt+=180),x.rotate(-lt*Math.PI/180)}x.translate(V,B,0),c-=E[0]*b[r].an*.005,b[r+1]&&Z!==b[r+1].ind&&(c+=b[r].an/2,c+=.001*t.tr*t.finalSize)}else{switch(x.translate(i,s,0),t.ps&&x.translate(t.ps[0],t.ps[1]+t.ascent,0),t.j){case 1:x.translate(b[r].animatorJustifyOffset+t.justifyOffset+(t.boxWidth-t.lineWidths[b[r].line]),0,0);break;case 2:x.translate(b[r].animatorJustifyOffset+t.justifyOffset+(t.boxWidth-t.lineWidths[b[r].line])/2,0,0)}x.translate(0,-t.ls),x.translate(N,0,0),x.translate(E[0]*b[r].an*.005,E[1]*F*.01,0),i+=b[r].l+.001*t.tr*t.finalSize}"html"===S?tt=x.toCSS():"svg"===S?tt=x.to2dCSS():et=[x.props[0],x.props[1],x.props[2],x.props[3],x.props[4],x.props[5],x.props[6],x.props[7],x.props[8],x.props[9],x.props[10],x.props[11],x.props[12],x.props[13],x.props[14],x.props[15]],X=z}P<=r?(L=new LetterProps(X,W,J,Y,tt,et),this.renderedLetters.push(L),P+=1,this.lettersChangedFlag=!0):(L=this.renderedLetters[r],this.lettersChangedFlag=L.update(X,W,J,Y,tt,et)||this.lettersChangedFlag)}}},TextAnimatorProperty.prototype.getValue=function(){this._elem.globalData.frameId!==this._frameId&&(this._frameId=this._elem.globalData.frameId,this.iterateDynamicProperties())},TextAnimatorProperty.prototype.mHelper=new Matrix,TextAnimatorProperty.prototype.defaultPropsArray=[],extendPrototype([DynamicPropertyContainer],TextAnimatorProperty),ITextElement.prototype.initElement=function(t,e,i){this.lettersChangedFlag=!0,this.initFrame(),this.initBaseData(t,e,i),this.textProperty=new TextProperty(this,t.t,this.dynamicProperties),this.textAnimator=new TextAnimatorProperty(t.t,this.renderType,this),this.initTransform(t,e,i),this.initHierarchy(),this.initRenderable(),this.initRendererElement(),this.createContainerElements(),this.createRenderableComponents(),this.createContent(),this.hide(),this.textAnimator.searchProperties(this.dynamicProperties)},ITextElement.prototype.prepareFrame=function(t){this._mdf=!1,this.prepareRenderableFrame(t),this.prepareProperties(t,this.isInRange)},ITextElement.prototype.createPathShape=function(t,e){var i,s,r=e.length,n="";for(i=0;i<r;i+=1)"sh"===e[i].ty&&(s=e[i].ks.k,n+=buildShapeString(s,s.i.length,!0,t));return n},ITextElement.prototype.updateDocumentData=function(t,e){this.textProperty.updateDocumentData(t,e)},ITextElement.prototype.canResizeFont=function(t){this.textProperty.canResizeFont(t)},ITextElement.prototype.setMinimumFontSize=function(t){this.textProperty.setMinimumFontSize(t)},ITextElement.prototype.applyTextPropertiesToMatrix=function(t,e,i,s,r){switch(t.ps&&e.translate(t.ps[0],t.ps[1]+t.ascent,0),e.translate(0,-t.ls,0),t.j){case 1:e.translate(t.justifyOffset+(t.boxWidth-t.lineWidths[i]),0,0);break;case 2:e.translate(t.justifyOffset+(t.boxWidth-t.lineWidths[i])/2,0,0)}e.translate(s,r,0)},ITextElement.prototype.buildColor=function(t){return"rgb("+Math.round(255*t[0])+","+Math.round(255*t[1])+","+Math.round(255*t[2])+")"},ITextElement.prototype.emptyProp=new LetterProps,ITextElement.prototype.destroy=function(){},ITextElement.prototype.validateText=function(){(this.textProperty._mdf||this.textProperty._isFirstFrame)&&(this.buildNewText(),this.textProperty._isFirstFrame=!1,this.textProperty._mdf=!1)};var emptyShapeData={shapes:[]};function SVGTextLottieElement(t,e,i){this.textSpans=[],this.renderType="svg",this.initElement(t,e,i)}function ISolidElement(t,e,i){this.initElement(t,e,i)}function NullElement(t,e,i){this.initFrame(),this.initBaseData(t,e,i),this.initFrame(),this.initTransform(t,e,i),this.initHierarchy()}function SVGRendererBase(){}function ICompElement(){}function SVGCompElement(t,e,i){this.layers=t.layers,this.supports3d=!0,this.completeLayers=!1,this.pendingElements=[],this.elements=this.layers?createSizedArray(this.layers.length):[],this.initElement(t,e,i),this.tm=t.tm?PropertyFactory.getProp(this,t.tm,0,e.frameRate,this):{_placeholder:!0}}function SVGRenderer(t,e){this.animationItem=t,this.layers=null,this.renderedFrame=-1,this.svgElement=createNS("svg");var i="";if(e&&e.title){var s=createNS("title"),r=createElementID();s.setAttribute("id",r),s.textContent=e.title,this.svgElement.appendChild(s),i+=r}if(e&&e.description){var n=createNS("desc"),a=createElementID();n.setAttribute("id",a),n.textContent=e.description,this.svgElement.appendChild(n),i+=" "+a}i&&this.svgElement.setAttribute("aria-labelledby",i);var c=createNS("defs");this.svgElement.appendChild(c);var l=createNS("g");this.svgElement.appendChild(l),this.layerElement=l,this.renderConfig={preserveAspectRatio:e&&e.preserveAspectRatio||"xMidYMid meet",imagePreserveAspectRatio:e&&e.imagePreserveAspectRatio||"xMidYMid slice",contentVisibility:e&&e.contentVisibility||"visible",progressiveLoad:e&&e.progressiveLoad||!1,hideOnTransparent:!(e&&!1===e.hideOnTransparent),viewBoxOnly:e&&e.viewBoxOnly||!1,viewBoxSize:e&&e.viewBoxSize||!1,className:e&&e.className||"",id:e&&e.id||"",focusable:e&&e.focusable,filterSize:{width:e&&e.filterSize&&e.filterSize.width||"100%",height:e&&e.filterSize&&e.filterSize.height||"100%",x:e&&e.filterSize&&e.filterSize.x||"0%",y:e&&e.filterSize&&e.filterSize.y||"0%"},width:e&&e.width,height:e&&e.height,runExpressions:!e||void 0===e.runExpressions||e.runExpressions},this.globalData={_mdf:!1,frameNum:-1,defs:c,renderConfig:this.renderConfig},this.elements=[],this.pendingElements=[],this.destroyed=!1,this.rendererType="svg"}function ShapeTransformManager(){this.sequences={},this.sequenceList=[],this.transform_key_count=0}extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement],SVGTextLottieElement),SVGTextLottieElement.prototype.createContent=function(){this.data.singleShape&&!this.globalData.fontManager.chars&&(this.textContainer=createNS("text"))},SVGTextLottieElement.prototype.buildTextContents=function(t){for(var e=0,i=t.length,s=[],r="";e<i;)t[e]===String.fromCharCode(13)||t[e]===String.fromCharCode(3)?(s.push(r),r=""):r+=t[e],e+=1;return s.push(r),s},SVGTextLottieElement.prototype.buildShapeData=function(t,e){if(t.shapes&&t.shapes.length){var i=t.shapes[0];if(i.it){var s=i.it[i.it.length-1];s.s&&(s.s.k[0]=e,s.s.k[1]=e)}}return t},SVGTextLottieElement.prototype.buildNewText=function(){var t,e;this.addDynamicProperty(this);var i=this.textProperty.currentData;this.renderedLetters=createSizedArray(i?i.l.length:0),i.fc?this.layerElement.setAttribute("fill",this.buildColor(i.fc)):this.layerElement.setAttribute("fill","rgba(0,0,0,0)"),i.sc&&(this.layerElement.setAttribute("stroke",this.buildColor(i.sc)),this.layerElement.setAttribute("stroke-width",i.sw)),this.layerElement.setAttribute("font-size",i.finalSize);var s=this.globalData.fontManager.getFontByName(i.f);if(s.fClass)this.layerElement.setAttribute("class",s.fClass);else{this.layerElement.setAttribute("font-family",s.fFamily);var r=i.fWeight,n=i.fStyle;this.layerElement.setAttribute("font-style",n),this.layerElement.setAttribute("font-weight",r)}this.layerElement.setAttribute("aria-label",i.t);var a,c=i.l||[],l=!!this.globalData.fontManager.chars;e=c.length;var o=this.mHelper,d=this.data.singleShape,h=0,m=0,p=!0,v=.001*i.tr*i.finalSize;if(!d||l||i.sz){var f,u=this.textSpans.length;for(t=0;t<e;t+=1){if(this.textSpans[t]||(this.textSpans[t]={span:null,childSpan:null,glyph:null}),!l||!d||0===t){if(a=u>t?this.textSpans[t].span:createNS(l?"g":"text"),u<=t){if(a.setAttribute("stroke-linecap","butt"),a.setAttribute("stroke-linejoin","round"),a.setAttribute("stroke-miterlimit","4"),this.textSpans[t].span=a,l){var y=createNS("g");a.appendChild(y),this.textSpans[t].childSpan=y}this.textSpans[t].span=a,this.layerElement.appendChild(a)}a.style.display="inherit"}if(o.reset(),d&&(c[t].n&&(h=-v,m+=i.yOffset,m+=p?1:0,p=!1),this.applyTextPropertiesToMatrix(i,o,c[t].line,h,m),h+=c[t].l||0,h+=v),l){var g;if(1===(f=this.globalData.fontManager.getCharData(i.finalText[t],s.fStyle,this.globalData.fontManager.getFontByName(i.f).fFamily)).t)g=new SVGCompElement(f.data,this.globalData,this);else{var _=emptyShapeData;f.data&&f.data.shapes&&(_=this.buildShapeData(f.data,i.finalSize)),g=new SVGShapeElement(_,this.globalData,this)}if(this.textSpans[t].glyph){var C=this.textSpans[t].glyph;this.textSpans[t].childSpan.removeChild(C.layerElement),C.destroy()}this.textSpans[t].glyph=g,g._debug=!0,g.prepareFrame(0),g.renderFrame(),this.textSpans[t].childSpan.appendChild(g.layerElement),1===f.t&&this.textSpans[t].childSpan.setAttribute("transform","scale("+i.finalSize/100+","+i.finalSize/100+")")}else d&&a.setAttribute("transform","translate("+o.props[12]+","+o.props[13]+")"),a.textContent=c[t].val,a.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve")}d&&a&&a.setAttribute("d","")}else{var E=this.textContainer,I="start";switch(i.j){case 1:I="end";break;case 2:I="middle";break;default:I="start"}E.setAttribute("text-anchor",I),E.setAttribute("letter-spacing",v);var T=this.buildTextContents(i.finalText);for(e=T.length,m=i.ps?i.ps[1]+i.ascent:0,t=0;t<e;t+=1)(a=this.textSpans[t].span||createNS("tspan")).textContent=T[t],a.setAttribute("x",0),a.setAttribute("y",m),a.style.display="inherit",E.appendChild(a),this.textSpans[t]||(this.textSpans[t]={span:null,glyph:null}),this.textSpans[t].span=a,m+=i.finalLineHeight;this.layerElement.appendChild(E)}for(;t<this.textSpans.length;)this.textSpans[t].span.style.display="none",t+=1;this._sizeChanged=!0},SVGTextLottieElement.prototype.sourceRectAtTime=function(){if(this.prepareFrame(this.comp.renderedFrame-this.data.st),this.renderInnerContent(),this._sizeChanged){this._sizeChanged=!1;var t=this.layerElement.getBBox();this.bbox={top:t.y,left:t.x,width:t.width,height:t.height}}return this.bbox},SVGTextLottieElement.prototype.getValue=function(){var t,e,i=this.textSpans.length;for(this.renderedFrame=this.comp.renderedFrame,t=0;t<i;t+=1)(e=this.textSpans[t].glyph)&&(e.prepareFrame(this.comp.renderedFrame-this.data.st),e._mdf&&(this._mdf=!0))},SVGTextLottieElement.prototype.renderInnerContent=function(){if(this.validateText(),(!this.data.singleShape||this._mdf)&&(this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag),this.lettersChangedFlag||this.textAnimator.lettersChangedFlag)){var t,e;this._sizeChanged=!0;var i,s,r,n=this.textAnimator.renderedLetters,a=this.textProperty.currentData.l;for(e=a.length,t=0;t<e;t+=1)a[t].n||(i=n[t],s=this.textSpans[t].span,(r=this.textSpans[t].glyph)&&r.renderFrame(),i._mdf.m&&s.setAttribute("transform",i.m),i._mdf.o&&s.setAttribute("opacity",i.o),i._mdf.sw&&s.setAttribute("stroke-width",i.sw),i._mdf.sc&&s.setAttribute("stroke",i.sc),i._mdf.fc&&s.setAttribute("fill",i.fc))}},extendPrototype([IImageElement],ISolidElement),ISolidElement.prototype.createContent=function(){var t=createNS("rect");t.setAttribute("width",this.data.sw),t.setAttribute("height",this.data.sh),t.setAttribute("fill",this.data.sc),this.layerElement.appendChild(t)},NullElement.prototype.prepareFrame=function(t){this.prepareProperties(t,!0)},NullElement.prototype.renderFrame=function(){},NullElement.prototype.getBaseElement=function(){return null},NullElement.prototype.destroy=function(){},NullElement.prototype.sourceRectAtTime=function(){},NullElement.prototype.hide=function(){},extendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement],NullElement),extendPrototype([BaseRenderer],SVGRendererBase),SVGRendererBase.prototype.createNull=function(t){return new NullElement(t,this.globalData,this)},SVGRendererBase.prototype.createShape=function(t){return new SVGShapeElement(t,this.globalData,this)},SVGRendererBase.prototype.createText=function(t){return new SVGTextLottieElement(t,this.globalData,this)},SVGRendererBase.prototype.createImage=function(t){return new IImageElement(t,this.globalData,this)},SVGRendererBase.prototype.createSolid=function(t){return new ISolidElement(t,this.globalData,this)},SVGRendererBase.prototype.configAnimation=function(t){this.svgElement.setAttribute("xmlns","http://www.w3.org/2000/svg"),this.svgElement.setAttribute("xmlns:xlink","http://www.w3.org/1999/xlink"),this.renderConfig.viewBoxSize?this.svgElement.setAttribute("viewBox",this.renderConfig.viewBoxSize):this.svgElement.setAttribute("viewBox","0 0 "+t.w+" "+t.h),this.renderConfig.viewBoxOnly||(this.svgElement.setAttribute("width",t.w),this.svgElement.setAttribute("height",t.h),this.svgElement.style.width="100%",this.svgElement.style.height="100%",this.svgElement.style.transform="translate3d(0,0,0)",this.svgElement.style.contentVisibility=this.renderConfig.contentVisibility),this.renderConfig.width&&this.svgElement.setAttribute("width",this.renderConfig.width),this.renderConfig.height&&this.svgElement.setAttribute("height",this.renderConfig.height),this.renderConfig.className&&this.svgElement.setAttribute("class",this.renderConfig.className),this.renderConfig.id&&this.svgElement.setAttribute("id",this.renderConfig.id),void 0!==this.renderConfig.focusable&&this.svgElement.setAttribute("focusable",this.renderConfig.focusable),this.svgElement.setAttribute("preserveAspectRatio",this.renderConfig.preserveAspectRatio),this.animationItem.wrapper.appendChild(this.svgElement);var e=this.globalData.defs;this.setupGlobalData(t,e),this.globalData.progressiveLoad=this.renderConfig.progressiveLoad,this.data=t;var i=createNS("clipPath"),s=createNS("rect");s.setAttribute("width",t.w),s.setAttribute("height",t.h),s.setAttribute("x",0),s.setAttribute("y",0);var r=createElementID();i.setAttribute("id",r),i.appendChild(s),this.layerElement.setAttribute("clip-path","url("+getLocationHref()+"#"+r+")"),e.appendChild(i),this.layers=t.layers,this.elements=createSizedArray(t.layers.length)},SVGRendererBase.prototype.destroy=function(){var t;this.animationItem.wrapper&&(this.animationItem.wrapper.innerText=""),this.layerElement=null,this.globalData.defs=null;var e=this.layers?this.layers.length:0;for(t=0;t<e;t+=1)this.elements[t]&&this.elements[t].destroy&&this.elements[t].destroy();this.elements.length=0,this.destroyed=!0,this.animationItem=null},SVGRendererBase.prototype.updateContainerSize=function(){},SVGRendererBase.prototype.findIndexByInd=function(t){var e=0,i=this.layers.length;for(e=0;e<i;e+=1)if(this.layers[e].ind===t)return e;return-1},SVGRendererBase.prototype.buildItem=function(t){var e=this.elements;if(!e[t]&&99!==this.layers[t].ty){e[t]=!0;var i=this.createItem(this.layers[t]);if(e[t]=i,getExpressionsPlugin()&&(0===this.layers[t].ty&&this.globalData.projectInterface.registerComposition(i),i.initExpressions()),this.appendElementInPos(i,t),this.layers[t].tt){var s="tp"in this.layers[t]?this.findIndexByInd(this.layers[t].tp):t-1;if(-1===s)return;if(this.elements[s]&&!0!==this.elements[s]){var r=e[s].getMatte(this.layers[t].tt);i.setMatte(r)}else this.buildItem(s),this.addPendingElement(i)}}},SVGRendererBase.prototype.checkPendingElements=function(){for(;this.pendingElements.length;){var t=this.pendingElements.pop();if(t.checkParenting(),t.data.tt)for(var e=0,i=this.elements.length;e<i;){if(this.elements[e]===t){var s="tp"in t.data?this.findIndexByInd(t.data.tp):e-1,r=this.elements[s].getMatte(this.layers[e].tt);t.setMatte(r);break}e+=1}}},SVGRendererBase.prototype.renderFrame=function(t){if(this.renderedFrame!==t&&!this.destroyed){var e;null===t?t=this.renderedFrame:this.renderedFrame=t,this.globalData.frameNum=t,this.globalData.frameId+=1,this.globalData.projectInterface.currentFrame=t,this.globalData._mdf=!1;var i=this.layers.length;for(this.completeLayers||this.checkLayers(t),e=i-1;e>=0;e-=1)(this.completeLayers||this.elements[e])&&this.elements[e].prepareFrame(t-this.layers[e].st);if(this.globalData._mdf)for(e=0;e<i;e+=1)(this.completeLayers||this.elements[e])&&this.elements[e].renderFrame()}},SVGRendererBase.prototype.appendElementInPos=function(t,e){var i=t.getBaseElement();if(i){for(var s,r=0;r<e;)this.elements[r]&&!0!==this.elements[r]&&this.elements[r].getBaseElement()&&(s=this.elements[r].getBaseElement()),r+=1;s?this.layerElement.insertBefore(i,s):this.layerElement.appendChild(i)}},SVGRendererBase.prototype.hide=function(){this.layerElement.style.display="none"},SVGRendererBase.prototype.show=function(){this.layerElement.style.display="block"},extendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement,RenderableDOMElement],ICompElement),ICompElement.prototype.initElement=function(t,e,i){this.initFrame(),this.initBaseData(t,e,i),this.initTransform(t,e,i),this.initRenderable(),this.initHierarchy(),this.initRendererElement(),this.createContainerElements(),this.createRenderableComponents(),!this.data.xt&&e.progressiveLoad||this.buildAllItems(),this.hide()},ICompElement.prototype.prepareFrame=function(t){if(this._mdf=!1,this.prepareRenderableFrame(t),this.prepareProperties(t,this.isInRange),this.isInRange||this.data.xt){if(this.tm._placeholder)this.renderedFrame=t/this.data.sr;else{var e=this.tm.v;e===this.data.op&&(e=this.data.op-1),this.renderedFrame=e}var i,s=this.elements.length;for(this.completeLayers||this.checkLayers(this.renderedFrame),i=s-1;i>=0;i-=1)(this.completeLayers||this.elements[i])&&(this.elements[i].prepareFrame(this.renderedFrame-this.layers[i].st),this.elements[i]._mdf&&(this._mdf=!0))}},ICompElement.prototype.renderInnerContent=function(){var t,e=this.layers.length;for(t=0;t<e;t+=1)(this.completeLayers||this.elements[t])&&this.elements[t].renderFrame()},ICompElement.prototype.setElements=function(t){this.elements=t},ICompElement.prototype.getElements=function(){return this.elements},ICompElement.prototype.destroyElements=function(){var t,e=this.layers.length;for(t=0;t<e;t+=1)this.elements[t]&&this.elements[t].destroy()},ICompElement.prototype.destroy=function(){this.destroyElements(),this.destroyBaseElement()},extendPrototype([SVGRendererBase,ICompElement,SVGBaseElement],SVGCompElement),SVGCompElement.prototype.createComp=function(t){return new SVGCompElement(t,this.globalData,this)},extendPrototype([SVGRendererBase],SVGRenderer),SVGRenderer.prototype.createComp=function(t){return new SVGCompElement(t,this.globalData,this)},ShapeTransformManager.prototype={addTransformSequence:function(t){var e,i=t.length,s="_";for(e=0;e<i;e+=1)s+=t[e].transform.key+"_";var r=this.sequences[s];return r||(r={transforms:[].concat(t),finalTransform:new Matrix,_mdf:!1},this.sequences[s]=r,this.sequenceList.push(r)),r},processSequence:function(t,e){for(var i=0,s=t.transforms.length,r=e;i<s&&!e;){if(t.transforms[i].transform.mProps._mdf){r=!0;break}i+=1}if(r)for(t.finalTransform.reset(),i=s-1;i>=0;i-=1)t.finalTransform.multiply(t.transforms[i].transform.mProps.v);t._mdf=r},processSequences:function(t){var e,i=this.sequenceList.length;for(e=0;e<i;e+=1)this.processSequence(this.sequenceList[e],t)},getNewKey:function(){return this.transform_key_count+=1,"_"+this.transform_key_count}};var lumaLoader=function(){var t="__lottie_element_luma_buffer",e=null,i=null,s=null;function r(){var r,n,a;e||(r=createNS("svg"),n=createNS("filter"),a=createNS("feColorMatrix"),n.setAttribute("id",t),a.setAttribute("type","matrix"),a.setAttribute("color-interpolation-filters","sRGB"),a.setAttribute("values","0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0"),n.appendChild(a),r.appendChild(n),r.setAttribute("id",t+"_svg"),featureSupport.svgLumaHidden&&(r.style.display="none"),s=r,document.body.appendChild(s),e=createTag("canvas"),(i=e.getContext("2d")).filter="url(#"+t+")",i.fillStyle="rgba(0,0,0,0)",i.fillRect(0,0,1,1))}return{load:r,get:function(s){return e||r(),e.width=s.width,e.height=s.height,i.filter="url(#"+t+")",e}}};function createCanvas(t,e){if(featureSupport.offscreenCanvas)return new OffscreenCanvas(t,e);var i=createTag("canvas");return i.width=t,i.height=e,i}const assetLoader={loadLumaCanvas:lumaLoader.load,getLumaCanvas:lumaLoader.get,createCanvas:createCanvas};var registeredEffects={};function CVEffects(t){var e,i,s=t.data.ef?t.data.ef.length:0;for(this.filters=[],e=0;e<s;e+=1){i=null;var r=t.data.ef[e].ty;if(registeredEffects[r])i=new(0,registeredEffects[r].effect)(t.effectsManager.effectElements[e],t);i&&this.filters.push(i)}this.filters.length&&t.addRenderableComponent(this)}function registerEffect(t,e){registeredEffects[t]={effect:e}}function CVMaskElement(t,e){var i;this.data=t,this.element=e,this.masksProperties=this.data.masksProperties||[],this.viewData=createSizedArray(this.masksProperties.length);var s=this.masksProperties.length,r=!1;for(i=0;i<s;i+=1)"n"!==this.masksProperties[i].mode&&(r=!0),this.viewData[i]=ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);this.hasMasks=r,r&&this.element.addRenderableComponent(this)}function CVBaseElement(){}CVEffects.prototype.renderFrame=function(t){var e,i=this.filters.length;for(e=0;e<i;e+=1)this.filters[e].renderFrame(t)},CVEffects.prototype.getEffects=function(t){var e,i=this.filters.length,s=[];for(e=0;e<i;e+=1)this.filters[e].type===t&&s.push(this.filters[e]);return s},CVMaskElement.prototype.renderFrame=function(){if(this.hasMasks){var t,e,i,s,r=this.element.finalTransform.mat,n=this.element.canvasContext,a=this.masksProperties.length;for(n.beginPath(),t=0;t<a;t+=1)if("n"!==this.masksProperties[t].mode){var c;this.masksProperties[t].inv&&(n.moveTo(0,0),n.lineTo(this.element.globalData.compSize.w,0),n.lineTo(this.element.globalData.compSize.w,this.element.globalData.compSize.h),n.lineTo(0,this.element.globalData.compSize.h),n.lineTo(0,0)),s=this.viewData[t].v,e=r.applyToPointArray(s.v[0][0],s.v[0][1],0),n.moveTo(e[0],e[1]);var l=s._length;for(c=1;c<l;c+=1)i=r.applyToTriplePoints(s.o[c-1],s.i[c],s.v[c]),n.bezierCurveTo(i[0],i[1],i[2],i[3],i[4],i[5]);i=r.applyToTriplePoints(s.o[c-1],s.i[0],s.v[0]),n.bezierCurveTo(i[0],i[1],i[2],i[3],i[4],i[5])}this.element.globalData.renderer.save(!0),n.clip()}},CVMaskElement.prototype.getMaskProperty=MaskElement.prototype.getMaskProperty,CVMaskElement.prototype.destroy=function(){this.element=null};var operationsMap={1:"source-in",2:"source-out",3:"source-in",4:"source-out"};function CVShapeData(t,e,i,s){this.styledShapes=[],this.tr=[0,0,0,0,0,0];var r,n=4;"rc"===e.ty?n=5:"el"===e.ty?n=6:"sr"===e.ty&&(n=7),this.sh=ShapePropertyFactory.getShapeProp(t,e,n,t);var a,c=i.length;for(r=0;r<c;r+=1)i[r].closed||(a={transforms:s.addTransformSequence(i[r].transforms),trNodes:[]},this.styledShapes.push(a),i[r].elements.push(a))}function CVShapeElement(t,e,i){this.shapes=[],this.shapesData=t.shapes,this.stylesList=[],this.itemsData=[],this.prevViewData=[],this.shapeModifiers=[],this.processedElements=[],this.transformsManager=new ShapeTransformManager,this.initElement(t,e,i)}function CVTextElement(t,e,i){this.textSpans=[],this.yOffset=0,this.fillColorAnim=!1,this.strokeColorAnim=!1,this.strokeWidthAnim=!1,this.stroke=!1,this.fill=!1,this.justifyOffset=0,this.currentRender=null,this.renderType="canvas",this.values={fill:"rgba(0,0,0,0)",stroke:"rgba(0,0,0,0)",sWidth:0,fValue:""},this.initElement(t,e,i)}function CVImageElement(t,e,i){this.assetData=e.getAssetData(t.refId),this.img=e.imageLoader.getAsset(this.assetData),this.initElement(t,e,i)}function CVSolidElement(t,e,i){this.initElement(t,e,i)}function CanvasRendererBase(){}function CanvasContext(){this.opacity=-1,this.transform=createTypedArray("float32",16),this.fillStyle="",this.strokeStyle="",this.lineWidth="",this.lineCap="",this.lineJoin="",this.miterLimit="",this.id=Math.random()}function CVContextData(){var t;this.stack=[],this.cArrPos=0,this.cTr=new Matrix;for(t=0;t<15;t+=1){var e=new CanvasContext;this.stack[t]=e}this._length=15,this.nativeContext=null,this.transformMat=new Matrix,this.currentOpacity=1,this.currentFillStyle="",this.appliedFillStyle="",this.currentStrokeStyle="",this.appliedStrokeStyle="",this.currentLineWidth="",this.appliedLineWidth="",this.currentLineCap="",this.appliedLineCap="",this.currentLineJoin="",this.appliedLineJoin="",this.appliedMiterLimit="",this.currentMiterLimit=""}function CVCompElement(t,e,i){this.completeLayers=!1,this.layers=t.layers,this.pendingElements=[],this.elements=createSizedArray(this.layers.length),this.initElement(t,e,i),this.tm=t.tm?PropertyFactory.getProp(this,t.tm,0,e.frameRate,this):{_placeholder:!0}}function CanvasRenderer(t,e){this.animationItem=t,this.renderConfig={clearCanvas:!e||void 0===e.clearCanvas||e.clearCanvas,context:e&&e.context||null,progressiveLoad:e&&e.progressiveLoad||!1,preserveAspectRatio:e&&e.preserveAspectRatio||"xMidYMid meet",imagePreserveAspectRatio:e&&e.imagePreserveAspectRatio||"xMidYMid slice",contentVisibility:e&&e.contentVisibility||"visible",className:e&&e.className||"",id:e&&e.id||"",runExpressions:!e||void 0===e.runExpressions||e.runExpressions},this.renderConfig.dpr=e&&e.dpr||1,this.animationItem.wrapper&&(this.renderConfig.dpr=e&&e.dpr||window.devicePixelRatio||1),this.renderedFrame=-1,this.globalData={frameNum:-1,_mdf:!1,renderConfig:this.renderConfig,currentGlobalAlpha:-1},this.contextData=new CVContextData,this.elements=[],this.pendingElements=[],this.transformMat=new Matrix,this.completeLayers=!1,this.rendererType="canvas",this.renderConfig.clearCanvas&&(this.ctxTransform=this.contextData.transform.bind(this.contextData),this.ctxOpacity=this.contextData.opacity.bind(this.contextData),this.ctxFillStyle=this.contextData.fillStyle.bind(this.contextData),this.ctxStrokeStyle=this.contextData.strokeStyle.bind(this.contextData),this.ctxLineWidth=this.contextData.lineWidth.bind(this.contextData),this.ctxLineCap=this.contextData.lineCap.bind(this.contextData),this.ctxLineJoin=this.contextData.lineJoin.bind(this.contextData),this.ctxMiterLimit=this.contextData.miterLimit.bind(this.contextData),this.ctxFill=this.contextData.fill.bind(this.contextData),this.ctxFillRect=this.contextData.fillRect.bind(this.contextData),this.ctxStroke=this.contextData.stroke.bind(this.contextData),this.save=this.contextData.save.bind(this.contextData))}CVBaseElement.prototype={createElements:function(){},initRendererElement:function(){},createContainerElements:function(){if(this.data.tt>=1){this.buffers=[];var t=this.globalData.canvasContext,e=assetLoader.createCanvas(t.canvas.width,t.canvas.height);this.buffers.push(e);var i=assetLoader.createCanvas(t.canvas.width,t.canvas.height);this.buffers.push(i),this.data.tt>=3&&!document._isProxy&&assetLoader.loadLumaCanvas()}this.canvasContext=this.globalData.canvasContext,this.transformCanvas=this.globalData.transformCanvas,this.renderableEffectsManager=new CVEffects(this),this.searchEffectTransforms()},createContent:function(){},setBlendMode:function(){var t=this.globalData;if(t.blendMode!==this.data.bm){t.blendMode=this.data.bm;var e=getBlendMode(this.data.bm);t.canvasContext.globalCompositeOperation=e}},createRenderableComponents:function(){this.maskManager=new CVMaskElement(this.data,this),this.transformEffects=this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT)},hideElement:function(){this.hidden||this.isInRange&&!this.isTransparent||(this.hidden=!0)},showElement:function(){this.isInRange&&!this.isTransparent&&(this.hidden=!1,this._isFirstFrame=!0,this.maskManager._isFirstFrame=!0)},clearCanvas:function(t){t.clearRect(this.transformCanvas.tx,this.transformCanvas.ty,this.transformCanvas.w*this.transformCanvas.sx,this.transformCanvas.h*this.transformCanvas.sy)},prepareLayer:function(){if(this.data.tt>=1){var t=this.buffers[0].getContext("2d");this.clearCanvas(t),t.drawImage(this.canvasContext.canvas,0,0),this.currentTransform=this.canvasContext.getTransform(),this.canvasContext.setTransform(1,0,0,1,0,0),this.clearCanvas(this.canvasContext),this.canvasContext.setTransform(this.currentTransform)}},exitLayer:function(){if(this.data.tt>=1){var t=this.buffers[1],e=t.getContext("2d");this.clearCanvas(e),e.drawImage(this.canvasContext.canvas,0,0),this.canvasContext.setTransform(1,0,0,1,0,0),this.clearCanvas(this.canvasContext),this.canvasContext.setTransform(this.currentTransform);if(this.comp.getElementById("tp"in this.data?this.data.tp:this.data.ind-1).renderFrame(!0),this.canvasContext.setTransform(1,0,0,1,0,0),this.data.tt>=3&&!document._isProxy){var i=assetLoader.getLumaCanvas(this.canvasContext.canvas);i.getContext("2d").drawImage(this.canvasContext.canvas,0,0),this.clearCanvas(this.canvasContext),this.canvasContext.drawImage(i,0,0)}this.canvasContext.globalCompositeOperation=operationsMap[this.data.tt],this.canvasContext.drawImage(t,0,0),this.canvasContext.globalCompositeOperation="destination-over",this.canvasContext.drawImage(this.buffers[0],0,0),this.canvasContext.setTransform(this.currentTransform),this.canvasContext.globalCompositeOperation="source-over"}},renderFrame:function(t){if(!this.hidden&&!this.data.hd&&(1!==this.data.td||t)){this.renderTransform(),this.renderRenderable(),this.renderLocalTransform(),this.setBlendMode();var e=0===this.data.ty;this.prepareLayer(),this.globalData.renderer.save(e),this.globalData.renderer.ctxTransform(this.finalTransform.localMat.props),this.globalData.renderer.ctxOpacity(this.finalTransform.localOpacity),this.renderInnerContent(),this.globalData.renderer.restore(e),this.exitLayer(),this.maskManager.hasMasks&&this.globalData.renderer.restore(!0),this._isFirstFrame&&(this._isFirstFrame=!1)}},destroy:function(){this.canvasContext=null,this.data=null,this.globalData=null,this.maskManager.destroy()},mHelper:new Matrix},CVBaseElement.prototype.hide=CVBaseElement.prototype.hideElement,CVBaseElement.prototype.show=CVBaseElement.prototype.showElement,CVShapeData.prototype.setAsAnimated=SVGShapeData.prototype.setAsAnimated,extendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement],CVShapeElement),CVShapeElement.prototype.initElement=RenderableDOMElement.prototype.initElement,CVShapeElement.prototype.transformHelper={opacity:1,_opMdf:!1},CVShapeElement.prototype.dashResetter=[],CVShapeElement.prototype.createContent=function(){this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,!0,[])},CVShapeElement.prototype.createStyleElement=function(t,e){var i={data:t,type:t.ty,preTransforms:this.transformsManager.addTransformSequence(e),transforms:[],elements:[],closed:!0===t.hd},s={};if("fl"===t.ty||"st"===t.ty?(s.c=PropertyFactory.getProp(this,t.c,1,255,this),s.c.k||(i.co="rgb("+bmFloor(s.c.v[0])+","+bmFloor(s.c.v[1])+","+bmFloor(s.c.v[2])+")")):"gf"!==t.ty&&"gs"!==t.ty||(s.s=PropertyFactory.getProp(this,t.s,1,null,this),s.e=PropertyFactory.getProp(this,t.e,1,null,this),s.h=PropertyFactory.getProp(this,t.h||{k:0},0,.01,this),s.a=PropertyFactory.getProp(this,t.a||{k:0},0,degToRads,this),s.g=new GradientProperty(this,t.g,this)),s.o=PropertyFactory.getProp(this,t.o,0,.01,this),"st"===t.ty||"gs"===t.ty){if(i.lc=lineCapEnum[t.lc||2],i.lj=lineJoinEnum[t.lj||2],1==t.lj&&(i.ml=t.ml),s.w=PropertyFactory.getProp(this,t.w,0,null,this),s.w.k||(i.wi=s.w.v),t.d){var r=new DashProperty(this,t.d,"canvas",this);s.d=r,s.d.k||(i.da=s.d.dashArray,i.do=s.d.dashoffset[0])}}else i.r=2===t.r?"evenodd":"nonzero";return this.stylesList.push(i),s.style=i,s},CVShapeElement.prototype.createGroupElement=function(){return{it:[],prevViewData:[]}},CVShapeElement.prototype.createTransformElement=function(t){return{transform:{opacity:1,_opMdf:!1,key:this.transformsManager.getNewKey(),op:PropertyFactory.getProp(this,t.o,0,.01,this),mProps:TransformPropertyFactory.getTransformProperty(this,t,this)}}},CVShapeElement.prototype.createShapeElement=function(t){var e=new CVShapeData(this,t,this.stylesList,this.transformsManager);return this.shapes.push(e),this.addShapeToModifiers(e),e},CVShapeElement.prototype.reloadShapes=function(){var t;this._isFirstFrame=!0;var e=this.itemsData.length;for(t=0;t<e;t+=1)this.prevViewData[t]=this.itemsData[t];for(this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,!0,[]),e=this.dynamicProperties.length,t=0;t<e;t+=1)this.dynamicProperties[t].getValue();this.renderModifiers(),this.transformsManager.processSequences(this._isFirstFrame)},CVShapeElement.prototype.addTransformToStyleList=function(t){var e,i=this.stylesList.length;for(e=0;e<i;e+=1)this.stylesList[e].closed||this.stylesList[e].transforms.push(t)},CVShapeElement.prototype.removeTransformFromStyleList=function(){var t,e=this.stylesList.length;for(t=0;t<e;t+=1)this.stylesList[t].closed||this.stylesList[t].transforms.pop()},CVShapeElement.prototype.closeStyles=function(t){var e,i=t.length;for(e=0;e<i;e+=1)t[e].closed=!0},CVShapeElement.prototype.searchShapes=function(t,e,i,s,r){var n,a,c,l,o,d,h=t.length-1,m=[],p=[],v=[].concat(r);for(n=h;n>=0;n-=1){if((l=this.searchProcessedElement(t[n]))?e[n]=i[l-1]:t[n]._shouldRender=s,"fl"===t[n].ty||"st"===t[n].ty||"gf"===t[n].ty||"gs"===t[n].ty)l?e[n].style.closed=!1:e[n]=this.createStyleElement(t[n],v),m.push(e[n].style);else if("gr"===t[n].ty){if(l)for(c=e[n].it.length,a=0;a<c;a+=1)e[n].prevViewData[a]=e[n].it[a];else e[n]=this.createGroupElement(t[n]);this.searchShapes(t[n].it,e[n].it,e[n].prevViewData,s,v)}else"tr"===t[n].ty?(l||(d=this.createTransformElement(t[n]),e[n]=d),v.push(e[n]),this.addTransformToStyleList(e[n])):"sh"===t[n].ty||"rc"===t[n].ty||"el"===t[n].ty||"sr"===t[n].ty?l||(e[n]=this.createShapeElement(t[n])):"tm"===t[n].ty||"rd"===t[n].ty||"pb"===t[n].ty||"zz"===t[n].ty||"op"===t[n].ty?(l?(o=e[n]).closed=!1:((o=ShapeModifiers.getModifier(t[n].ty)).init(this,t[n]),e[n]=o,this.shapeModifiers.push(o)),p.push(o)):"rp"===t[n].ty&&(l?(o=e[n]).closed=!0:(o=ShapeModifiers.getModifier(t[n].ty),e[n]=o,o.init(this,t,n,e),this.shapeModifiers.push(o),s=!1),p.push(o));this.addProcessedElement(t[n],n+1)}for(this.removeTransformFromStyleList(),this.closeStyles(m),h=p.length,n=0;n<h;n+=1)p[n].closed=!0},CVShapeElement.prototype.renderInnerContent=function(){this.transformHelper.opacity=1,this.transformHelper._opMdf=!1,this.renderModifiers(),this.transformsManager.processSequences(this._isFirstFrame),this.renderShape(this.transformHelper,this.shapesData,this.itemsData,!0)},CVShapeElement.prototype.renderShapeTransform=function(t,e){(t._opMdf||e.op._mdf||this._isFirstFrame)&&(e.opacity=t.opacity,e.opacity*=e.op.v,e._opMdf=!0)},CVShapeElement.prototype.drawLayer=function(){var t,e,i,s,r,n,a,c,l,o=this.stylesList.length,d=this.globalData.renderer,h=this.globalData.canvasContext;for(t=0;t<o;t+=1)if(("st"!==(c=(l=this.stylesList[t]).type)&&"gs"!==c||0!==l.wi)&&l.data._shouldRender&&0!==l.coOp&&0!==this.globalData.currentGlobalAlpha){for(d.save(),n=l.elements,"st"===c||"gs"===c?(d.ctxStrokeStyle("st"===c?l.co:l.grd),d.ctxLineWidth(l.wi),d.ctxLineCap(l.lc),d.ctxLineJoin(l.lj),d.ctxMiterLimit(l.ml||0)):d.ctxFillStyle("fl"===c?l.co:l.grd),d.ctxOpacity(l.coOp),"st"!==c&&"gs"!==c&&h.beginPath(),d.ctxTransform(l.preTransforms.finalTransform.props),i=n.length,e=0;e<i;e+=1){for("st"!==c&&"gs"!==c||(h.beginPath(),l.da&&(h.setLineDash(l.da),h.lineDashOffset=l.do)),r=(a=n[e].trNodes).length,s=0;s<r;s+=1)"m"===a[s].t?h.moveTo(a[s].p[0],a[s].p[1]):"c"===a[s].t?h.bezierCurveTo(a[s].pts[0],a[s].pts[1],a[s].pts[2],a[s].pts[3],a[s].pts[4],a[s].pts[5]):h.closePath();"st"!==c&&"gs"!==c||(d.ctxStroke(),l.da&&h.setLineDash(this.dashResetter))}"st"!==c&&"gs"!==c&&this.globalData.renderer.ctxFill(l.r),d.restore()}},CVShapeElement.prototype.renderShape=function(t,e,i,s){var r,n;for(n=t,r=e.length-1;r>=0;r-=1)"tr"===e[r].ty?(n=i[r].transform,this.renderShapeTransform(t,n)):"sh"===e[r].ty||"el"===e[r].ty||"rc"===e[r].ty||"sr"===e[r].ty?this.renderPath(e[r],i[r]):"fl"===e[r].ty?this.renderFill(e[r],i[r],n):"st"===e[r].ty?this.renderStroke(e[r],i[r],n):"gf"===e[r].ty||"gs"===e[r].ty?this.renderGradientFill(e[r],i[r],n):"gr"===e[r].ty?this.renderShape(n,e[r].it,i[r].it):e[r].ty;s&&this.drawLayer()},CVShapeElement.prototype.renderStyledShape=function(t,e){if(this._isFirstFrame||e._mdf||t.transforms._mdf){var i,s,r,n=t.trNodes,a=e.paths,c=a._length;n.length=0;var l=t.transforms.finalTransform;for(r=0;r<c;r+=1){var o=a.shapes[r];if(o&&o.v){for(s=o._length,i=1;i<s;i+=1)1===i&&n.push({t:"m",p:l.applyToPointArray(o.v[0][0],o.v[0][1],0)}),n.push({t:"c",pts:l.applyToTriplePoints(o.o[i-1],o.i[i],o.v[i])});1===s&&n.push({t:"m",p:l.applyToPointArray(o.v[0][0],o.v[0][1],0)}),o.c&&s&&(n.push({t:"c",pts:l.applyToTriplePoints(o.o[i-1],o.i[0],o.v[0])}),n.push({t:"z"}))}}t.trNodes=n}},CVShapeElement.prototype.renderPath=function(t,e){if(!0!==t.hd&&t._shouldRender){var i,s=e.styledShapes.length;for(i=0;i<s;i+=1)this.renderStyledShape(e.styledShapes[i],e.sh)}},CVShapeElement.prototype.renderFill=function(t,e,i){var s=e.style;(e.c._mdf||this._isFirstFrame)&&(s.co="rgb("+bmFloor(e.c.v[0])+","+bmFloor(e.c.v[1])+","+bmFloor(e.c.v[2])+")"),(e.o._mdf||i._opMdf||this._isFirstFrame)&&(s.coOp=e.o.v*i.opacity)},CVShapeElement.prototype.renderGradientFill=function(t,e,i){var s,r=e.style;if(!r.grd||e.g._mdf||e.s._mdf||e.e._mdf||1!==t.t&&(e.h._mdf||e.a._mdf)){var n,a=this.globalData.canvasContext,c=e.s.v,l=e.e.v;if(1===t.t)s=a.createLinearGradient(c[0],c[1],l[0],l[1]);else{var o=Math.sqrt(Math.pow(c[0]-l[0],2)+Math.pow(c[1]-l[1],2)),d=Math.atan2(l[1]-c[1],l[0]-c[0]),h=e.h.v;h>=1?h=.99:h<=-1&&(h=-.99);var m=o*h,p=Math.cos(d+e.a.v)*m+c[0],v=Math.sin(d+e.a.v)*m+c[1];s=a.createRadialGradient(p,v,0,c[0],c[1],o)}var f=t.g.p,u=e.g.c,y=1;for(n=0;n<f;n+=1)e.g._hasOpacity&&e.g._collapsable&&(y=e.g.o[2*n+1]),s.addColorStop(u[4*n]/100,"rgba("+u[4*n+1]+","+u[4*n+2]+","+u[4*n+3]+","+y+")");r.grd=s}r.coOp=e.o.v*i.opacity},CVShapeElement.prototype.renderStroke=function(t,e,i){var s=e.style,r=e.d;r&&(r._mdf||this._isFirstFrame)&&(s.da=r.dashArray,s.do=r.dashoffset[0]),(e.c._mdf||this._isFirstFrame)&&(s.co="rgb("+bmFloor(e.c.v[0])+","+bmFloor(e.c.v[1])+","+bmFloor(e.c.v[2])+")"),(e.o._mdf||i._opMdf||this._isFirstFrame)&&(s.coOp=e.o.v*i.opacity),(e.w._mdf||this._isFirstFrame)&&(s.wi=e.w.v)},CVShapeElement.prototype.destroy=function(){this.shapesData=null,this.globalData=null,this.canvasContext=null,this.stylesList.length=0,this.itemsData.length=0},extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement],CVTextElement),CVTextElement.prototype.tHelper=createTag("canvas").getContext("2d"),CVTextElement.prototype.buildNewText=function(){var t=this.textProperty.currentData;this.renderedLetters=createSizedArray(t.l?t.l.length:0);var e=!1;t.fc?(e=!0,this.values.fill=this.buildColor(t.fc)):this.values.fill="rgba(0,0,0,0)",this.fill=e;var i=!1;t.sc&&(i=!0,this.values.stroke=this.buildColor(t.sc),this.values.sWidth=t.sw);var s,r,n,a,c,l,o,d,h,m,p,v,f=this.globalData.fontManager.getFontByName(t.f),u=t.l,y=this.mHelper;this.stroke=i,this.values.fValue=t.finalSize+"px "+this.globalData.fontManager.getFontByName(t.f).fFamily,r=t.finalText.length;var g=this.data.singleShape,_=.001*t.tr*t.finalSize,C=0,E=0,I=!0,T=0;for(s=0;s<r;s+=1){a=(n=this.globalData.fontManager.getCharData(t.finalText[s],f.fStyle,this.globalData.fontManager.getFontByName(t.f).fFamily))&&n.data||{},y.reset(),g&&u[s].n&&(C=-_,E+=t.yOffset,E+=I?1:0,I=!1),h=(o=a.shapes?a.shapes[0].it:[]).length,y.scale(t.finalSize/100,t.finalSize/100),g&&this.applyTextPropertiesToMatrix(t,y,u[s].line,C,E),p=createSizedArray(h-1);var x=0;for(d=0;d<h;d+=1)if("sh"===o[d].ty){for(l=o[d].ks.k.i.length,m=o[d].ks.k,v=[],c=1;c<l;c+=1)1===c&&v.push(y.applyToX(m.v[0][0],m.v[0][1],0),y.applyToY(m.v[0][0],m.v[0][1],0)),v.push(y.applyToX(m.o[c-1][0],m.o[c-1][1],0),y.applyToY(m.o[c-1][0],m.o[c-1][1],0),y.applyToX(m.i[c][0],m.i[c][1],0),y.applyToY(m.i[c][0],m.i[c][1],0),y.applyToX(m.v[c][0],m.v[c][1],0),y.applyToY(m.v[c][0],m.v[c][1],0));v.push(y.applyToX(m.o[c-1][0],m.o[c-1][1],0),y.applyToY(m.o[c-1][0],m.o[c-1][1],0),y.applyToX(m.i[0][0],m.i[0][1],0),y.applyToY(m.i[0][0],m.i[0][1],0),y.applyToX(m.v[0][0],m.v[0][1],0),y.applyToY(m.v[0][0],m.v[0][1],0)),p[x]=v,x+=1}g&&(C+=u[s].l,C+=_),this.textSpans[T]?this.textSpans[T].elem=p:this.textSpans[T]={elem:p},T+=1}},CVTextElement.prototype.renderInnerContent=function(){var t,e,i,s,r,n;this.validateText(),this.canvasContext.font=this.values.fValue,this.globalData.renderer.ctxLineCap("butt"),this.globalData.renderer.ctxLineJoin("miter"),this.globalData.renderer.ctxMiterLimit(4),this.data.singleShape||this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag);var a,c=this.textAnimator.renderedLetters,l=this.textProperty.currentData.l;e=l.length;var o,d,h=null,m=null,p=null,v=this.globalData.renderer;for(t=0;t<e;t+=1)if(!l[t].n){if((a=c[t])&&(v.save(),v.ctxTransform(a.p),v.ctxOpacity(a.o)),this.fill){for(a&&a.fc?h!==a.fc&&(v.ctxFillStyle(a.fc),h=a.fc):h!==this.values.fill&&(h=this.values.fill,v.ctxFillStyle(this.values.fill)),s=(o=this.textSpans[t].elem).length,this.globalData.canvasContext.beginPath(),i=0;i<s;i+=1)for(n=(d=o[i]).length,this.globalData.canvasContext.moveTo(d[0],d[1]),r=2;r<n;r+=6)this.globalData.canvasContext.bezierCurveTo(d[r],d[r+1],d[r+2],d[r+3],d[r+4],d[r+5]);this.globalData.canvasContext.closePath(),v.ctxFill()}if(this.stroke){for(a&&a.sw?p!==a.sw&&(p=a.sw,v.ctxLineWidth(a.sw)):p!==this.values.sWidth&&(p=this.values.sWidth,v.ctxLineWidth(this.values.sWidth)),a&&a.sc?m!==a.sc&&(m=a.sc,v.ctxStrokeStyle(a.sc)):m!==this.values.stroke&&(m=this.values.stroke,v.ctxStrokeStyle(this.values.stroke)),s=(o=this.textSpans[t].elem).length,this.globalData.canvasContext.beginPath(),i=0;i<s;i+=1)for(n=(d=o[i]).length,this.globalData.canvasContext.moveTo(d[0],d[1]),r=2;r<n;r+=6)this.globalData.canvasContext.bezierCurveTo(d[r],d[r+1],d[r+2],d[r+3],d[r+4],d[r+5]);this.globalData.canvasContext.closePath(),v.ctxStroke()}a&&this.globalData.renderer.restore()}},extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement],CVImageElement),CVImageElement.prototype.initElement=SVGShapeElement.prototype.initElement,CVImageElement.prototype.prepareFrame=IImageElement.prototype.prepareFrame,CVImageElement.prototype.createContent=function(){if(this.img.width&&(this.assetData.w!==this.img.width||this.assetData.h!==this.img.height)){var t=createTag("canvas");t.width=this.assetData.w,t.height=this.assetData.h;var e,i,s=t.getContext("2d"),r=this.img.width,n=this.img.height,a=r/n,c=this.assetData.w/this.assetData.h,l=this.assetData.pr||this.globalData.renderConfig.imagePreserveAspectRatio;a>c&&"xMidYMid slice"===l||a<c&&"xMidYMid slice"!==l?e=(i=n)*c:i=(e=r)/c,s.drawImage(this.img,(r-e)/2,(n-i)/2,e,i,0,0,this.assetData.w,this.assetData.h),this.img=t}},CVImageElement.prototype.renderInnerContent=function(){this.canvasContext.drawImage(this.img,0,0)},CVImageElement.prototype.destroy=function(){this.img=null},extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement],CVSolidElement),CVSolidElement.prototype.initElement=SVGShapeElement.prototype.initElement,CVSolidElement.prototype.prepareFrame=IImageElement.prototype.prepareFrame,CVSolidElement.prototype.renderInnerContent=function(){this.globalData.renderer.ctxFillStyle(this.data.sc),this.globalData.renderer.ctxFillRect(0,0,this.data.sw,this.data.sh)},extendPrototype([BaseRenderer],CanvasRendererBase),CanvasRendererBase.prototype.createShape=function(t){return new CVShapeElement(t,this.globalData,this)},CanvasRendererBase.prototype.createText=function(t){return new CVTextElement(t,this.globalData,this)},CanvasRendererBase.prototype.createImage=function(t){return new CVImageElement(t,this.globalData,this)},CanvasRendererBase.prototype.createSolid=function(t){return new CVSolidElement(t,this.globalData,this)},CanvasRendererBase.prototype.createNull=SVGRenderer.prototype.createNull,CanvasRendererBase.prototype.ctxTransform=function(t){1===t[0]&&0===t[1]&&0===t[4]&&1===t[5]&&0===t[12]&&0===t[13]||this.canvasContext.transform(t[0],t[1],t[4],t[5],t[12],t[13])},CanvasRendererBase.prototype.ctxOpacity=function(t){this.canvasContext.globalAlpha*=t<0?0:t},CanvasRendererBase.prototype.ctxFillStyle=function(t){this.canvasContext.fillStyle=t},CanvasRendererBase.prototype.ctxStrokeStyle=function(t){this.canvasContext.strokeStyle=t},CanvasRendererBase.prototype.ctxLineWidth=function(t){this.canvasContext.lineWidth=t},CanvasRendererBase.prototype.ctxLineCap=function(t){this.canvasContext.lineCap=t},CanvasRendererBase.prototype.ctxLineJoin=function(t){this.canvasContext.lineJoin=t},CanvasRendererBase.prototype.ctxMiterLimit=function(t){this.canvasContext.miterLimit=t},CanvasRendererBase.prototype.ctxFill=function(t){this.canvasContext.fill(t)},CanvasRendererBase.prototype.ctxFillRect=function(t,e,i,s){this.canvasContext.fillRect(t,e,i,s)},CanvasRendererBase.prototype.ctxStroke=function(){this.canvasContext.stroke()},CanvasRendererBase.prototype.reset=function(){this.renderConfig.clearCanvas?this.contextData.reset():this.canvasContext.restore()},CanvasRendererBase.prototype.save=function(){this.canvasContext.save()},CanvasRendererBase.prototype.restore=function(t){this.renderConfig.clearCanvas?(t&&(this.globalData.blendMode="source-over"),this.contextData.restore(t)):this.canvasContext.restore()},CanvasRendererBase.prototype.configAnimation=function(t){if(this.animationItem.wrapper){this.animationItem.container=createTag("canvas");var e=this.animationItem.container.style;e.width="100%",e.height="100%";var i="0px 0px 0px";e.transformOrigin=i,e.mozTransformOrigin=i,e.webkitTransformOrigin=i,e["-webkit-transform"]=i,e.contentVisibility=this.renderConfig.contentVisibility,this.animationItem.wrapper.appendChild(this.animationItem.container),this.canvasContext=this.animationItem.container.getContext("2d"),this.renderConfig.className&&this.animationItem.container.setAttribute("class",this.renderConfig.className),this.renderConfig.id&&this.animationItem.container.setAttribute("id",this.renderConfig.id)}else this.canvasContext=this.renderConfig.context;this.contextData.setContext(this.canvasContext),this.data=t,this.layers=t.layers,this.transformCanvas={w:t.w,h:t.h,sx:0,sy:0,tx:0,ty:0},this.setupGlobalData(t,document.body),this.globalData.canvasContext=this.canvasContext,this.globalData.renderer=this,this.globalData.isDashed=!1,this.globalData.progressiveLoad=this.renderConfig.progressiveLoad,this.globalData.transformCanvas=this.transformCanvas,this.elements=createSizedArray(t.layers.length),this.updateContainerSize()},CanvasRendererBase.prototype.updateContainerSize=function(t,e){var i,s,r,n;if(this.reset(),t?(i=t,s=e,this.canvasContext.canvas.width=i,this.canvasContext.canvas.height=s):(this.animationItem.wrapper&&this.animationItem.container?(i=this.animationItem.wrapper.offsetWidth,s=this.animationItem.wrapper.offsetHeight):(i=this.canvasContext.canvas.width,s=this.canvasContext.canvas.height),this.canvasContext.canvas.width=i*this.renderConfig.dpr,this.canvasContext.canvas.height=s*this.renderConfig.dpr),-1!==this.renderConfig.preserveAspectRatio.indexOf("meet")||-1!==this.renderConfig.preserveAspectRatio.indexOf("slice")){var a=this.renderConfig.preserveAspectRatio.split(" "),c=a[1]||"meet",l=a[0]||"xMidYMid",o=l.substr(0,4),d=l.substr(4);r=i/s,(n=this.transformCanvas.w/this.transformCanvas.h)>r&&"meet"===c||n<r&&"slice"===c?(this.transformCanvas.sx=i/(this.transformCanvas.w/this.renderConfig.dpr),this.transformCanvas.sy=i/(this.transformCanvas.w/this.renderConfig.dpr)):(this.transformCanvas.sx=s/(this.transformCanvas.h/this.renderConfig.dpr),this.transformCanvas.sy=s/(this.transformCanvas.h/this.renderConfig.dpr)),this.transformCanvas.tx="xMid"===o&&(n<r&&"meet"===c||n>r&&"slice"===c)?(i-this.transformCanvas.w*(s/this.transformCanvas.h))/2*this.renderConfig.dpr:"xMax"===o&&(n<r&&"meet"===c||n>r&&"slice"===c)?(i-this.transformCanvas.w*(s/this.transformCanvas.h))*this.renderConfig.dpr:0,this.transformCanvas.ty="YMid"===d&&(n>r&&"meet"===c||n<r&&"slice"===c)?(s-this.transformCanvas.h*(i/this.transformCanvas.w))/2*this.renderConfig.dpr:"YMax"===d&&(n>r&&"meet"===c||n<r&&"slice"===c)?(s-this.transformCanvas.h*(i/this.transformCanvas.w))*this.renderConfig.dpr:0}else"none"===this.renderConfig.preserveAspectRatio?(this.transformCanvas.sx=i/(this.transformCanvas.w/this.renderConfig.dpr),this.transformCanvas.sy=s/(this.transformCanvas.h/this.renderConfig.dpr),this.transformCanvas.tx=0,this.transformCanvas.ty=0):(this.transformCanvas.sx=this.renderConfig.dpr,this.transformCanvas.sy=this.renderConfig.dpr,this.transformCanvas.tx=0,this.transformCanvas.ty=0);this.transformCanvas.props=[this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1],this.ctxTransform(this.transformCanvas.props),this.canvasContext.beginPath(),this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h),this.canvasContext.closePath(),this.canvasContext.clip(),this.renderFrame(this.renderedFrame,!0)},CanvasRendererBase.prototype.destroy=function(){var t;for(this.renderConfig.clearCanvas&&this.animationItem.wrapper&&(this.animationItem.wrapper.innerText=""),t=(this.layers?this.layers.length:0)-1;t>=0;t-=1)this.elements[t]&&this.elements[t].destroy&&this.elements[t].destroy();this.elements.length=0,this.globalData.canvasContext=null,this.animationItem.container=null,this.destroyed=!0},CanvasRendererBase.prototype.renderFrame=function(t,e){if((this.renderedFrame!==t||!0!==this.renderConfig.clearCanvas||e)&&!this.destroyed&&-1!==t){var i;this.renderedFrame=t,this.globalData.frameNum=t-this.animationItem._isFirstFrame,this.globalData.frameId+=1,this.globalData._mdf=!this.renderConfig.clearCanvas||e,this.globalData.projectInterface.currentFrame=t;var s=this.layers.length;for(this.completeLayers||this.checkLayers(t),i=s-1;i>=0;i-=1)(this.completeLayers||this.elements[i])&&this.elements[i].prepareFrame(t-this.layers[i].st);if(this.globalData._mdf){for(!0===this.renderConfig.clearCanvas?this.canvasContext.clearRect(0,0,this.transformCanvas.w,this.transformCanvas.h):this.save(),i=s-1;i>=0;i-=1)(this.completeLayers||this.elements[i])&&this.elements[i].renderFrame();!0!==this.renderConfig.clearCanvas&&this.restore()}}},CanvasRendererBase.prototype.buildItem=function(t){var e=this.elements;if(!e[t]&&99!==this.layers[t].ty){var i=this.createItem(this.layers[t],this,this.globalData);e[t]=i,i.initExpressions()}},CanvasRendererBase.prototype.checkPendingElements=function(){for(;this.pendingElements.length;){this.pendingElements.pop().checkParenting()}},CanvasRendererBase.prototype.hide=function(){this.animationItem.container.style.display="none"},CanvasRendererBase.prototype.show=function(){this.animationItem.container.style.display="block"},CVContextData.prototype.duplicate=function(){var t=2*this._length,e=0;for(e=this._length;e<t;e+=1)this.stack[e]=new CanvasContext;this._length=t},CVContextData.prototype.reset=function(){this.cArrPos=0,this.cTr.reset(),this.stack[this.cArrPos].opacity=1},CVContextData.prototype.restore=function(t){this.cArrPos-=1;var e,i=this.stack[this.cArrPos],s=i.transform,r=this.cTr.props;for(e=0;e<16;e+=1)r[e]=s[e];if(t){this.nativeContext.restore();var n=this.stack[this.cArrPos+1];this.appliedFillStyle=n.fillStyle,this.appliedStrokeStyle=n.strokeStyle,this.appliedLineWidth=n.lineWidth,this.appliedLineCap=n.lineCap,this.appliedLineJoin=n.lineJoin,this.appliedMiterLimit=n.miterLimit}this.nativeContext.setTransform(s[0],s[1],s[4],s[5],s[12],s[13]),(t||-1!==i.opacity&&this.currentOpacity!==i.opacity)&&(this.nativeContext.globalAlpha=i.opacity,this.currentOpacity=i.opacity),this.currentFillStyle=i.fillStyle,this.currentStrokeStyle=i.strokeStyle,this.currentLineWidth=i.lineWidth,this.currentLineCap=i.lineCap,this.currentLineJoin=i.lineJoin,this.currentMiterLimit=i.miterLimit},CVContextData.prototype.save=function(t){t&&this.nativeContext.save();var e=this.cTr.props;this._length<=this.cArrPos&&this.duplicate();var i,s=this.stack[this.cArrPos];for(i=0;i<16;i+=1)s.transform[i]=e[i];this.cArrPos+=1;var r=this.stack[this.cArrPos];r.opacity=s.opacity,r.fillStyle=s.fillStyle,r.strokeStyle=s.strokeStyle,r.lineWidth=s.lineWidth,r.lineCap=s.lineCap,r.lineJoin=s.lineJoin,r.miterLimit=s.miterLimit},CVContextData.prototype.setOpacity=function(t){this.stack[this.cArrPos].opacity=t},CVContextData.prototype.setContext=function(t){this.nativeContext=t},CVContextData.prototype.fillStyle=function(t){this.stack[this.cArrPos].fillStyle!==t&&(this.currentFillStyle=t,this.stack[this.cArrPos].fillStyle=t)},CVContextData.prototype.strokeStyle=function(t){this.stack[this.cArrPos].strokeStyle!==t&&(this.currentStrokeStyle=t,this.stack[this.cArrPos].strokeStyle=t)},CVContextData.prototype.lineWidth=function(t){this.stack[this.cArrPos].lineWidth!==t&&(this.currentLineWidth=t,this.stack[this.cArrPos].lineWidth=t)},CVContextData.prototype.lineCap=function(t){this.stack[this.cArrPos].lineCap!==t&&(this.currentLineCap=t,this.stack[this.cArrPos].lineCap=t)},CVContextData.prototype.lineJoin=function(t){this.stack[this.cArrPos].lineJoin!==t&&(this.currentLineJoin=t,this.stack[this.cArrPos].lineJoin=t)},CVContextData.prototype.miterLimit=function(t){this.stack[this.cArrPos].miterLimit!==t&&(this.currentMiterLimit=t,this.stack[this.cArrPos].miterLimit=t)},CVContextData.prototype.transform=function(t){this.transformMat.cloneFromProps(t);var e=this.cTr;this.transformMat.multiply(e),e.cloneFromProps(this.transformMat.props);var i=e.props;this.nativeContext.setTransform(i[0],i[1],i[4],i[5],i[12],i[13])},CVContextData.prototype.opacity=function(t){var e=this.stack[this.cArrPos].opacity;e*=t<0?0:t,this.stack[this.cArrPos].opacity!==e&&(this.currentOpacity!==t&&(this.nativeContext.globalAlpha=t,this.currentOpacity=t),this.stack[this.cArrPos].opacity=e)},CVContextData.prototype.fill=function(t){this.appliedFillStyle!==this.currentFillStyle&&(this.appliedFillStyle=this.currentFillStyle,this.nativeContext.fillStyle=this.appliedFillStyle),this.nativeContext.fill(t)},CVContextData.prototype.fillRect=function(t,e,i,s){this.appliedFillStyle!==this.currentFillStyle&&(this.appliedFillStyle=this.currentFillStyle,this.nativeContext.fillStyle=this.appliedFillStyle),this.nativeContext.fillRect(t,e,i,s)},CVContextData.prototype.stroke=function(){this.appliedStrokeStyle!==this.currentStrokeStyle&&(this.appliedStrokeStyle=this.currentStrokeStyle,this.nativeContext.strokeStyle=this.appliedStrokeStyle),this.appliedLineWidth!==this.currentLineWidth&&(this.appliedLineWidth=this.currentLineWidth,this.nativeContext.lineWidth=this.appliedLineWidth),this.appliedLineCap!==this.currentLineCap&&(this.appliedLineCap=this.currentLineCap,this.nativeContext.lineCap=this.appliedLineCap),this.appliedLineJoin!==this.currentLineJoin&&(this.appliedLineJoin=this.currentLineJoin,this.nativeContext.lineJoin=this.appliedLineJoin),this.appliedMiterLimit!==this.currentMiterLimit&&(this.appliedMiterLimit=this.currentMiterLimit,this.nativeContext.miterLimit=this.appliedMiterLimit),this.nativeContext.stroke()},extendPrototype([CanvasRendererBase,ICompElement,CVBaseElement],CVCompElement),CVCompElement.prototype.renderInnerContent=function(){var t,e=this.canvasContext;for(e.beginPath(),e.moveTo(0,0),e.lineTo(this.data.w,0),e.lineTo(this.data.w,this.data.h),e.lineTo(0,this.data.h),e.lineTo(0,0),e.clip(),t=this.layers.length-1;t>=0;t-=1)(this.completeLayers||this.elements[t])&&this.elements[t].renderFrame()},CVCompElement.prototype.destroy=function(){var t;for(t=this.layers.length-1;t>=0;t-=1)this.elements[t]&&this.elements[t].destroy();this.layers=null,this.elements=null},CVCompElement.prototype.createComp=function(t){return new CVCompElement(t,this.globalData,this)},extendPrototype([CanvasRendererBase],CanvasRenderer),CanvasRenderer.prototype.createComp=function(t){return new CVCompElement(t,this.globalData,this)},registerRenderer("canvas",CanvasRenderer),ShapeModifiers.registerModifier("tm",TrimModifier),ShapeModifiers.registerModifier("pb",PuckerAndBloatModifier),ShapeModifiers.registerModifier("rp",RepeaterModifier),ShapeModifiers.registerModifier("rd",RoundCornersModifier),ShapeModifiers.registerModifier("zz",ZigZagModifier),ShapeModifiers.registerModifier("op",OffsetPathModifier);const CompExpressionInterface=function(t){function e(e){for(var i=0,s=t.layers.length;i<s;){if(t.layers[i].nm===e||t.layers[i].ind===e)return t.elements[i].layerInterface;i+=1}return null}return Object.defineProperty(e,"_name",{value:t.data.nm}),e.layer=e,e.pixelAspect=1,e.height=t.data.h||t.globalData.compSize.h,e.width=t.data.w||t.globalData.compSize.w,e.pixelAspect=1,e.frameDuration=1/t.globalData.frameRate,e.displayStartTime=0,e.numLayers=t.layers.length,e};function seedRandom(t,e){var i,s=this,r=256,n=e.pow(r,6),a=e.pow(2,52),c=2*a,l=255;function o(t){var e,i=t.length,s=this,n=0,a=s.i=s.j=0,c=s.S=[];for(i||(t=[i++]);n<r;)c[n]=n++;for(n=0;n<r;n++)c[n]=c[a=l&a+t[n%i]+(e=c[n])],c[a]=e;s.g=function(t){for(var e,i=0,n=s.i,a=s.j,c=s.S;t--;)e=c[n=l&n+1],i=i*r+c[l&(c[n]=c[a=l&a+e])+(c[a]=e)];return s.i=n,s.j=a,i}}function d(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function h(t,e){var i,s=[],r=typeof t;if(e&&"object"==r)for(i in t)try{s.push(h(t[i],e-1))}catch(n){}return s.length?s:"string"==r?t:t+"\0"}function m(t,e){for(var i,s=t+"",r=0;r<s.length;)e[l&r]=l&(i^=19*e[l&r])+s.charCodeAt(r++);return p(e)}function p(t){return String.fromCharCode.apply(0,t)}e.seedrandom=function(l,v,f){var u=[],y=m(h((v=!0===v?{entropy:!0}:v||{}).entropy?[l,p(t)]:null===l?function(){try{i;var e=new Uint8Array(r);return(s.crypto||s.msCrypto).getRandomValues(e),p(e)}catch(c){var n=s.navigator,a=n&&n.plugins;return[+new Date,s,a,s.screen,p(t)]}}():l,3),u),g=new o(u),_=function(){for(var t=g.g(6),e=n,i=0;t<a;)t=(t+i)*r,e*=r,i=g.g(1);for(;t>=c;)t/=2,e/=2,i>>>=1;return(t+i)/e};return _.int32=function(){return 0|g.g(4)},_.quick=function(){return g.g(4)/4294967296},_.double=_,m(p(g.S),t),(v.pass||f||function(t,i,s,r){return r&&(r.S&&d(r,g),t.state=function(){return d(g,{})}),s?(e.random=t,i):t})(_,y,"global"in v?v.global:this==e,v.state)},m(e.random(),t)}function initialize$2(t){seedRandom([],t)}var propTypes={SHAPE:"shape"};const ExpressionManager=function(){var ob={},Math=BMMath,window=null,document=null,XMLHttpRequest=null,fetch=null,frames=null,_lottieGlobal={};function resetFrame(){_lottieGlobal={}}function $bm_isInstanceOfArray(t){return t.constructor===Array||t.constructor===Float32Array}function isNumerable(t,e){return"number"===t||e instanceof Number||"boolean"===t||"string"===t}function $bm_neg(t){var e=typeof t;if("number"===e||t instanceof Number||"boolean"===e)return-t;if($bm_isInstanceOfArray(t)){var i,s=t.length,r=[];for(i=0;i<s;i+=1)r[i]=-t[i];return r}return t.propType?t.v:-t}initialize$2(BMMath);var easeInBez=BezierFactory.getBezierEasing(.333,0,.833,.833,"easeIn").get,easeOutBez=BezierFactory.getBezierEasing(.167,.167,.667,1,"easeOut").get,easeInOutBez=BezierFactory.getBezierEasing(.33,0,.667,1,"easeInOut").get;function sum(t,e){var i=typeof t,s=typeof e;if(isNumerable(i,t)&&isNumerable(s,e)||"string"===i||"string"===s)return t+e;if($bm_isInstanceOfArray(t)&&isNumerable(s,e))return(t=t.slice(0))[0]+=e,t;if(isNumerable(i,t)&&$bm_isInstanceOfArray(e))return(e=e.slice(0))[0]=t+e[0],e;if($bm_isInstanceOfArray(t)&&$bm_isInstanceOfArray(e)){for(var r=0,n=t.length,a=e.length,c=[];r<n||r<a;)("number"==typeof t[r]||t[r]instanceof Number)&&("number"==typeof e[r]||e[r]instanceof Number)?c[r]=t[r]+e[r]:c[r]=void 0===e[r]?t[r]:t[r]||e[r],r+=1;return c}return 0}var add=sum;function sub(t,e){var i=typeof t,s=typeof e;if(isNumerable(i,t)&&isNumerable(s,e))return"string"===i&&(t=parseInt(t,10)),"string"===s&&(e=parseInt(e,10)),t-e;if($bm_isInstanceOfArray(t)&&isNumerable(s,e))return(t=t.slice(0))[0]-=e,t;if(isNumerable(i,t)&&$bm_isInstanceOfArray(e))return(e=e.slice(0))[0]=t-e[0],e;if($bm_isInstanceOfArray(t)&&$bm_isInstanceOfArray(e)){for(var r=0,n=t.length,a=e.length,c=[];r<n||r<a;)("number"==typeof t[r]||t[r]instanceof Number)&&("number"==typeof e[r]||e[r]instanceof Number)?c[r]=t[r]-e[r]:c[r]=void 0===e[r]?t[r]:t[r]||e[r],r+=1;return c}return 0}function mul(t,e){var i,s,r,n=typeof t,a=typeof e;if(isNumerable(n,t)&&isNumerable(a,e))return t*e;if($bm_isInstanceOfArray(t)&&isNumerable(a,e)){for(r=t.length,i=createTypedArray("float32",r),s=0;s<r;s+=1)i[s]=t[s]*e;return i}if(isNumerable(n,t)&&$bm_isInstanceOfArray(e)){for(r=e.length,i=createTypedArray("float32",r),s=0;s<r;s+=1)i[s]=t*e[s];return i}return 0}function div(t,e){var i,s,r,n=typeof t,a=typeof e;if(isNumerable(n,t)&&isNumerable(a,e))return t/e;if($bm_isInstanceOfArray(t)&&isNumerable(a,e)){for(r=t.length,i=createTypedArray("float32",r),s=0;s<r;s+=1)i[s]=t[s]/e;return i}if(isNumerable(n,t)&&$bm_isInstanceOfArray(e)){for(r=e.length,i=createTypedArray("float32",r),s=0;s<r;s+=1)i[s]=t/e[s];return i}return 0}function mod(t,e){return"string"==typeof t&&(t=parseInt(t,10)),"string"==typeof e&&(e=parseInt(e,10)),t%e}var $bm_sum=sum,$bm_sub=sub,$bm_mul=mul,$bm_div=div,$bm_mod=mod;function clamp(t,e,i){if(e>i){var s=i;i=e,e=s}return Math.min(Math.max(t,e),i)}function radiansToDegrees(t){return t/degToRads}var radians_to_degrees=radiansToDegrees;function degreesToRadians(t){return t*degToRads}var degrees_to_radians=radiansToDegrees,helperLengthArray=[0,0,0,0,0,0];function length(t,e){if("number"==typeof t||t instanceof Number)return e=e||0,Math.abs(t-e);var i;e||(e=helperLengthArray);var s=Math.min(t.length,e.length),r=0;for(i=0;i<s;i+=1)r+=Math.pow(e[i]-t[i],2);return Math.sqrt(r)}function normalize(t){return div(t,length(t))}function rgbToHsl(t){var e,i,s=t[0],r=t[1],n=t[2],a=Math.max(s,r,n),c=Math.min(s,r,n),l=(a+c)/2;if(a===c)e=0,i=0;else{var o=a-c;switch(i=l>.5?o/(2-a-c):o/(a+c),a){case s:e=(r-n)/o+(r<n?6:0);break;case r:e=(n-s)/o+2;break;case n:e=(s-r)/o+4}e/=6}return[e,i,l,t[3]]}function hue2rgb(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+(e-t)*(2/3-i)*6:t}function hslToRgb(t){var e,i,s,r=t[0],n=t[1],a=t[2];if(0===n)e=a,s=a,i=a;else{var c=a<.5?a*(1+n):a+n-a*n,l=2*a-c;e=hue2rgb(l,c,r+1/3),i=hue2rgb(l,c,r),s=hue2rgb(l,c,r-1/3)}return[e,i,s,t[3]]}function linear(t,e,i,s,r){if(void 0!==s&&void 0!==r||(s=e,r=i,e=0,i=1),i<e){var n=i;i=e,e=n}if(t<=e)return s;if(t>=i)return r;var a,c=i===e?0:(t-e)/(i-e);if(!s.length)return s+(r-s)*c;var l=s.length,o=createTypedArray("float32",l);for(a=0;a<l;a+=1)o[a]=s[a]+(r[a]-s[a])*c;return o}function random(t,e){if(void 0===e&&(void 0===t?(t=0,e=1):(e=t,t=void 0)),e.length){var i,s=e.length;t||(t=createTypedArray("float32",s));var r=createTypedArray("float32",s),n=BMMath.random();for(i=0;i<s;i+=1)r[i]=t[i]+n*(e[i]-t[i]);return r}return void 0===t&&(t=0),t+BMMath.random()*(e-t)}function createPath(t,e,i,s){var r,n=t.length,a=shapePool.newElement();a.setPathData(!!s,n);var c,l,o=[0,0];for(r=0;r<n;r+=1)c=e&&e[r]?e[r]:o,l=i&&i[r]?i[r]:o,a.setTripleAt(t[r][0],t[r][1],l[0]+t[r][0],l[1]+t[r][1],c[0]+t[r][0],c[1]+t[r][1],r,!0);return a}function initiateExpression(elem,data,property){function noOp(t){return t}if(!elem.globalData.renderConfig.runExpressions)return noOp;var val=data.x,needsVelocity=/velocity(?![\w\d])/.test(val),_needsRandom=-1!==val.indexOf("random"),elemType=elem.data.ty,transform,$bm_transform,content,effect,thisProperty=property;thisProperty.valueAtTime=thisProperty.getValueAtTime,Object.defineProperty(thisProperty,"value",{get:function(){return thisProperty.v}}),elem.comp.frameDuration=1/elem.comp.globalData.frameRate,elem.comp.displayStartTime=0;var inPoint=elem.data.ip/elem.comp.globalData.frameRate,outPoint=elem.data.op/elem.comp.globalData.frameRate,width=elem.data.sw?elem.data.sw:0,height=elem.data.sh?elem.data.sh:0,name=elem.data.nm,loopIn,loop_in,loopOut,loop_out,smooth,toWorld,fromWorld,fromComp,toComp,fromCompToSurface,position,rotation,anchorPoint,scale,thisLayer,thisComp,mask,valueAtTime,velocityAtTime,scoped_bm_rt,expression_function=eval("[function _expression_function(){"+val+";scoped_bm_rt=$bm_rt}]")[0],numKeys=property.kf?data.k.length:0,active=!this.data||!0!==this.data.hd,wiggle=function(t,e){var i,s,r=this.pv.length?this.pv.length:1,n=createTypedArray("float32",r);var a=Math.floor(5*time);for(i=0,s=0;i<a;){for(s=0;s<r;s+=1)n[s]+=-e+2*e*BMMath.random();i+=1}var c=5*time,l=c-Math.floor(c),o=createTypedArray("float32",r);if(r>1){for(s=0;s<r;s+=1)o[s]=this.pv[s]+n[s]+(-e+2*e*BMMath.random())*l;return o}return this.pv+n[0]+(-e+2*e*BMMath.random())*l}.bind(this);function loopInDuration(t,e){return loopIn(t,e,!0)}function loopOutDuration(t,e){return loopOut(t,e,!0)}thisProperty.loopIn&&(loopIn=thisProperty.loopIn.bind(thisProperty),loop_in=loopIn),thisProperty.loopOut&&(loopOut=thisProperty.loopOut.bind(thisProperty),loop_out=loopOut),thisProperty.smooth&&(smooth=thisProperty.smooth.bind(thisProperty)),this.getValueAtTime&&(valueAtTime=this.getValueAtTime.bind(this)),this.getVelocityAtTime&&(velocityAtTime=this.getVelocityAtTime.bind(this));var comp=elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface),time,velocity,value,text,textIndex,textTotal,selectorValue;function lookAt(t,e){var i=[e[0]-t[0],e[1]-t[1],e[2]-t[2]],s=Math.atan2(i[0],Math.sqrt(i[1]*i[1]+i[2]*i[2]))/degToRads;return[-Math.atan2(i[1],i[2])/degToRads,s,0]}function easeOut(t,e,i,s,r){return applyEase(easeOutBez,t,e,i,s,r)}function easeIn(t,e,i,s,r){return applyEase(easeInBez,t,e,i,s,r)}function ease(t,e,i,s,r){return applyEase(easeInOutBez,t,e,i,s,r)}function applyEase(t,e,i,s,r,n){void 0===r?(r=i,n=s):e=(e-i)/(s-i),e>1?e=1:e<0&&(e=0);var a=t(e);if($bm_isInstanceOfArray(r)){var c,l=r.length,o=createTypedArray("float32",l);for(c=0;c<l;c+=1)o[c]=(n[c]-r[c])*a+r[c];return o}return(n-r)*a+r}function nearestKey(t){var e,i,s,r=data.k.length;if(data.k.length&&"number"!=typeof data.k[0])if(i=-1,(t*=elem.comp.globalData.frameRate)<data.k[0].t)i=1,s=data.k[0].t;else{for(e=0;e<r-1;e+=1){if(t===data.k[e].t){i=e+1,s=data.k[e].t;break}if(t>data.k[e].t&&t<data.k[e+1].t){t-data.k[e].t>data.k[e+1].t-t?(i=e+2,s=data.k[e+1].t):(i=e+1,s=data.k[e].t);break}}-1===i&&(i=e+1,s=data.k[e].t)}else i=0,s=0;var n={};return n.index=i,n.time=s/elem.comp.globalData.frameRate,n}function key(t){var e,i,s;if(!data.k.length||"number"==typeof data.k[0])throw new Error("The property has no keyframe at index "+t);t-=1,e={time:data.k[t].t/elem.comp.globalData.frameRate,value:[]};var r=Object.prototype.hasOwnProperty.call(data.k[t],"s")?data.k[t].s:data.k[t-1].e;for(s=r.length,i=0;i<s;i+=1)e[i]=r[i],e.value[i]=r[i];return e}function framesToTime(t,e){return e||(e=elem.comp.globalData.frameRate),t/e}function timeToFrames(t,e){return t||0===t||(t=time),e||(e=elem.comp.globalData.frameRate),t*e}function seedRandom(t){BMMath.seedrandom(randSeed+t)}function sourceRectAtTime(){return elem.sourceRectAtTime()}function substring(t,e){return"string"==typeof value?void 0===e?value.substring(t):value.substring(t,e):""}function substr(t,e){return"string"==typeof value?void 0===e?value.substr(t):value.substr(t,e):""}function posterizeTime(t){time=0===t?0:Math.floor(time*t)/t,value=valueAtTime(time)}var index=elem.data.ind,hasParent=!(!elem.hierarchy||!elem.hierarchy.length),parent,randSeed=Math.floor(1e6*Math.random()),globalData=elem.globalData;function executeExpression(t){return value=t,this.frameExpressionId===elem.globalData.frameId&&"textSelector"!==this.propType?value:("textSelector"===this.propType&&(textIndex=this.textIndex,textTotal=this.textTotal,selectorValue=this.selectorValue),thisLayer||(text=elem.layerInterface.text,thisLayer=elem.layerInterface,thisComp=elem.comp.compInterface,toWorld=thisLayer.toWorld.bind(thisLayer),fromWorld=thisLayer.fromWorld.bind(thisLayer),fromComp=thisLayer.fromComp.bind(thisLayer),toComp=thisLayer.toComp.bind(thisLayer),mask=thisLayer.mask?thisLayer.mask.bind(thisLayer):null,fromCompToSurface=fromComp),transform||(transform=elem.layerInterface("ADBE Transform Group"),$bm_transform=transform,transform&&(anchorPoint=transform.anchorPoint)),4!==elemType||content||(content=thisLayer("ADBE Root Vectors Group")),effect||(effect=thisLayer(4)),(hasParent=!(!elem.hierarchy||!elem.hierarchy.length))&&!parent&&(parent=elem.hierarchy[0].layerInterface),time=this.comp.renderedFrame/this.comp.globalData.frameRate,_needsRandom&&seedRandom(randSeed+time),needsVelocity&&(velocity=velocityAtTime(time)),expression_function(),this.frameExpressionId=elem.globalData.frameId,scoped_bm_rt=scoped_bm_rt.propType===propTypes.SHAPE?scoped_bm_rt.v:scoped_bm_rt)}return executeExpression.__preventDeadCodeRemoval=[$bm_transform,anchorPoint,time,velocity,inPoint,outPoint,width,height,name,loop_in,loop_out,smooth,toComp,fromCompToSurface,toWorld,fromWorld,mask,position,rotation,scale,thisComp,numKeys,active,wiggle,loopInDuration,loopOutDuration,comp,lookAt,easeOut,easeIn,ease,nearestKey,key,text,textIndex,textTotal,selectorValue,framesToTime,timeToFrames,sourceRectAtTime,substring,substr,posterizeTime,index,globalData],executeExpression}return ob.initiateExpression=initiateExpression,ob.__preventDeadCodeRemoval=[window,document,XMLHttpRequest,fetch,frames,$bm_neg,add,$bm_sum,$bm_sub,$bm_mul,$bm_div,$bm_mod,clamp,radians_to_degrees,degreesToRadians,degrees_to_radians,normalize,rgbToHsl,hslToRgb,linear,random,createPath,_lottieGlobal],ob.resetFrame=resetFrame,ob}(),Expressions=function(){var t={};return t.initExpressions=function(t){var e=0,i=[];t.renderer.compInterface=CompExpressionInterface(t.renderer),t.renderer.globalData.projectInterface.registerComposition(t.renderer),t.renderer.globalData.pushExpression=function(){e+=1},t.renderer.globalData.popExpression=function(){0==(e-=1)&&function(){var t,e=i.length;for(t=0;t<e;t+=1)i[t].release();i.length=0}()},t.renderer.globalData.registerExpressionProperty=function(t){-1===i.indexOf(t)&&i.push(t)}},t.resetFrame=ExpressionManager.resetFrame,t}(),MaskManagerInterface=function(){function t(t,e){this._mask=t,this._data=e}Object.defineProperty(t.prototype,"maskPath",{get:function(){return this._mask.prop.k&&this._mask.prop.getValue(),this._mask.prop}}),Object.defineProperty(t.prototype,"maskOpacity",{get:function(){return this._mask.op.k&&this._mask.op.getValue(),100*this._mask.op.v}});return function(e){var i,s=createSizedArray(e.viewData.length),r=e.viewData.length;for(i=0;i<r;i+=1)s[i]=new t(e.viewData[i],e.masksProperties[i]);return function(t){for(i=0;i<r;){if(e.masksProperties[i].nm===t)return s[i];i+=1}return null}}}(),ExpressionPropertyInterface=function(){var t={pv:0,v:0,mult:1},e={pv:[0,0,0],v:[0,0,0],mult:1};function i(t,e,i){Object.defineProperty(t,"velocity",{get:function(){return e.getVelocityAtTime(e.comp.currentFrame)}}),t.numKeys=e.keyframes?e.keyframes.length:0,t.key=function(s){if(!t.numKeys)return 0;var r="";r="s"in e.keyframes[s-1]?e.keyframes[s-1].s:"e"in e.keyframes[s-2]?e.keyframes[s-2].e:e.keyframes[s-2].s;var n="unidimensional"===i?new Number(r):Object.assign({},r);return n.time=e.keyframes[s-1].t/e.elem.comp.globalData.frameRate,n.value="unidimensional"===i?r[0]:r,n},t.valueAtTime=e.getValueAtTime,t.speedAtTime=e.getSpeedAtTime,t.velocityAtTime=e.getVelocityAtTime,t.propertyGroup=e.propertyGroup}function s(){return t}return function(r){return r?"unidimensional"===r.propType?function(e){e&&"pv"in e||(e=t);var s=1/e.mult,r=e.pv*s,n=new Number(r);return n.value=r,i(n,e,"unidimensional"),function(){return e.k&&e.getValue(),r=e.v*s,n.value!==r&&((n=new Number(r)).value=r,i(n,e,"unidimensional")),n}}(r):function(t){t&&"pv"in t||(t=e);var s=1/t.mult,r=t.data&&t.data.l||t.pv.length,n=createTypedArray("float32",r),a=createTypedArray("float32",r);return n.value=a,i(n,t,"multidimensional"),function(){t.k&&t.getValue();for(var e=0;e<r;e+=1)a[e]=t.v[e]*s,n[e]=a[e];return n}}(r):s}}(),TransformExpressionInterface=function(t){function e(t){switch(t){case"scale":case"Scale":case"ADBE Scale":case 6:return e.scale;case"rotation":case"Rotation":case"ADBE Rotation":case"ADBE Rotate Z":case 10:return e.rotation;case"ADBE Rotate X":return e.xRotation;case"ADBE Rotate Y":return e.yRotation;case"position":case"Position":case"ADBE Position":case 2:return e.position;case"ADBE Position_0":return e.xPosition;case"ADBE Position_1":return e.yPosition;case"ADBE Position_2":return e.zPosition;case"anchorPoint":case"AnchorPoint":case"Anchor Point":case"ADBE AnchorPoint":case 1:return e.anchorPoint;case"opacity":case"Opacity":case 11:return e.opacity;default:return null}}var i,s,r,n;return Object.defineProperty(e,"rotation",{get:ExpressionPropertyInterface(t.r||t.rz)}),Object.defineProperty(e,"zRotation",{get:ExpressionPropertyInterface(t.rz||t.r)}),Object.defineProperty(e,"xRotation",{get:ExpressionPropertyInterface(t.rx)}),Object.defineProperty(e,"yRotation",{get:ExpressionPropertyInterface(t.ry)}),Object.defineProperty(e,"scale",{get:ExpressionPropertyInterface(t.s)}),t.p?n=ExpressionPropertyInterface(t.p):(i=ExpressionPropertyInterface(t.px),s=ExpressionPropertyInterface(t.py),t.pz&&(r=ExpressionPropertyInterface(t.pz))),Object.defineProperty(e,"position",{get:function(){return t.p?n():[i(),s(),r?r():0]}}),Object.defineProperty(e,"xPosition",{get:ExpressionPropertyInterface(t.px)}),Object.defineProperty(e,"yPosition",{get:ExpressionPropertyInterface(t.py)}),Object.defineProperty(e,"zPosition",{get:ExpressionPropertyInterface(t.pz)}),Object.defineProperty(e,"anchorPoint",{get:ExpressionPropertyInterface(t.a)}),Object.defineProperty(e,"opacity",{get:ExpressionPropertyInterface(t.o)}),Object.defineProperty(e,"skew",{get:ExpressionPropertyInterface(t.sk)}),Object.defineProperty(e,"skewAxis",{get:ExpressionPropertyInterface(t.sa)}),Object.defineProperty(e,"orientation",{get:ExpressionPropertyInterface(t.or)}),e},LayerExpressionInterface=function(){function t(t){var e=new Matrix;void 0!==t?this._elem.finalTransform.mProp.getValueAtTime(t).clone(e):this._elem.finalTransform.mProp.applyToMatrix(e);return e}function e(t,e){var i=this.getMatrix(e);return i.props[12]=0,i.props[13]=0,i.props[14]=0,this.applyPoint(i,t)}function i(t,e){var i=this.getMatrix(e);return this.applyPoint(i,t)}function s(t,e){var i=this.getMatrix(e);return i.props[12]=0,i.props[13]=0,i.props[14]=0,this.invertPoint(i,t)}function r(t,e){var i=this.getMatrix(e);return this.invertPoint(i,t)}function n(t,e){if(this._elem.hierarchy&&this._elem.hierarchy.length){var i,s=this._elem.hierarchy.length;for(i=0;i<s;i+=1)this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(t)}return t.applyToPointArray(e[0],e[1],e[2]||0)}function a(t,e){if(this._elem.hierarchy&&this._elem.hierarchy.length){var i,s=this._elem.hierarchy.length;for(i=0;i<s;i+=1)this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(t)}return t.inversePoint(e)}function c(t){var e=new Matrix;if(e.reset(),this._elem.finalTransform.mProp.applyToMatrix(e),this._elem.hierarchy&&this._elem.hierarchy.length){var i,s=this._elem.hierarchy.length;for(i=0;i<s;i+=1)this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(e);return e.inversePoint(t)}return e.inversePoint(t)}function l(){return[1,1,1,1]}return function(o){var d;function h(t){switch(t){case"ADBE Root Vectors Group":case"Contents":case 2:return h.shapeInterface;case 1:case 6:case"Transform":case"transform":case"ADBE Transform Group":return d;case 4:case"ADBE Effect Parade":case"effects":case"Effects":return h.effect;case"ADBE Text Properties":return h.textInterface;default:return null}}h.getMatrix=t,h.invertPoint=a,h.applyPoint=n,h.toWorld=i,h.toWorldVec=e,h.fromWorld=r,h.fromWorldVec=s,h.toComp=i,h.fromComp=c,h.sampleImage=l,h.sourceRectAtTime=o.sourceRectAtTime.bind(o),h._elem=o;var m=getDescriptor(d=TransformExpressionInterface(o.finalTransform.mProp),"anchorPoint");return Object.defineProperties(h,{hasParent:{get:function(){return o.hierarchy.length}},parent:{get:function(){return o.hierarchy[0].layerInterface}},rotation:getDescriptor(d,"rotation"),scale:getDescriptor(d,"scale"),position:getDescriptor(d,"position"),opacity:getDescriptor(d,"opacity"),anchorPoint:m,anchor_point:m,transform:{get:function(){return d}},active:{get:function(){return o.isInRange}}}),h.startTime=o.data.st,h.index=o.data.ind,h.source=o.data.refId,h.height=0===o.data.ty?o.data.h:100,h.width=0===o.data.ty?o.data.w:100,h.inPoint=o.data.ip/o.comp.globalData.frameRate,h.outPoint=o.data.op/o.comp.globalData.frameRate,h._name=o.data.nm,h.registerMaskInterface=function(t){h.mask=new MaskManagerInterface(t,o)},h.registerEffectsInterface=function(t){h.effect=t},h}}(),propertyGroupFactory=function(t,e){return function(i){return(i=void 0===i?1:i)<=0?t:e(i-1)}},PropertyInterface=function(t,e){var i={_name:t};return function(t){return(t=void 0===t?1:t)<=0?i:e(t-1)}},EffectsExpressionInterface=function(){function t(i,s,r,n){function a(t){for(var e=i.ef,s=0,r=e.length;s<r;){if(t===e[s].nm||t===e[s].mn||t===e[s].ix)return 5===e[s].ty?o[s]:o[s]();s+=1}throw new Error}var c,l=propertyGroupFactory(a,r),o=[],d=i.ef.length;for(c=0;c<d;c+=1)5===i.ef[c].ty?o.push(t(i.ef[c],s.effectElements[c],s.effectElements[c].propertyGroup,n)):o.push(e(s.effectElements[c],i.ef[c].ty,n,l));return"ADBE Color Control"===i.mn&&Object.defineProperty(a,"color",{get:function(){return o[0]()}}),Object.defineProperties(a,{numProperties:{get:function(){return i.np}},_name:{value:i.nm},propertyGroup:{value:l}}),a.enabled=0!==i.en,a.active=a.enabled,a}function e(t,e,i,s){var r=ExpressionPropertyInterface(t.p);return t.p.setGroupProperty&&t.p.setGroupProperty(PropertyInterface("",s)),function(){return 10===e?i.comp.compInterface(t.p.v):r()}}return{createEffectsInterface:function(e,i){if(e.effectsManager){var s,r=[],n=e.data.ef,a=e.effectsManager.effectElements.length;for(s=0;s<a;s+=1)r.push(t(n[s],e.effectsManager.effectElements[s],i,e));var c=e.data.ef||[],l=function(t){for(s=0,a=c.length;s<a;){if(t===c[s].nm||t===c[s].mn||t===c[s].ix)return r[s];s+=1}return null};return Object.defineProperty(l,"numProperties",{get:function(){return c.length}}),l}return null}}}(),ShapePathInterface=function(t,e,i){var s=e.sh;function r(t){return"Shape"===t||"shape"===t||"Path"===t||"path"===t||"ADBE Vector Shape"===t||2===t?r.path:null}var n=propertyGroupFactory(r,i);return s.setGroupProperty(PropertyInterface("Path",n)),Object.defineProperties(r,{path:{get:function(){return s.k&&s.getValue(),s}},shape:{get:function(){return s.k&&s.getValue(),s}},_name:{value:t.nm},ix:{value:t.ix},propertyIndex:{value:t.ix},mn:{value:t.mn},propertyGroup:{value:i}}),r},ShapeExpressionInterface=function(){function t(t,c,p){var v,f=[],u=t?t.length:0;for(v=0;v<u;v+=1)"gr"===t[v].ty?f.push(e(t[v],c[v],p)):"fl"===t[v].ty?f.push(i(t[v],c[v],p)):"st"===t[v].ty?f.push(n(t[v],c[v],p)):"tm"===t[v].ty?f.push(a(t[v],c[v],p)):"tr"===t[v].ty||("el"===t[v].ty?f.push(l(t[v],c[v],p)):"sr"===t[v].ty?f.push(o(t[v],c[v],p)):"sh"===t[v].ty?f.push(ShapePathInterface(t[v],c[v],p)):"rc"===t[v].ty?f.push(d(t[v],c[v],p)):"rd"===t[v].ty?f.push(h(t[v],c[v],p)):"rp"===t[v].ty?f.push(m(t[v],c[v],p)):"gf"===t[v].ty?f.push(s(t[v],c[v],p)):f.push(r(t[v],c[v])));return f}function e(e,i,s){var r=function(t){switch(t){case"ADBE Vectors Group":case"Contents":case 2:return r.content;default:return r.transform}};r.propertyGroup=propertyGroupFactory(r,s);var n=function(e,i,s){var r,n=function(t){for(var e=0,i=r.length;e<i;){if(r[e]._name===t||r[e].mn===t||r[e].propertyIndex===t||r[e].ix===t||r[e].ind===t)return r[e];e+=1}return"number"==typeof t?r[t-1]:null};n.propertyGroup=propertyGroupFactory(n,s),r=t(e.it,i.it,n.propertyGroup),n.numProperties=r.length;var a=c(e.it[e.it.length-1],i.it[i.it.length-1],n.propertyGroup);return n.transform=a,n.propertyIndex=e.cix,n._name=e.nm,n}(e,i,r.propertyGroup),a=c(e.it[e.it.length-1],i.it[i.it.length-1],r.propertyGroup);return r.content=n,r.transform=a,Object.defineProperty(r,"_name",{get:function(){return e.nm}}),r.numProperties=e.np,r.propertyIndex=e.ix,r.nm=e.nm,r.mn=e.mn,r}function i(t,e,i){function s(t){return"Color"===t||"color"===t?s.color:"Opacity"===t||"opacity"===t?s.opacity:null}return Object.defineProperties(s,{color:{get:ExpressionPropertyInterface(e.c)},opacity:{get:ExpressionPropertyInterface(e.o)},_name:{value:t.nm},mn:{value:t.mn}}),e.c.setGroupProperty(PropertyInterface("Color",i)),e.o.setGroupProperty(PropertyInterface("Opacity",i)),s}function s(t,e,i){function s(t){return"Start Point"===t||"start point"===t?s.startPoint:"End Point"===t||"end point"===t?s.endPoint:"Opacity"===t||"opacity"===t?s.opacity:null}return Object.defineProperties(s,{startPoint:{get:ExpressionPropertyInterface(e.s)},endPoint:{get:ExpressionPropertyInterface(e.e)},opacity:{get:ExpressionPropertyInterface(e.o)},type:{get:function(){return"a"}},_name:{value:t.nm},mn:{value:t.mn}}),e.s.setGroupProperty(PropertyInterface("Start Point",i)),e.e.setGroupProperty(PropertyInterface("End Point",i)),e.o.setGroupProperty(PropertyInterface("Opacity",i)),s}function r(){return function(){return null}}function n(t,e,i){var s,r=propertyGroupFactory(o,i),n=propertyGroupFactory(l,r);var a,c=t.d?t.d.length:0,l={};for(s=0;s<c;s+=1)a=s,Object.defineProperty(l,t.d[a].nm,{get:ExpressionPropertyInterface(e.d.dataProps[a].p)}),e.d.dataProps[s].p.setGroupProperty(n);function o(t){return"Color"===t||"color"===t?o.color:"Opacity"===t||"opacity"===t?o.opacity:"Stroke Width"===t||"stroke width"===t?o.strokeWidth:null}return Object.defineProperties(o,{color:{get:ExpressionPropertyInterface(e.c)},opacity:{get:ExpressionPropertyInterface(e.o)},strokeWidth:{get:ExpressionPropertyInterface(e.w)},dash:{get:function(){return l}},_name:{value:t.nm},mn:{value:t.mn}}),e.c.setGroupProperty(PropertyInterface("Color",r)),e.o.setGroupProperty(PropertyInterface("Opacity",r)),e.w.setGroupProperty(PropertyInterface("Stroke Width",r)),o}function a(t,e,i){function s(e){return e===t.e.ix||"End"===e||"end"===e?s.end:e===t.s.ix?s.start:e===t.o.ix?s.offset:null}var r=propertyGroupFactory(s,i);return s.propertyIndex=t.ix,e.s.setGroupProperty(PropertyInterface("Start",r)),e.e.setGroupProperty(PropertyInterface("End",r)),e.o.setGroupProperty(PropertyInterface("Offset",r)),s.propertyIndex=t.ix,s.propertyGroup=i,Object.defineProperties(s,{start:{get:ExpressionPropertyInterface(e.s)},end:{get:ExpressionPropertyInterface(e.e)},offset:{get:ExpressionPropertyInterface(e.o)},_name:{value:t.nm}}),s.mn=t.mn,s}function c(t,e,i){function s(e){return t.a.ix===e||"Anchor Point"===e?s.anchorPoint:t.o.ix===e||"Opacity"===e?s.opacity:t.p.ix===e||"Position"===e?s.position:t.r.ix===e||"Rotation"===e||"ADBE Vector Rotation"===e?s.rotation:t.s.ix===e||"Scale"===e?s.scale:t.sk&&t.sk.ix===e||"Skew"===e?s.skew:t.sa&&t.sa.ix===e||"Skew Axis"===e?s.skewAxis:null}var r=propertyGroupFactory(s,i);return e.transform.mProps.o.setGroupProperty(PropertyInterface("Opacity",r)),e.transform.mProps.p.setGroupProperty(PropertyInterface("Position",r)),e.transform.mProps.a.setGroupProperty(PropertyInterface("Anchor Point",r)),e.transform.mProps.s.setGroupProperty(PropertyInterface("Scale",r)),e.transform.mProps.r.setGroupProperty(PropertyInterface("Rotation",r)),e.transform.mProps.sk&&(e.transform.mProps.sk.setGroupProperty(PropertyInterface("Skew",r)),e.transform.mProps.sa.setGroupProperty(PropertyInterface("Skew Angle",r))),e.transform.op.setGroupProperty(PropertyInterface("Opacity",r)),Object.defineProperties(s,{opacity:{get:ExpressionPropertyInterface(e.transform.mProps.o)},position:{get:ExpressionPropertyInterface(e.transform.mProps.p)},anchorPoint:{get:ExpressionPropertyInterface(e.transform.mProps.a)},scale:{get:ExpressionPropertyInterface(e.transform.mProps.s)},rotation:{get:ExpressionPropertyInterface(e.transform.mProps.r)},skew:{get:ExpressionPropertyInterface(e.transform.mProps.sk)},skewAxis:{get:ExpressionPropertyInterface(e.transform.mProps.sa)},_name:{value:t.nm}}),s.ty="tr",s.mn=t.mn,s.propertyGroup=i,s}function l(t,e,i){function s(e){return t.p.ix===e?s.position:t.s.ix===e?s.size:null}var r=propertyGroupFactory(s,i);s.propertyIndex=t.ix;var n="tm"===e.sh.ty?e.sh.prop:e.sh;return n.s.setGroupProperty(PropertyInterface("Size",r)),n.p.setGroupProperty(PropertyInterface("Position",r)),Object.defineProperties(s,{size:{get:ExpressionPropertyInterface(n.s)},position:{get:ExpressionPropertyInterface(n.p)},_name:{value:t.nm}}),s.mn=t.mn,s}function o(t,e,i){function s(e){return t.p.ix===e?s.position:t.r.ix===e?s.rotation:t.pt.ix===e?s.points:t.or.ix===e||"ADBE Vector Star Outer Radius"===e?s.outerRadius:t.os.ix===e?s.outerRoundness:!t.ir||t.ir.ix!==e&&"ADBE Vector Star Inner Radius"!==e?t.is&&t.is.ix===e?s.innerRoundness:null:s.innerRadius}var r=propertyGroupFactory(s,i),n="tm"===e.sh.ty?e.sh.prop:e.sh;return s.propertyIndex=t.ix,n.or.setGroupProperty(PropertyInterface("Outer Radius",r)),n.os.setGroupProperty(PropertyInterface("Outer Roundness",r)),n.pt.setGroupProperty(PropertyInterface("Points",r)),n.p.setGroupProperty(PropertyInterface("Position",r)),n.r.setGroupProperty(PropertyInterface("Rotation",r)),t.ir&&(n.ir.setGroupProperty(PropertyInterface("Inner Radius",r)),n.is.setGroupProperty(PropertyInterface("Inner Roundness",r))),Object.defineProperties(s,{position:{get:ExpressionPropertyInterface(n.p)},rotation:{get:ExpressionPropertyInterface(n.r)},points:{get:ExpressionPropertyInterface(n.pt)},outerRadius:{get:ExpressionPropertyInterface(n.or)},outerRoundness:{get:ExpressionPropertyInterface(n.os)},innerRadius:{get:ExpressionPropertyInterface(n.ir)},innerRoundness:{get:ExpressionPropertyInterface(n.is)},_name:{value:t.nm}}),s.mn=t.mn,s}function d(t,e,i){function s(e){return t.p.ix===e?s.position:t.r.ix===e?s.roundness:t.s.ix===e||"Size"===e||"ADBE Vector Rect Size"===e?s.size:null}var r=propertyGroupFactory(s,i),n="tm"===e.sh.ty?e.sh.prop:e.sh;return s.propertyIndex=t.ix,n.p.setGroupProperty(PropertyInterface("Position",r)),n.s.setGroupProperty(PropertyInterface("Size",r)),n.r.setGroupProperty(PropertyInterface("Rotation",r)),Object.defineProperties(s,{position:{get:ExpressionPropertyInterface(n.p)},roundness:{get:ExpressionPropertyInterface(n.r)},size:{get:ExpressionPropertyInterface(n.s)},_name:{value:t.nm}}),s.mn=t.mn,s}function h(t,e,i){function s(e){return t.r.ix===e||"Round Corners 1"===e?s.radius:null}var r=propertyGroupFactory(s,i),n=e;return s.propertyIndex=t.ix,n.rd.setGroupProperty(PropertyInterface("Radius",r)),Object.defineProperties(s,{radius:{get:ExpressionPropertyInterface(n.rd)},_name:{value:t.nm}}),s.mn=t.mn,s}function m(t,e,i){function s(e){return t.c.ix===e||"Copies"===e?s.copies:t.o.ix===e||"Offset"===e?s.offset:null}var r=propertyGroupFactory(s,i),n=e;return s.propertyIndex=t.ix,n.c.setGroupProperty(PropertyInterface("Copies",r)),n.o.setGroupProperty(PropertyInterface("Offset",r)),Object.defineProperties(s,{copies:{get:ExpressionPropertyInterface(n.c)},offset:{get:ExpressionPropertyInterface(n.o)},_name:{value:t.nm}}),s.mn=t.mn,s}return function(e,i,s){var r;function n(t){if("number"==typeof t)return 0===(t=void 0===t?1:t)?s:r[t-1];for(var e=0,i=r.length;e<i;){if(r[e]._name===t)return r[e];e+=1}return null}return n.propertyGroup=propertyGroupFactory(n,(function(){return s})),r=t(e,i,n.propertyGroup),n.numProperties=r.length,n._name="Contents",n}}(),TextExpressionInterface=function(t){var e;function i(t){switch(t){case"ADBE Text Document":return i.sourceText;default:return null}}return Object.defineProperty(i,"sourceText",{get:function(){t.textProperty.getValue();var i=t.textProperty.currentData.t;return e&&i===e.value||((e=new String(i)).value=i||new String(i),Object.defineProperty(e,"style",{get:function(){return{fillColor:t.textProperty.currentData.fc}}})),e}}),i},FootageInterface=(dataInterfaceFactory=function(t){function e(t){return"Outline"===t?e.outlineInterface():null}return e._name="Outline",e.outlineInterface=function(t){var e="",i=t.getFootageData();function s(t){if(i[t])return e=t,"object"==typeof(i=i[t])?s:i;var r=t.indexOf(e);if(-1!==r){var n=parseInt(t.substr(r+e.length),10);return"object"==typeof(i=i[n])?s:i}return""}return function(){return e="",i=t.getFootageData(),s}}(t),e},function(t){function e(t){return"Data"===t?e.dataInterface:null}return e._name="Data",e.dataInterface=dataInterfaceFactory(t),e});var dataInterfaceFactory,interfaces={layer:LayerExpressionInterface,effects:EffectsExpressionInterface,comp:CompExpressionInterface,shape:ShapeExpressionInterface,text:TextExpressionInterface,footage:FootageInterface};function getInterface(t){return interfaces[t]||null}const expressionHelpers={searchExpressions:function(t,e,i){e.x&&(i.k=!0,i.x=!0,i.initiateExpression=ExpressionManager.initiateExpression,i.effectsSequence.push(i.initiateExpression(t,e,i).bind(i)))},getSpeedAtTime:function(t){var e=this.getValueAtTime(t),i=this.getValueAtTime(t+-.01),s=0;if(e.length){var r;for(r=0;r<e.length;r+=1)s+=Math.pow(i[r]-e[r],2);s=100*Math.sqrt(s)}else s=0;return s},getVelocityAtTime:function(t){if(void 0!==this.vel)return this.vel;var e,i,s=-.001,r=this.getValueAtTime(t),n=this.getValueAtTime(t+s);if(r.length)for(e=createTypedArray("float32",r.length),i=0;i<r.length;i+=1)e[i]=(n[i]-r[i])/s;else e=(n-r)/s;return e},getValueAtTime:function(t){return t*=this.elem.globalData.frameRate,(t-=this.offsetTime)!==this._cachingAtTime.lastFrame&&(this._cachingAtTime.lastIndex=this._cachingAtTime.lastFrame<t?this._cachingAtTime.lastIndex:0,this._cachingAtTime.value=this.interpolateValue(t,this._cachingAtTime),this._cachingAtTime.lastFrame=t),this._cachingAtTime.value},getStaticValueAtTime:function(){return this.pv},setGroupProperty:function(t){this.propertyGroup=t}};function addPropertyDecorator(){function t(t,e,i){if(!this.k||!this.keyframes)return this.pv;t=t?t.toLowerCase():"";var s,r,n,a,c,l=this.comp.renderedFrame,o=this.keyframes,d=o[o.length-1].t;if(l<=d)return this.pv;if(i?r=d-(s=e?Math.abs(d-this.elem.comp.globalData.frameRate*e):Math.max(0,d-this.elem.data.ip)):((!e||e>o.length-1)&&(e=o.length-1),s=d-(r=o[o.length-1-e].t)),"pingpong"===t){if(Math.floor((l-r)/s)%2!=0)return this.getValueAtTime((s-(l-r)%s+r)/this.comp.globalData.frameRate,0)}else{if("offset"===t){var h=this.getValueAtTime(r/this.comp.globalData.frameRate,0),m=this.getValueAtTime(d/this.comp.globalData.frameRate,0),p=this.getValueAtTime(((l-r)%s+r)/this.comp.globalData.frameRate,0),v=Math.floor((l-r)/s);if(this.pv.length){for(a=(c=new Array(h.length)).length,n=0;n<a;n+=1)c[n]=(m[n]-h[n])*v+p[n];return c}return(m-h)*v+p}if("continue"===t){var f=this.getValueAtTime(d/this.comp.globalData.frameRate,0),u=this.getValueAtTime((d-.001)/this.comp.globalData.frameRate,0);if(this.pv.length){for(a=(c=new Array(f.length)).length,n=0;n<a;n+=1)c[n]=f[n]+(f[n]-u[n])*((l-d)/this.comp.globalData.frameRate)/5e-4;return c}return f+(l-d)/.001*(f-u)}}return this.getValueAtTime(((l-r)%s+r)/this.comp.globalData.frameRate,0)}function e(t,e,i){if(!this.k)return this.pv;t=t?t.toLowerCase():"";var s,r,n,a,c,l=this.comp.renderedFrame,o=this.keyframes,d=o[0].t;if(l>=d)return this.pv;if(i?r=d+(s=e?Math.abs(this.elem.comp.globalData.frameRate*e):Math.max(0,this.elem.data.op-d)):((!e||e>o.length-1)&&(e=o.length-1),s=(r=o[e].t)-d),"pingpong"===t){if(Math.floor((d-l)/s)%2==0)return this.getValueAtTime(((d-l)%s+d)/this.comp.globalData.frameRate,0)}else{if("offset"===t){var h=this.getValueAtTime(d/this.comp.globalData.frameRate,0),m=this.getValueAtTime(r/this.comp.globalData.frameRate,0),p=this.getValueAtTime((s-(d-l)%s+d)/this.comp.globalData.frameRate,0),v=Math.floor((d-l)/s)+1;if(this.pv.length){for(a=(c=new Array(h.length)).length,n=0;n<a;n+=1)c[n]=p[n]-(m[n]-h[n])*v;return c}return p-(m-h)*v}if("continue"===t){var f=this.getValueAtTime(d/this.comp.globalData.frameRate,0),u=this.getValueAtTime((d+.001)/this.comp.globalData.frameRate,0);if(this.pv.length){for(a=(c=new Array(f.length)).length,n=0;n<a;n+=1)c[n]=f[n]+(f[n]-u[n])*(d-l)/.001;return c}return f+(f-u)*(d-l)/.001}}return this.getValueAtTime((s-((d-l)%s+d))/this.comp.globalData.frameRate,0)}function i(t,e){if(!this.k)return this.pv;if(t=.5*(t||.4),(e=Math.floor(e||5))<=1)return this.pv;var i,s,r=this.comp.renderedFrame/this.comp.globalData.frameRate,n=r-t,a=e>1?(r+t-n)/(e-1):1,c=0,l=0;for(i=this.pv.length?createTypedArray("float32",this.pv.length):0;c<e;){if(s=this.getValueAtTime(n+c*a),this.pv.length)for(l=0;l<this.pv.length;l+=1)i[l]+=s[l];else i+=s;c+=1}if(this.pv.length)for(l=0;l<this.pv.length;l+=1)i[l]/=e;else i/=e;return i}function s(t){this._transformCachingAtTime||(this._transformCachingAtTime={v:new Matrix});var e=this._transformCachingAtTime.v;if(e.cloneFromProps(this.pre.props),this.appliedTransformations<1){var i=this.a.getValueAtTime(t);e.translate(-i[0]*this.a.mult,-i[1]*this.a.mult,i[2]*this.a.mult)}if(this.appliedTransformations<2){var s=this.s.getValueAtTime(t);e.scale(s[0]*this.s.mult,s[1]*this.s.mult,s[2]*this.s.mult)}if(this.sk&&this.appliedTransformations<3){var r=this.sk.getValueAtTime(t),n=this.sa.getValueAtTime(t);e.skewFromAxis(-r*this.sk.mult,n*this.sa.mult)}if(this.r&&this.appliedTransformations<4){var a=this.r.getValueAtTime(t);e.rotate(-a*this.r.mult)}else if(!this.r&&this.appliedTransformations<4){var c=this.rz.getValueAtTime(t),l=this.ry.getValueAtTime(t),o=this.rx.getValueAtTime(t),d=this.or.getValueAtTime(t);e.rotateZ(-c*this.rz.mult).rotateY(l*this.ry.mult).rotateX(o*this.rx.mult).rotateZ(-d[2]*this.or.mult).rotateY(d[1]*this.or.mult).rotateX(d[0]*this.or.mult)}if(this.data.p&&this.data.p.s){var h=this.px.getValueAtTime(t),m=this.py.getValueAtTime(t);if(this.data.p.z){var p=this.pz.getValueAtTime(t);e.translate(h*this.px.mult,m*this.py.mult,-p*this.pz.mult)}else e.translate(h*this.px.mult,m*this.py.mult,0)}else{var v=this.p.getValueAtTime(t);e.translate(v[0]*this.p.mult,v[1]*this.p.mult,-v[2]*this.p.mult)}return e}function r(){return this.v.clone(new Matrix)}var n=TransformPropertyFactory.getTransformProperty;TransformPropertyFactory.getTransformProperty=function(t,e,i){var a=n(t,e,i);return a.dynamicProperties.length?a.getValueAtTime=s.bind(a):a.getValueAtTime=r.bind(a),a.setGroupProperty=expressionHelpers.setGroupProperty,a};var a=PropertyFactory.getProp;PropertyFactory.getProp=function(s,r,n,c,l){var o=a(s,r,n,c,l);o.kf?o.getValueAtTime=expressionHelpers.getValueAtTime.bind(o):o.getValueAtTime=expressionHelpers.getStaticValueAtTime.bind(o),o.setGroupProperty=expressionHelpers.setGroupProperty,o.loopOut=t,o.loopIn=e,o.smooth=i,o.getVelocityAtTime=expressionHelpers.getVelocityAtTime.bind(o),o.getSpeedAtTime=expressionHelpers.getSpeedAtTime.bind(o),o.numKeys=1===r.a?r.k.length:0,o.propertyIndex=r.ix;var d=0;return 0!==n&&(d=createTypedArray("float32",1===r.a?r.k[0].s.length:r.k.length)),o._cachingAtTime={lastFrame:initialDefaultFrame,lastIndex:0,value:d},expressionHelpers.searchExpressions(s,r,o),o.k&&l.addDynamicProperty(o),o};var c=ShapePropertyFactory.getConstructorFunction(),l=ShapePropertyFactory.getKeyframedConstructorFunction();function o(){}o.prototype={vertices:function(t,e){this.k&&this.getValue();var i,s=this.v;void 0!==e&&(s=this.getValueAtTime(e,0));var r=s._length,n=s[t],a=s.v,c=createSizedArray(r);for(i=0;i<r;i+=1)c[i]="i"===t||"o"===t?[n[i][0]-a[i][0],n[i][1]-a[i][1]]:[n[i][0],n[i][1]];return c},points:function(t){return this.vertices("v",t)},inTangents:function(t){return this.vertices("i",t)},outTangents:function(t){return this.vertices("o",t)},isClosed:function(){return this.v.c},pointOnPath:function(t,e){var i=this.v;void 0!==e&&(i=this.getValueAtTime(e,0)),this._segmentsLength||(this._segmentsLength=bez.getSegmentsLength(i));for(var s,r=this._segmentsLength,n=r.lengths,a=r.totalLength*t,c=0,l=n.length,o=0;c<l;){if(o+n[c].addedLength>a){var d=c,h=i.c&&c===l-1?0:c+1,m=(a-o)/n[c].addedLength;s=bez.getPointInSegment(i.v[d],i.v[h],i.o[d],i.i[h],m,n[c]);break}o+=n[c].addedLength,c+=1}return s||(s=i.c?[i.v[0][0],i.v[0][1]]:[i.v[i._length-1][0],i.v[i._length-1][1]]),s},vectorOnPath:function(t,e,i){1==t?t=this.v.c:0==t&&(t=.999);var s=this.pointOnPath(t,e),r=this.pointOnPath(t+.001,e),n=r[0]-s[0],a=r[1]-s[1],c=Math.sqrt(Math.pow(n,2)+Math.pow(a,2));return 0===c?[0,0]:"tangent"===i?[n/c,a/c]:[-a/c,n/c]},tangentOnPath:function(t,e){return this.vectorOnPath(t,e,"tangent")},normalOnPath:function(t,e){return this.vectorOnPath(t,e,"normal")},setGroupProperty:expressionHelpers.setGroupProperty,getValueAtTime:expressionHelpers.getStaticValueAtTime},extendPrototype([o],c),extendPrototype([o],l),l.prototype.getValueAtTime=function(t){return this._cachingAtTime||(this._cachingAtTime={shapeValue:shapePool.clone(this.pv),lastIndex:0,lastTime:initialDefaultFrame}),t*=this.elem.globalData.frameRate,(t-=this.offsetTime)!==this._cachingAtTime.lastTime&&(this._cachingAtTime.lastIndex=this._cachingAtTime.lastTime<t?this._caching.lastIndex:0,this._cachingAtTime.lastTime=t,this.interpolateShape(t,this._cachingAtTime.shapeValue,this._cachingAtTime)),this._cachingAtTime.shapeValue},l.prototype.initiateExpression=ExpressionManager.initiateExpression;var d=ShapePropertyFactory.getShapeProp;ShapePropertyFactory.getShapeProp=function(t,e,i,s,r){var n=d(t,e,i,s,r);return n.propertyIndex=e.ix,n.lock=!1,3===i?expressionHelpers.searchExpressions(t,e.pt,n):4===i&&expressionHelpers.searchExpressions(t,e.ks,n),n.k&&t.addDynamicProperty(n),n}}function initialize$1(){addPropertyDecorator()}function addDecorator(){TextProperty.prototype.getExpressionValue=function(t,e){var i=this.calculateExpression(e);if(t.t!==i){var s={};return this.copyData(s,t),s.t=i.toString(),s.__complete=!1,s}return t},TextProperty.prototype.searchProperty=function(){var t=this.searchKeyframes(),e=this.searchExpressions();return this.kf=t||e,this.kf},TextProperty.prototype.searchExpressions=function(){return this.data.d.x?(this.calculateExpression=ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this),this.addEffect(this.getExpressionValue.bind(this)),!0):null}}function initialize(){addDecorator()}function TransformEffect(){}function CVTransformEffect(t){this.init(t)}function addOrbitControl(t,e){return new OrbitControls(t,e)}function screenResize(t,e){t.aspect=window.innerWidth/window.innerHeight,e.setSize(window.innerWidth,window.innerHeight),t.updateProjectionMatrix()}TransformEffect.prototype.init=function(t){this.effectsManager=t,this.type=effectTypes.TRANSFORM_EFFECT,this.matrix=new Matrix,this.opacity=-1,this._mdf=!1,this._opMdf=!1},TransformEffect.prototype.renderFrame=function(t){if(this._opMdf=!1,this._mdf=!1,t||this.effectsManager._mdf){var e=this.effectsManager.effectElements,i=e[0].p.v,s=e[1].p.v,r=1===e[2].p.v,n=e[3].p.v,a=r?n:e[4].p.v,c=e[5].p.v,l=e[6].p.v,o=e[7].p.v;this.matrix.reset(),this.matrix.translate(-i[0],-i[1],i[2]),this.matrix.scale(.01*a,.01*n,1),this.matrix.rotate(-o*degToRads),this.matrix.skewFromAxis(-c*degToRads,(l+90)*degToRads),this.matrix.translate(s[0],s[1],0),this._mdf=!0,this.opacity!==e[8].p.v&&(this.opacity=e[8].p.v,this._opMdf=!0)}},extendPrototype([TransformEffect],CVTransformEffect),setExpressionsPlugin(Expressions),setExpressionInterfaces(getInterface),initialize$1(),initialize(),registerEffect(35,CVTransformEffect);var NormalIcon="./assets/idc_status_normal.59c5e462.png",WarningIcon="./assets/idc_status_warning.0518e9ea.png";const IDC_ICON_MAP={normal:{icon:NormalIcon,color:"#3AFDFF",width:92,height:120},warning:{icon:WarningIcon,color:"#FD7236",width:100,height:120}};function createIdcIcon(t,e,i){const s=t?IDC_ICON_MAP.warning:IDC_ICON_MAP.normal,r=document.createElement("div"),n=s.height/s.width,a=document.createElement("img");a.src=s.icon,a.width=28,a.height=28*n,a.style.cssText="\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    ",r.appendChild(a),r.style.cssText=`\n        width: 28px;\n        height:  ${28*n}px;\n        z-index: 9;\n        cursor: pointer;\n        position: relative;\n    `,r.setAttribute("data-id",e);const c=document.createElement("div");c.style.cssText=`\n        width: max-content;\n        padding: 0 12px;\n        box-sizing: border-box;\n        height: 28px;\n        line-height: 28px;\n        border-radius: 2px;\n        text-align: center;\n        background: ${s.color};\n        font-family: AlimamaShuHeiTi;\n        font-size: 16px;\n        color: #001A2A;\n        position: absolute;\n        left: 50%;\n        transform: translate(-50%, 0);\n        top: -90%;\n    `,c.textContent=e,r.appendChild(c),r.addEventListener("click",(t=>{i(t.currentTarget.getAttribute("data-id"))}));const l=new CSS2DObject(r);return l.changeTextContent=t=>{c.textContent=t,r.setAttribute("data-id",t)},l.changeIdcStatus=t=>{const e=t?IDC_ICON_MAP.warning:IDC_ICON_MAP.normal;a.style.src=e.icon,c.style.background=e.color},l.addEntranceAnimate=()=>{},l.addExitAnimate=()=>{},l}const BUS_EVENT={AUTO_CHECK_IDC:"auto-check-idc",CLICK_IDC:"click-idc",BACK_CHINA_MAP:"back-china-map",CHANGE_RACK:"change-rack"};class Bus{constructor(){this.events=new Map}trigger(t,e){let i=this.events.get(t);null==i||i(e)}listen(t,e){this.events.get(t)||this.events.set(t,e)}}const bus=new Bus;class AutoCheckIDC{constructor(t){this.positionMap=t.positionMap,this.positionArr=[...this.positionMap.values()].map((t=>t.position)),this.positionKeys=[...this.positionMap.keys()],this.timeInterval=t.timeInterval,bus.listen(BUS_EVENT.CLICK_IDC,(()=>{this.clear()}))}start(t){this.timer=setInterval(this.check.bind(this,t),this.timeInterval)}check(t){var e;const i=this.positionKeys.slice(-1)[0],s=this.positionArr.shift(),r=this.positionKeys.shift(),n=null==(e=this.positionMap.get(r))?void 0:e.idc.isWarning;null==t||t(r,s,i,n),this.positionArr.push(s),this.positionKeys.push(r)}pause(){}clear(){clearInterval(this.timer),this.timer=null}}function unMounted(t){var e,i,s,r,n,a,c,l,o;t&&(null==(i=null==(e=t.renderer)?void 0:e.domElement)||i.remove(),null==(s=t.stats)||s.domElement.remove(),null==(r=t.gui)||r.domElement.remove(),null==(n=document.getElementById("rack-label-wrap"))||n.remove(),null==(a=t.scene)||a.traverse((t=>{t.material&&(Array.isArray(t.material)?t.material.forEach((t=>null==t?void 0:t.dispose())):t.material.dispose()),t.geometry&&t.geometry.dispose()})),null==(c=t.renderer)||c.forceContextLoss(),null==(l=t.renderer)||l.dispose(),null==(o=t.scene)||o.clear(),t.scene=null,t.camera=null,t.controls=null,t.renderer.domElement=null,t.renderer=null)}var Point="data:application/json;base64,eyJ2IjoiNS45LjIiLCJmciI6MzAsImlwIjowLCJvcCI6OTAsInciOjc1LCJoIjo3NSwibm0iOiLlkIjmiJAgMiIsImRkZCI6MCwiYXNzZXRzIjpbXSwibGF5ZXJzIjpbeyJkZGQiOjAsImluZCI6MSwidHkiOjQsIm5tIjoi5b2i54q25Zu+5bGCIDYiLCJzciI6MSwia3MiOnsibyI6eyJhIjowLCJrIjoxMDAsIml4IjoxMX0sInIiOnsiYSI6MCwiayI6MCwiaXgiOjEwfSwicCI6eyJhIjowLCJrIjpbMzcuNSwzNy41LDBdLCJpeCI6MiwibCI6Mn0sImEiOnsiYSI6MCwiayI6Wy0zLjk0OCwtMi45NDgsMF0sIml4IjoxLCJsIjoyfSwicyI6eyJhIjowLCJrIjpbODAsODAsMTAwXSwiaXgiOjYsImwiOjJ9fSwiYW8iOjAsInNoYXBlcyI6W3sidHkiOiJnciIsIml0IjpbeyJkIjoxLCJ0eSI6ImVsIiwicyI6eyJhIjowLCJrIjpbOC4xMDQsOC4xMDRdLCJpeCI6Mn0sInAiOnsiYSI6MCwiayI6WzAsMF0sIml4IjozfSwibm0iOiLmpK3lnIbot6/lvoQgMSIsIm1uIjoiQURCRSBWZWN0b3IgU2hhcGUgLSBFbGxpcHNlIiwiaGQiOmZhbHNlfSx7InR5IjoiZmwiLCJjIjp7ImEiOjAsImsiOlswLjA1MjI1MTgxNTc5NiwxLDAuNTY3ODUxMTY3NTY3LDFdLCJpeCI6NH0sIm8iOnsiYSI6MCwiayI6MTAwLCJpeCI6NX0sInIiOjEsImJtIjowLCJubSI6IuWhq+WFhSAxIiwibW4iOiJBREJFIFZlY3RvciBHcmFwaGljIC0gRmlsbCIsImhkIjpmYWxzZX0seyJ0eSI6InRyIiwicCI6eyJhIjowLCJrIjpbLTMuOTQ4LC0yLjk0OF0sIml4IjoyfSwiYSI6eyJhIjowLCJrIjpbMCwwXSwiaXgiOjF9LCJzIjp7ImEiOjAsImsiOlsxMDAsMTAwXSwiaXgiOjN9LCJyIjp7ImEiOjAsImsiOjAsIml4Ijo2fSwibyI6eyJhIjowLCJrIjoxMDAsIml4Ijo3fSwic2siOnsiYSI6MCwiayI6MCwiaXgiOjR9LCJzYSI6eyJhIjowLCJrIjowLCJpeCI6NX0sIm5tIjoi5Y+Y5o2iIn1dLCJubSI6IuakreWchiAxIiwibnAiOjMsImNpeCI6MiwiYm0iOjAsIml4IjoxLCJtbiI6IkFEQkUgVmVjdG9yIEdyb3VwIiwiaGQiOmZhbHNlfV0sImlwIjowLCJvcCI6OTAsInN0IjowLCJibSI6MH0seyJkZGQiOjAsImluZCI6MiwidHkiOjQsIm5tIjoi5b2i54q25Zu+5bGCIDUiLCJzciI6MSwia3MiOnsibyI6eyJhIjoxLCJrIjpbeyJpIjp7IngiOlswLjRdLCJ5IjpbMV19LCJvIjp7IngiOlswLjZdLCJ5IjpbMF19LCJ0Ijo0MywicyI6WzEwMF19LHsidCI6NzIsInMiOlswXX1dLCJpeCI6MTF9LCJyIjp7ImEiOjAsImsiOjAsIml4IjoxMH0sInAiOnsiYSI6MCwiayI6WzM3LjUsMzcuNSwwXSwiaXgiOjIsImwiOjJ9LCJhIjp7ImEiOjAsImsiOlstMC40NDEsLTAuOTQxLDBdLCJpeCI6MSwibCI6Mn0sInMiOnsiYSI6MSwiayI6W3siaSI6eyJ4IjpbMC42MDMsMC42MDMsMC42MDNdLCJ5IjpbMSwxLDFdfSwibyI6eyJ4IjpbMC42NTEsMC42NTEsMC42NTFdLCJ5IjpbMCwwLDBdfSwidCI6MTIsInMiOlswLDAsMTAwXX0seyJ0Ijo3MiwicyI6WzM3LDM3LDEwMF19XSwiaXgiOjYsImwiOjJ9fSwiYW8iOjAsInNoYXBlcyI6W3sidHkiOiJnciIsIml0IjpbeyJkIjoxLCJ0eSI6ImVsIiwicyI6eyJhIjowLCJrIjpbMTk0LjExNywxOTQuMTE3XSwiaXgiOjJ9LCJwIjp7ImEiOjAsImsiOlswLDBdLCJpeCI6M30sIm5tIjoi5qSt5ZyG6Lev5b6EIDEiLCJtbiI6IkFEQkUgVmVjdG9yIFNoYXBlIC0gRWxsaXBzZSIsImhkIjpmYWxzZX0seyJ0eSI6ImZsIiwiYyI6eyJhIjowLCJrIjpbMCwxLDAuNjI2Mzc4NjU1NDM0LDFdLCJpeCI6NH0sIm8iOnsiYSI6MCwiayI6MTQsIml4Ijo1fSwiciI6MSwiYm0iOjAsIm5tIjoi5aGr5YWFIDEiLCJtbiI6IkFEQkUgVmVjdG9yIEdyYXBoaWMgLSBGaWxsIiwiaGQiOmZhbHNlfSx7InR5IjoidHIiLCJwIjp7ImEiOjAsImsiOlstMC40NDEsLTAuOTQxXSwiaXgiOjJ9LCJhIjp7ImEiOjAsImsiOlswLDBdLCJpeCI6MX0sInMiOnsiYSI6MCwiayI6WzEwMCwxMDBdLCJpeCI6M30sInIiOnsiYSI6MCwiayI6MCwiaXgiOjZ9LCJvIjp7ImEiOjAsImsiOjEwMCwiaXgiOjd9LCJzayI6eyJhIjowLCJrIjowLCJpeCI6NH0sInNhIjp7ImEiOjAsImsiOjAsIml4Ijo1fSwibm0iOiLlj5jmjaIifV0sIm5tIjoi5qSt5ZyGIDEiLCJucCI6MywiY2l4IjoyLCJibSI6MCwiaXgiOjEsIm1uIjoiQURCRSBWZWN0b3IgR3JvdXAiLCJoZCI6ZmFsc2V9XSwiaXAiOjEyLCJvcCI6MTAyLCJzdCI6MTIsImJtIjowfSx7ImRkZCI6MCwiaW5kIjozLCJ0eSI6NCwibm0iOiLlvaLnirblm77lsYIgNCIsInNyIjoxLCJrcyI6eyJvIjp7ImEiOjEsImsiOlt7ImkiOnsieCI6WzAuNF0sInkiOlsxXX0sIm8iOnsieCI6WzAuNl0sInkiOlswXX0sInQiOjMxLCJzIjpbMTAwXX0seyJ0Ijo2MCwicyI6WzBdfV0sIml4IjoxMX0sInIiOnsiYSI6MCwiayI6MCwiaXgiOjEwfSwicCI6eyJhIjowLCJrIjpbMzcuNSwzNy41LDBdLCJpeCI6MiwibCI6Mn0sImEiOnsiYSI6MCwiayI6Wy0wLjQ0MSwtMC45NDEsMF0sIml4IjoxLCJsIjoyfSwicyI6eyJhIjoxLCJrIjpbeyJpIjp7IngiOlswLjQsMC40LDAuNF0sInkiOlsxLDEsMV19LCJvIjp7IngiOlswLjYsMC42LDAuNl0sInkiOlswLDAsMF19LCJ0IjowLCJzIjpbMCwwLDEwMF19LHsidCI6NjAsInMiOlszNywzNywxMDBdfV0sIml4Ijo2LCJsIjoyfX0sImFvIjowLCJzaGFwZXMiOlt7InR5IjoiZ3IiLCJpdCI6W3siZCI6MSwidHkiOiJlbCIsInMiOnsiYSI6MCwiayI6WzE5NC4xMTcsMTk0LjExN10sIml4IjoyfSwicCI6eyJhIjowLCJrIjpbMCwwXSwiaXgiOjN9LCJubSI6IuakreWchui3r+W+hCAxIiwibW4iOiJBREJFIFZlY3RvciBTaGFwZSAtIEVsbGlwc2UiLCJoZCI6ZmFsc2V9LHsidHkiOiJmbCIsImMiOnsiYSI6MCwiayI6WzAsMSwwLjYyNjM3ODY1NTQzNCwxXSwiaXgiOjR9LCJvIjp7ImEiOjAsImsiOjE0LCJpeCI6NX0sInIiOjEsImJtIjowLCJubSI6IuWhq+WFhSAxIiwibW4iOiJBREJFIFZlY3RvciBHcmFwaGljIC0gRmlsbCIsImhkIjpmYWxzZX0seyJ0eSI6InRyIiwicCI6eyJhIjowLCJrIjpbLTAuNDQxLC0wLjk0MV0sIml4IjoyfSwiYSI6eyJhIjowLCJrIjpbMCwwXSwiaXgiOjF9LCJzIjp7ImEiOjAsImsiOlsxMDAsMTAwXSwiaXgiOjN9LCJyIjp7ImEiOjAsImsiOjAsIml4Ijo2fSwibyI6eyJhIjowLCJrIjoxMDAsIml4Ijo3fSwic2siOnsiYSI6MCwiayI6MCwiaXgiOjR9LCJzYSI6eyJhIjowLCJrIjowLCJpeCI6NX0sIm5tIjoi5Y+Y5o2iIn1dLCJubSI6IuakreWchiAxIiwibnAiOjMsImNpeCI6MiwiYm0iOjAsIml4IjoxLCJtbiI6IkFEQkUgVmVjdG9yIEdyb3VwIiwiaGQiOmZhbHNlfV0sImlwIjowLCJvcCI6OTAsInN0IjowLCJibSI6MH1dLCJtYXJrZXJzIjpbXX0=",Normal="./assets/china_map_bg.e4f16203.png",Big="./assets/china_map_bg_big.d57fd9a4.png";const OFFSET={x:-1,y:1,z:3.9},WIDTH=window.innerWidth,HEIGHT=window.innerHeight;class ChinaMap{constructor(t,e){this.idcPosMap=new Map,this.lottieMap=new Map,this.reqID=null,this.stats=null,this.controls=null,this.$el=null,this.idcIconRenderer=null,this.renderer=null,this.autoCheckIdc=null,this.onClickMap=null,this.onResize=()=>{var t;screenResize(this.camera,this.renderer),null==(t=this.idcIconRenderer)||t.setSize(WIDTH,HEIGHT)},this.$el=t,this.onClickMap=e}createBg(){const t=new TextureLoader,e=window.devicePixelRatio>=2?Big:Normal;t.load(e,(t=>{this.scene.background=t,window.devicePixelRatio>=2&&(this.scene.position.y=.2,this.scene.position.x=-.5)}))}async init(t){var e;Cache.enabled=!0,this.camera=new PerspectiveCamera(45,WIDTH/HEIGHT,1,5e3),this.camera.position.set(5.998600774902864,-40.701576918746085,112.93681283361553),this.scene=new Scene,this.createBg(),this.idcIconRenderer=new CSS2DRenderer;const i=mercator().center([104,37.5]).scale(100).translate([0,0]);t.forEach((t=>{try{const[e,s]=i(t.center),r=new Vector3(...[e+OFFSET.x,-s+OFFSET.y],0+OFFSET.z);this.idcPosMap.set(t.name,{position:r,idc:t})}catch(e){console.log("idc",t)}})),this.loadLottieIcon(),this.idcIconRendererInit(),this.startAutoCheck(),this.renderer=new WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(WIDTH,HEIGHT),null==(e=this.$el)||e.appendChild(this.renderer.domElement),this.controls=addOrbitControl(this.camera,this.renderer.domElement),this.render(),window.addEventListener("resize",this.onResize)}loadMapData(){const t=new FileLoader;return t.setResponseType("json"),new Promise(((e,i)=>{t.load("./observable_platform/geo/china_map.json",(t=>{const i=JSON.parse(JSON.stringify(t));e(i)}),void 0,i)}))}generateGeometry(t){this.mapObject=new Object3D;const e=mercator().center([104,37.5]).scale(100).translate([0,0]);t.features.forEach((t=>{const i=new Object3D;if(t.geometry.coordinates.forEach((t=>{t.forEach((t=>{const s=new LineBasicMaterial({transparent:!0,opacity:1}),r=[],n=new Shape;for(let i=0;i<t.length;i++){const[s,a]=e(t[i]);0===i&&n.moveTo(s,-a),n.lineTo(s,-a),r.push(new Vector3(s,-a,0))}const a=(new BufferGeometry).setFromPoints(r),c=new Line(a,s);i.add(c)}))})),i.properties=t.properties,t.properties.centroid){const[s,r]=e(t.properties.centroid);i.properties._centroid=[s,r]}this.mapObject.add(i)})),this.mapObject.position.x=OFFSET.x,this.mapObject.position.y=OFFSET.y,this.mapObject.position.z=OFFSET.z}async genLottie(t,{position:e,idc:i}){const s=new LottieLoader;s.setQuality(3);i.isWarning;const r=Point;s.load(r,(i=>{var s,r,n;const a=Math.random(),c=a<.5&&a>.3?a:.2;null==(r=null==(s=null==i?void 0:i.animation)?void 0:s.setSpeed)||r.call(s,c);const l=new CircleGeometry(4,8),o=new MeshBasicMaterial({transparent:!0,map:i,depthWrite:!1}),d=new Mesh(l,o);d.position.set(e.x,e.y,e.z),d.name=this.getIdcMapKey(t),null==(n=this.scene)||n.add(d),this.lottieMap.set(this.getIdcMapKey(t),d)}))}loadLottieIcon(){const t=this.idcPosMap.keys();for(const e of t){const t=this.idcPosMap.get(e);this.genLottie(e,t)}}createIdcToolTip(t,e){var i,s,r,n;return this.tooltipLabel?(null==(s=null==(i=this.tooltipLabel)?void 0:i.changeTextContent)||s.call(i,t),null==(n=null==(r=this.tooltipLabel)?void 0:r.changeIdcStatus)||n.call(r,e)):this.tooltipLabel=createIdcIcon(e,t,this.onClickMap),this.tooltipLabel.name=t,this.tooltipLabel}startAutoCheck(){let t;function e(t,e){t.map=null!=e?e:null,t.opacity=e?1:0,t.transparent=!0,t.needsUpdate=!0}this.autoCheckIdc=new AutoCheckIDC({positionMap:this.idcPosMap,timeInterval:3e3}),this.autoCheckIdc.start(((i,s,r,n)=>{bus.trigger(BUS_EVENT.AUTO_CHECK_IDC,i);const a=this.lottieMap.get(this.getIdcMapKey(r));t&&e(a.material,t);const c=this.lottieMap.get(this.getIdcMapKey(i)),l=c.material;t=l.map,e(l);const o=this.createIdcToolTip(i,n);c.add(o)}))}clearAutoCheck(){var t;null==(t=this.autoCheckIdc)||t.clear()}getIdcMapKey(t){return`${t}-lottie`}idcIconRendererInit(){var t,e;this.idcIconRenderer&&(null==(t=this.idcIconRenderer)||t.setSize(WIDTH,HEIGHT),this.idcIconRenderer.domElement.style.position="absolute",this.idcIconRenderer.domElement.style.top="52px",document.body.appendChild(null==(e=this.idcIconRenderer)?void 0:e.domElement))}render(){var t,e,i,s;null==(t=this.stats)||t.update(),null==(e=this.controls)||e.update(),null==(i=this.renderer)||i.render(this.scene,this.camera),null==(s=this.idcIconRenderer)||s.render(this.scene,this.camera),this.reqID=requestAnimationFrame(this.render.bind(this))}unMount(){var t,e;window.removeEventListener("resize",this.onResize),unMounted(this),null==(t=this.tooltipLabel)||t.element.remove(),null==(e=this.idcIconRenderer)||e.domElement.remove(),this.reqID&&(cancelAnimationFrame(this.reqID),this.reqID=null)}}var cityGeo=[{name:"澳门特别行政区",center:[113.543028,22.186835],level:"province"},{name:"北京市",center:[116.407394,39.904211],level:"province",districts:[{name:"北京城区",center:[116.407394,39.904211],level:"city",districts:[{name:"昌平区",center:[116.231254,40.220804],level:"district",districts:[]},{name:"朝阳区",center:[116.443205,39.921506],level:"district",districts:[]},{name:"大兴区",center:[116.341483,39.726917],level:"district",districts:[]},{name:"东城区",center:[116.41649,39.928341],level:"district",districts:[]},{name:"房山区",center:[116.143486,39.748823],level:"district",districts:[]},{name:"丰台区",center:[116.287039,39.858421],level:"district",districts:[]},{name:"海淀区",center:[116.298262,39.95993],level:"district",districts:[]},{name:"怀柔区",center:[116.631931,40.316053],level:"district",districts:[]},{name:"门头沟区",center:[116.101719,39.940338],level:"district",districts:[]},{name:"密云区",center:[116.843047,40.376894],level:"district",districts:[]},{name:"平谷区",center:[117.121351,40.140595],level:"district",districts:[]},{name:"石景山区",center:[116.222933,39.906611],level:"district",districts:[]},{name:"顺义区",center:[116.654642,40.130211],level:"district",districts:[]},{name:"通州区",center:[116.656434,39.909946],level:"district",districts:[]},{name:"西城区",center:[116.365873,39.912235],level:"district",districts:[]},{name:"延庆区",center:[115.974981,40.456591],level:"district",districts:[]}]}]},{name:"重庆市",center:[106.551643,29.562849],level:"province",districts:[{name:"重庆城区",center:[106.551643,29.562849],level:"city",districts:[{name:"巴南区",center:[106.540256,29.402408],level:"district",districts:[]},{name:"北碚区",center:[106.395612,29.805107],level:"district",districts:[]},{name:"璧山区",center:[106.227305,29.592024],level:"district",districts:[]},{name:"大渡口区",center:[106.482346,29.484527],level:"district",districts:[]},{name:"大足区",center:[105.721733,29.707032],level:"district",districts:[]},{name:"涪陵区",center:[107.38977,29.703022],level:"district",districts:[]},{name:"合川区",center:[106.27613,29.972084],level:"district",districts:[]},{name:"江北区",center:[106.574271,29.606703],level:"district",districts:[]},{name:"江津区",center:[106.259281,29.290069],level:"district",districts:[]},{name:"九龙坡区",center:[106.510676,29.502272],level:"district",districts:[]},{name:"开州区",center:[108.393135,31.160711],level:"district",districts:[]},{name:"南岸区",center:[106.644447,29.50126],level:"district",districts:[]},{name:"南川区",center:[107.099266,29.15789],level:"district",districts:[]},{name:"綦江区",center:[106.651361,29.028066],level:"district",districts:[]},{name:"黔江区",center:[108.770677,29.533609],level:"district",districts:[]},{name:"荣昌区",center:[105.594623,29.405002],level:"district",districts:[]},{name:"沙坪坝区",center:[106.456878,29.541144],level:"district",districts:[]},{name:"铜梁区",center:[106.056404,29.844811],level:"district",districts:[]},{name:"潼南区",center:[105.840431,30.190992],level:"district",districts:[]},{name:"万州区",center:[108.408661,30.807667],level:"district",districts:[]},{name:"永川区",center:[105.927001,29.356311],level:"district",districts:[]},{name:"渝北区",center:[106.631187,29.718142],level:"district",districts:[]},{name:"渝中区",center:[106.568896,29.552736],level:"district",districts:[]},{name:"长寿区",center:[107.080734,29.857912],level:"district",districts:[]}]},{name:"重庆郊县",center:[108.165537,29.293902],level:"city",districts:[{name:"城口县",center:[108.664214,31.947633],level:"district",districts:[]},{name:"垫江县",center:[107.33339,30.327716],level:"district",districts:[]},{name:"丰都县",center:[107.730894,29.8635],level:"district",districts:[]},{name:"奉节县",center:[109.400403,31.018363],level:"district",districts:[]},{name:"梁平区",center:[107.769568,30.654233],level:"district",districts:[]},{name:"彭水苗族土家族自治县",center:[108.165537,29.293902],level:"district",districts:[]},{name:"石柱土家族自治县",center:[108.114069,29.999285],level:"district",districts:[]},{name:"巫山县",center:[109.879153,31.074834],level:"district",districts:[]},{name:"巫溪县",center:[109.570062,31.398604],level:"district",districts:[]},{name:"武隆区",center:[107.760025,29.325601],level:"district",districts:[]},{name:"秀山土家族苗族自治县",center:[109.007094,28.447997],level:"district",districts:[]},{name:"酉阳土家族苗族自治县",center:[108.767747,28.841244],level:"district",districts:[]},{name:"云阳县",center:[108.697324,30.930612],level:"district",districts:[]},{name:"忠县",center:[108.039002,30.299559],level:"district",districts:[]}]}]},{name:"福建省",center:[119.295143,26.100779],level:"province",districts:[{name:"福州市",center:[119.296389,26.074268],level:"city",districts:[{name:"仓山区",center:[119.273545,26.046743],level:"district",districts:[]},{name:"福清市",center:[119.384201,25.72071],level:"district",districts:[]},{name:"鼓楼区",center:[119.303917,26.081983],level:"district",districts:[]},{name:"晋安区",center:[119.328521,26.082107],level:"district",districts:[]},{name:"连江县",center:[119.539704,26.197364],level:"district",districts:[]},{name:"罗源县",center:[119.549776,26.489558],level:"district",districts:[]},{name:"马尾区",center:[119.455588,25.9895],level:"district",districts:[]},{name:"闽侯县",center:[119.131724,26.150047],level:"district",districts:[]},{name:"闽清县",center:[118.863361,26.221197],level:"district",districts:[]},{name:"平潭县",center:[119.790168,25.49872],level:"district",districts:[]},{name:"台江区",center:[119.314041,26.052843],level:"district",districts:[]},{name:"永泰县",center:[118.932592,25.866694],level:"district",districts:[]},{name:"长乐区",center:[119.523266,25.962888],level:"district",districts:[]}]},{name:"龙岩市",center:[117.017295,25.075119],level:"city",districts:[{name:"连城县",center:[116.754472,25.710538],level:"district",districts:[]},{name:"上杭县",center:[116.420098,25.049518],level:"district",districts:[]},{name:"武平县",center:[116.100414,25.095386],level:"district",districts:[]},{name:"新罗区",center:[117.037155,25.098312],level:"district",districts:[]},{name:"永定区",center:[116.732091,24.723961],level:"district",districts:[]},{name:"漳平市",center:[117.419998,25.290184],level:"district",districts:[]},{name:"长汀县",center:[116.357581,25.833531],level:"district",districts:[]}]},{name:"南平市",center:[118.17771,26.641774],level:"city",districts:[{name:"光泽县",center:[117.334106,27.540987],level:"district",districts:[]},{name:"建瓯市",center:[118.304966,27.022774],level:"district",districts:[]},{name:"建阳区",center:[118.120464,27.331876],level:"district",districts:[]},{name:"浦城县",center:[118.541256,27.917263],level:"district",districts:[]},{name:"邵武市",center:[117.492533,27.340326],level:"district",districts:[]},{name:"顺昌县",center:[117.810357,26.793288],level:"district",districts:[]},{name:"松溪县",center:[118.785468,27.526232],level:"district",districts:[]},{name:"武夷山市",center:[118.035309,27.756647],level:"district",districts:[]},{name:"延平区",center:[118.182036,26.637438],level:"district",districts:[]},{name:"政和县",center:[118.857642,27.366104],level:"district",districts:[]}]},{name:"宁德市",center:[119.547932,26.665617],level:"city",districts:[{name:"福鼎市",center:[120.216977,27.324479],level:"district",districts:[]},{name:"福安市",center:[119.64785,27.08834],level:"district",districts:[]},{name:"古田县",center:[118.746284,26.577837],level:"district",districts:[]},{name:"蕉城区",center:[119.526299,26.66061],level:"district",districts:[]},{name:"屏南县",center:[118.985895,26.908276],level:"district",districts:[]},{name:"寿宁县",center:[119.514986,27.454479],level:"district",districts:[]},{name:"霞浦县",center:[120.005146,26.885703],level:"district",districts:[]},{name:"柘荣县",center:[119.900609,27.233933],level:"district",districts:[]},{name:"周宁县",center:[119.339025,27.104591],level:"district",districts:[]}]},{name:"厦门市",center:[118.089204,24.479664],level:"city",districts:[{name:"海沧区",center:[118.032984,24.484685],level:"district",districts:[]},{name:"湖里区",center:[118.146768,24.512904],level:"district",districts:[]},{name:"集美区",center:[118.097337,24.575969],level:"district",districts:[]},{name:"思明区",center:[118.082649,24.445484],level:"district",districts:[]},{name:"同安区",center:[118.152041,24.723234],level:"district",districts:[]},{name:"翔安区",center:[118.248034,24.618543],level:"district",districts:[]}]},{name:"莆田市",center:[119.007777,25.454084],level:"city",districts:[{name:"城厢区",center:[118.993884,25.419319],level:"district",districts:[]},{name:"涵江区",center:[119.116289,25.45872],level:"district",districts:[]},{name:"荔城区",center:[119.015061,25.431941],level:"district",districts:[]},{name:"仙游县",center:[118.691637,25.362093],level:"district",districts:[]},{name:"秀屿区",center:[119.105494,25.31836],level:"district",districts:[]}]},{name:"三明市",center:[117.638678,26.263406],level:"city",districts:[{name:"大田县",center:[117.847115,25.692699],level:"district",districts:[]},{name:"建宁县",center:[116.848443,26.833588],level:"district",districts:[]},{name:"将乐县",center:[117.471372,26.728952],level:"district",districts:[]},{name:"梅列区",center:[117.645855,26.271711],level:"district",districts:[]},{name:"明溪县",center:[117.202226,26.355856],level:"district",districts:[]},{name:"宁化县",center:[116.654365,26.261754],level:"district",districts:[]},{name:"清流县",center:[116.816909,26.177796],level:"district",districts:[]},{name:"三元区",center:[117.608044,26.234019],level:"district",districts:[]},{name:"沙县",center:[117.792396,26.397199],level:"district",districts:[]},{name:"泰宁县",center:[117.17574,26.900259],level:"district",districts:[]},{name:"永安市",center:[117.365052,25.941937],level:"district",districts:[]},{name:"尤溪县",center:[118.190467,26.170171],level:"district",districts:[]}]},{name:"泉州市",center:[118.675676,24.874132],level:"city",districts:[{name:"安溪县",center:[118.186288,25.055954],level:"district",districts:[]},{name:"德化县",center:[118.241094,25.491493],level:"district",districts:[]},{name:"丰泽区",center:[118.613172,24.891173],level:"district",districts:[]},{name:"惠安县",center:[118.796607,25.030801],level:"district",districts:[]},{name:"金门县",center:[118.323221,24.436417],level:"district",districts:[]},{name:"晋江市",center:[118.551682,24.781636],level:"district",districts:[]},{name:"鲤城区",center:[118.587097,24.907424],level:"district",districts:[]},{name:"洛江区",center:[118.671193,24.939796],level:"district",districts:[]},{name:"南安市",center:[118.386279,24.960385],level:"district",districts:[]},{name:"泉港区",center:[118.916309,25.119815],level:"district",districts:[]},{name:"石狮市",center:[118.648066,24.732204],level:"district",districts:[]},{name:"永春县",center:[118.294048,25.321565],level:"district",districts:[]}]},{name:"漳州市",center:[117.647093,24.513025],level:"city",districts:[{name:"东山县",center:[117.430061,23.701262],level:"district",districts:[]},{name:"华安县",center:[117.534103,25.004425],level:"district",districts:[]},{name:"龙海市",center:[117.818197,24.446706],level:"district",districts:[]},{name:"龙文区",center:[117.709754,24.503113],level:"district",districts:[]},{name:"南靖县",center:[117.35732,24.514654],level:"district",districts:[]},{name:"平和县",center:[117.315017,24.363508],level:"district",districts:[]},{name:"芗城区",center:[117.653968,24.510787],level:"district",districts:[]},{name:"云霄县",center:[117.339573,23.957936],level:"district",districts:[]},{name:"漳浦县",center:[117.613808,24.117102],level:"district",districts:[]},{name:"长泰县",center:[117.759153,24.625449],level:"district",districts:[]},{name:"诏安县",center:[117.175184,23.711579],level:"district",districts:[]}]}]},{name:"广东省",center:[113.26641,23.132324],level:"province",districts:[{name:"中山市",center:[113.39277,22.517585],level:"city",districts:[{name:"南头镇",center:[113.291867,22.717679],level:"street",districts:[]},{name:"小榄镇",center:[113.250897,22.672099],level:"street",districts:[]},{name:"神湾镇",center:[113.363816,22.302496],level:"street",districts:[]},{name:"东凤镇",center:[113.256963,22.702452],level:"street",districts:[]},{name:"南朗镇",center:[113.530998,22.498612],level:"street",districts:[]},{name:"环城街道",center:[113.352385,22.478059],level:"street",districts:[]},{name:"坦洲镇",center:[113.468002,22.254504],level:"street",districts:[]},{name:"中山港街道",center:[113.47457,22.560023],level:"street",districts:[]},{name:"南区街道",center:[113.354416,22.485429],level:"street",districts:[]},{name:"五桂山街道",center:[113.402421,22.446247],level:"street",districts:[]},{name:"石歧区街道",center:[113.372237,22.520661],level:"street",districts:[]},{name:"西区街道",center:[113.358988,22.520088],level:"street",districts:[]},{name:"东区街道",center:[113.398577,22.513701],level:"street",districts:[]},{name:"三乡镇",center:[113.441608,22.357768],level:"street",districts:[]},{name:"大涌镇",center:[113.300876,22.46497],level:"street",districts:[]},{name:"黄圃镇",center:[113.33915,22.710864],level:"street",districts:[]},{name:"石岐区街道",center:[113.388358,22.536656],level:"street",districts:[]},{name:"沙溪镇",center:[113.321321,22.508984],level:"street",districts:[]},{name:"东升镇",center:[113.291662,22.62273],level:"street",districts:[]},{name:"阜沙镇",center:[113.349872,22.667171],level:"street",districts:[]},{name:"民众镇",center:[113.493839,22.621554],level:"street",districts:[]},{name:"横栏镇",center:[113.249104,22.534847],level:"street",districts:[]},{name:"三角镇",center:[113.418173,22.67658],level:"street",districts:[]},{name:"板芙镇",center:[113.322644,22.416782],level:"street",districts:[]},{name:"港口镇",center:[113.385893,22.585266],level:"street",districts:[]},{name:"古镇镇",center:[113.190869,22.613406],level:"street",districts:[]}]},{name:"东沙群岛",center:[116.887613,20.617825],level:"city",districts:[]},{name:"潮州市",center:[116.622444,23.657262],level:"city",districts:[{name:"潮安区",center:[116.678203,23.462613],level:"district",districts:[]},{name:"饶平县",center:[117.0039,23.663824],level:"district",districts:[]},{name:"湘桥区",center:[116.628627,23.674387],level:"district",districts:[]}]},{name:"东莞市",center:[113.751799,23.020673],level:"city",districts:[{name:"东坑镇",center:[113.933872,22.995838],level:"street",districts:[]},{name:"大岭山镇",center:[113.842223,22.899965],level:"street",districts:[]},{name:"企石镇",center:[114.022023,23.072874],level:"street",districts:[]},{name:"沙田镇",center:[113.61818,22.919615],level:"street",districts:[]},{name:"道滘镇",center:[113.675231,23.004366],level:"street",districts:[]},{name:"虎门镇",center:[113.672553,22.814835],level:"street",districts:[]},{name:"望牛墩镇",center:[113.656231,23.055334],level:"street",districts:[]},{name:"南城街道",center:[113.743835,23.018534],level:"street",districts:[]},{name:"莞城街道",center:[113.749234,23.038629],level:"street",districts:[]},{name:"东城街道",center:[113.783327,23.028053],level:"street",districts:[]},{name:"万江街道",center:[113.738542,23.047104],level:"street",districts:[]},{name:"石排镇",center:[113.9403,23.090292],level:"street",districts:[]},{name:"厚街镇",center:[113.67114,22.936585],level:"street",districts:[]},{name:"长安镇",center:[113.802516,22.814768],level:"street",districts:[]},{name:"石碣镇",center:[113.813068,23.099651],level:"street",districts:[]},{name:"大朗镇",center:[113.943978,22.940016],level:"street",districts:[]},{name:"横沥镇",center:[113.965588,23.018472],level:"street",districts:[]},{name:"樟木头镇",center:[114.083278,22.914909],level:"street",districts:[]},{name:"清溪镇",center:[114.164185,22.843847],level:"street",districts:[]},{name:"麻涌镇",center:[113.581134,23.051137],level:"street",districts:[]},{name:"茶山镇",center:[113.869636,23.076755],level:"street",districts:[]},{name:"凤岗镇",center:[114.136944,22.74695],level:"street",districts:[]},{name:"高埗镇",center:[113.745951,23.090824],level:"street",districts:[]},{name:"中堂镇",center:[113.656917,23.092609],level:"street",districts:[]},{name:"桥头镇",center:[114.10316,23.024132],level:"street",districts:[]},{name:"谢岗镇",center:[114.148739,22.961616],level:"street",districts:[]},{name:"黄江镇",center:[114.003561,22.915278],level:"street",districts:[]},{name:"塘厦镇",center:[114.072575,22.806965],level:"street",districts:[]},{name:"寮步镇",center:[113.874871,22.997358],level:"street",districts:[]},{name:"洪梅镇",center:[113.608903,22.994717],level:"street",districts:[]},{name:"常平镇",center:[113.993116,22.974855],level:"street",districts:[]},{name:"石龙镇",center:[113.874378,23.10591],level:"street",districts:[]}]},{name:"佛山市",center:[113.121435,23.021478],level:"city",districts:[{name:"禅城区",center:[113.122421,23.009551],level:"district",districts:[]},{name:"高明区",center:[112.892585,22.900139],level:"district",districts:[]},{name:"南海区",center:[113.143441,23.028956],level:"district",districts:[]},{name:"三水区",center:[112.896685,23.155931],level:"district",districts:[]},{name:"顺德区",center:[113.293359,22.80524],level:"district",districts:[]}]},{name:"广州市",center:[113.264385,23.12911],level:"city",districts:[{name:"白云区",center:[113.273238,23.157367],level:"district",districts:[]},{name:"从化区",center:[113.586679,23.548748],level:"district",districts:[]},{name:"番禺区",center:[113.384152,22.937556],level:"district",districts:[]},{name:"海珠区",center:[113.317443,23.083788],level:"district",districts:[]},{name:"花都区",center:[113.220463,23.403744],level:"district",districts:[]},{name:"黄埔区",center:[113.480541,23.181706],level:"district",districts:[]},{name:"荔湾区",center:[113.244258,23.125863],level:"district",districts:[]},{name:"南沙区",center:[113.525165,22.801624],level:"district",districts:[]},{name:"天河区",center:[113.361575,23.124807],level:"district",districts:[]},{name:"越秀区",center:[113.266835,23.128537],level:"district",districts:[]},{name:"增城区",center:[113.810627,23.261465],level:"district",districts:[]}]},{name:"河源市",center:[114.700961,23.743686],level:"city",districts:[{name:"东源县",center:[114.746344,23.788189],level:"district",districts:[]},{name:"和平县",center:[114.938684,24.44218],level:"district",districts:[]},{name:"连平县",center:[114.488556,24.369583],level:"district",districts:[]},{name:"龙川县",center:[115.259871,24.100066],level:"district",districts:[]},{name:"源城区",center:[114.702517,23.733969],level:"district",districts:[]},{name:"紫金县",center:[115.184107,23.635745],level:"district",districts:[]}]},{name:"惠州市",center:[114.415612,23.112381],level:"city",districts:[{name:"博罗县",center:[114.289528,23.172771],level:"district",districts:[]},{name:"惠城区",center:[114.382474,23.084137],level:"district",districts:[]},{name:"惠东县",center:[114.719988,22.985014],level:"district",districts:[]},{name:"惠阳区",center:[114.456176,22.789788],level:"district",districts:[]},{name:"龙门县",center:[114.254863,23.727737],level:"district",districts:[]}]},{name:"江门市",center:[113.081542,22.57899],level:"city",districts:[{name:"恩平市",center:[112.305145,22.183206],level:"district",districts:[]},{name:"鹤山市",center:[112.964252,22.76545],level:"district",districts:[]},{name:"江海区",center:[113.111612,22.560473],level:"district",districts:[]},{name:"开平市",center:[112.698545,22.376395],level:"district",districts:[]},{name:"蓬江区",center:[113.078521,22.595149],level:"district",districts:[]},{name:"台山市",center:[112.794065,22.251924],level:"district",districts:[]},{name:"新会区",center:[113.034187,22.4583],level:"district",districts:[]}]},{name:"揭阳市",center:[116.372708,23.549701],level:"city",districts:[{name:"惠来县",center:[116.29515,23.033266],level:"district",districts:[]},{name:"揭东区",center:[116.412015,23.566126],level:"district",districts:[]},{name:"揭西县",center:[115.841837,23.431294],level:"district",districts:[]},{name:"普宁市",center:[116.165777,23.297493],level:"district",districts:[]},{name:"榕城区",center:[116.367012,23.525382],level:"district",districts:[]}]},{name:"茂名市",center:[110.925439,21.662991],level:"city",districts:[{name:"电白区",center:[111.013556,21.514163],level:"district",districts:[]},{name:"高州市",center:[110.853299,21.918203],level:"district",districts:[]},{name:"化州市",center:[110.639565,21.66463],level:"district",districts:[]},{name:"茂南区",center:[110.918026,21.641337],level:"district",districts:[]},{name:"信宜市",center:[110.947043,22.354385],level:"district",districts:[]}]},{name:"梅州市",center:[116.122523,24.288578],level:"city",districts:[{name:"大埔县",center:[116.695195,24.347782],level:"district",districts:[]},{name:"丰顺县",center:[116.181691,23.739343],level:"district",districts:[]},{name:"蕉岭县",center:[116.171355,24.658699],level:"district",districts:[]},{name:"梅江区",center:[116.116695,24.31049],level:"district",districts:[]},{name:"梅县区",center:[116.081656,24.265926],level:"district",districts:[]},{name:"平远县",center:[115.891638,24.567261],level:"district",districts:[]},{name:"五华县",center:[115.775788,23.932409],level:"district",districts:[]},{name:"兴宁市",center:[115.731167,24.136708],level:"district",districts:[]}]},{name:"清远市",center:[113.056042,23.681774],level:"city",districts:[{name:"佛冈县",center:[113.531607,23.879192],level:"district",districts:[]},{name:"连州市",center:[112.377361,24.780966],level:"district",districts:[]},{name:"连南瑶族自治县",center:[112.287012,24.726017],level:"district",districts:[]},{name:"连山壮族瑶族自治县",center:[112.093617,24.570491],level:"district",districts:[]},{name:"清新区",center:[113.017747,23.734677],level:"district",districts:[]},{name:"清城区",center:[113.062692,23.697899],level:"district",districts:[]},{name:"阳山县",center:[112.641363,24.465359],level:"district",districts:[]},{name:"英德市",center:[113.401701,24.206986],level:"district",districts:[]}]},{name:"汕头市",center:[116.681972,23.354091],level:"city",districts:[{name:"潮南区",center:[116.439178,23.23865],level:"district",districts:[]},{name:"澄海区",center:[116.755992,23.466709],level:"district",districts:[]},{name:"潮阳区",center:[116.601509,23.265356],level:"district",districts:[]},{name:"濠江区",center:[116.726973,23.286079],level:"district",districts:[]},{name:"金平区",center:[116.70345,23.365556],level:"district",districts:[]},{name:"龙湖区",center:[116.716446,23.372254],level:"district",districts:[]},{name:"南澳县",center:[117.023374,23.421724],level:"district",districts:[]}]},{name:"汕尾市",center:[115.375431,22.78705],level:"city",districts:[{name:"城区",center:[115.365058,22.779207],level:"district",districts:[]},{name:"海丰县",center:[115.323436,22.966585],level:"district",districts:[]},{name:"陆丰市",center:[115.652151,22.919228],level:"district",districts:[]},{name:"陆河县",center:[115.660143,23.301616],level:"district",districts:[]}]},{name:"韶关市",center:[113.59762,24.810879],level:"city",districts:[{name:"乐昌市",center:[113.347545,25.130602],level:"district",districts:[]},{name:"南雄市",center:[114.311982,25.117753],level:"district",districts:[]},{name:"曲江区",center:[113.604535,24.682501],level:"district",districts:[]},{name:"仁化县",center:[113.749027,25.085621],level:"district",districts:[]},{name:"乳源瑶族自治县",center:[113.275883,24.776078],level:"district",districts:[]},{name:"始兴县",center:[114.061789,24.952976],level:"district",districts:[]},{name:"翁源县",center:[114.130342,24.350346],level:"district",districts:[]},{name:"武江区",center:[113.587756,24.792926],level:"district",districts:[]},{name:"新丰县",center:[114.206867,24.05976],level:"district",districts:[]},{name:"浈江区",center:[113.611098,24.804381],level:"district",districts:[]}]},{name:"深圳市",center:[114.057939,22.543527],level:"city",districts:[{name:"宝安区",center:[113.883802,22.554996],level:"district",districts:[]},{name:"福田区",center:[114.055072,22.521521],level:"district",districts:[]},{name:"龙岗区",center:[114.246899,22.720974],level:"district",districts:[]},{name:"龙华区",center:[114.045422,22.696667],level:"district",districts:[]},{name:"罗湖区",center:[114.131459,22.548389],level:"district",districts:[]},{name:"南山区",center:[113.930413,22.533287],level:"district",districts:[]},{name:"坪山区",center:[114.350584,22.708881],level:"district",districts:[]},{name:"盐田区",center:[114.236739,22.557001],level:"district",districts:[]}]},{name:"阳江市",center:[111.982589,21.857887],level:"city",districts:[{name:"江城区",center:[111.955058,21.861786],level:"district",districts:[]},{name:"阳西县",center:[111.61766,21.752771],level:"district",districts:[]},{name:"阳东区",center:[112.006363,21.868337],level:"district",districts:[]},{name:"阳春市",center:[111.791587,22.17041],level:"district",districts:[]}]},{name:"云浮市",center:[112.044491,22.915094],level:"city",districts:[{name:"罗定市",center:[111.569892,22.768285],level:"district",districts:[]},{name:"新兴县",center:[112.225334,22.69569],level:"district",districts:[]},{name:"云安区",center:[112.003208,23.071019],level:"district",districts:[]},{name:"郁南县",center:[111.535285,23.23456],level:"district",districts:[]},{name:"云城区",center:[112.043945,22.92815],level:"district",districts:[]}]},{name:"湛江市",center:[110.356639,21.270145],level:"city",districts:[{name:"赤坎区",center:[110.365899,21.266119],level:"district",districts:[]},{name:"雷州市",center:[110.096586,20.914178],level:"district",districts:[]},{name:"廉江市",center:[110.286208,21.6097],level:"district",districts:[]},{name:"麻章区",center:[110.334387,21.263442],level:"district",districts:[]},{name:"坡头区",center:[110.455332,21.244721],level:"district",districts:[]},{name:"遂溪县",center:[110.250123,21.377246],level:"district",districts:[]},{name:"吴川市",center:[110.778411,21.441808],level:"district",districts:[]},{name:"霞山区",center:[110.397656,21.192457],level:"district",districts:[]},{name:"徐闻县",center:[110.176749,20.325489],level:"district",districts:[]}]},{name:"肇庆市",center:[112.465091,23.047191],level:"city",districts:[{name:"德庆县",center:[111.785937,23.143722],level:"district",districts:[]},{name:"鼎湖区",center:[112.567588,23.158447],level:"district",districts:[]},{name:"端州区",center:[112.484848,23.052101],level:"district",districts:[]},{name:"封开县",center:[111.512343,23.424033],level:"district",districts:[]},{name:"高要区",center:[112.457981,23.025305],level:"district",districts:[]},{name:"广宁县",center:[112.44069,23.634675],level:"district",districts:[]},{name:"怀集县",center:[112.167742,23.92035],level:"district",districts:[]},{name:"四会市",center:[112.734103,23.327001],level:"district",districts:[]}]},{name:"珠海市",center:[113.576677,22.270978],level:"city",districts:[{name:"斗门区",center:[113.296467,22.2092],level:"district",districts:[]},{name:"金湾区",center:[113.362656,22.147471],level:"district",districts:[]},{name:"香洲区",center:[113.543784,22.265811],level:"district",districts:[]}]}]},{name:"广西壮族自治区",center:[108.327546,22.815478],level:"province",districts:[{name:"北海市",center:[109.120161,21.481291],level:"city",districts:[{name:"海城区",center:[109.117209,21.475004],level:"district",districts:[]},{name:"合浦县",center:[109.207335,21.660935],level:"district",districts:[]},{name:"铁山港区",center:[109.42158,21.529127],level:"district",districts:[]},{name:"银海区",center:[109.139862,21.449308],level:"district",districts:[]}]},{name:"百色市",center:[106.618202,23.90233],level:"city",districts:[{name:"德保县",center:[106.615373,23.32345],level:"district",districts:[]},{name:"靖西市",center:[106.417805,23.134117],level:"district",districts:[]},{name:"乐业县",center:[106.556519,24.776827],level:"district",districts:[]},{name:"凌云县",center:[106.56131,24.347557],level:"district",districts:[]},{name:"隆林各族自治县",center:[105.34404,24.770896],level:"district",districts:[]},{name:"那坡县",center:[105.83253,23.387441],level:"district",districts:[]},{name:"平果县",center:[107.589809,23.329376],level:"district",districts:[]},{name:"田林县",center:[106.228538,24.294487],level:"district",districts:[]},{name:"田东县",center:[107.12608,23.597194],level:"district",districts:[]},{name:"田阳县",center:[106.915496,23.735692],level:"district",districts:[]},{name:"西林县",center:[105.093825,24.489823],level:"district",districts:[]},{name:"右江区",center:[106.618225,23.90097],level:"district",districts:[]}]},{name:"崇左市",center:[107.365094,22.377253],level:"city",districts:[{name:"大新县",center:[107.200654,22.829287],level:"district",districts:[]},{name:"扶绥县",center:[107.904186,22.635012],level:"district",districts:[]},{name:"江州区",center:[107.353437,22.405325],level:"district",districts:[]},{name:"龙州县",center:[106.854482,22.342778],level:"district",districts:[]},{name:"宁明县",center:[107.076456,22.140192],level:"district",districts:[]},{name:"凭祥市",center:[106.766293,22.094484],level:"district",districts:[]},{name:"天等县",center:[107.143432,23.081394],level:"district",districts:[]}]},{name:"防城港市",center:[108.353846,21.68686],level:"city",districts:[{name:"东兴市",center:[107.971828,21.547821],level:"district",districts:[]},{name:"防城区",center:[108.353499,21.769211],level:"district",districts:[]},{name:"港口区",center:[108.380143,21.643383],level:"district",districts:[]},{name:"上思县",center:[107.983627,22.153671],level:"district",districts:[]}]},{name:"桂林市",center:[110.179953,25.234479],level:"city",districts:[{name:"叠彩区",center:[110.301723,25.314],level:"district",districts:[]},{name:"灌阳县",center:[111.160851,25.489383],level:"district",districts:[]},{name:"恭城瑶族自治县",center:[110.828409,24.831682],level:"district",districts:[]},{name:"荔浦县",center:[110.395104,24.488342],level:"district",districts:[]},{name:"临桂区",center:[110.212463,25.238628],level:"district",districts:[]},{name:"灵川县",center:[110.319897,25.394781],level:"district",districts:[]},{name:"龙胜各族自治县",center:[110.011238,25.797931],level:"district",districts:[]},{name:"平乐县",center:[110.643305,24.633362],level:"district",districts:[]},{name:"七星区",center:[110.317826,25.252701],level:"district",districts:[]},{name:"全州县",center:[111.072946,25.928387],level:"district",districts:[]},{name:"象山区",center:[110.281082,25.261686],level:"district",districts:[]},{name:"兴安县",center:[110.67167,25.611704],level:"district",districts:[]},{name:"秀峰区",center:[110.264183,25.273625],level:"district",districts:[]},{name:"阳朔县",center:[110.496593,24.77848],level:"district",districts:[]},{name:"雁山区",center:[110.28669,25.101934],level:"district",districts:[]},{name:"永福县",center:[109.983076,24.979855],level:"district",districts:[]},{name:"资源县",center:[110.6527,26.042443],level:"district",districts:[]}]},{name:"贵港市",center:[109.598926,23.11153],level:"city",districts:[{name:"港南区",center:[109.599556,23.075573],level:"district",districts:[]},{name:"港北区",center:[109.57224,23.11153],level:"district",districts:[]},{name:"桂平市",center:[110.079379,23.394325],level:"district",districts:[]},{name:"平南县",center:[110.392311,23.539264],level:"district",districts:[]},{name:"覃塘区",center:[109.452662,23.127149],level:"district",districts:[]}]},{name:"河池市",center:[108.085261,24.692931],level:"city",districts:[{name:"巴马瑶族自治县",center:[107.258588,24.142298],level:"district",districts:[]},{name:"大化瑶族自治县",center:[107.998149,23.736457],level:"district",districts:[]},{name:"东兰县",center:[107.374293,24.510842],level:"district",districts:[]},{name:"都安瑶族自治县",center:[108.105311,23.932675],level:"district",districts:[]},{name:"凤山县",center:[107.04219,24.546876],level:"district",districts:[]},{name:"环江毛南族自治县",center:[108.258028,24.825664],level:"district",districts:[]},{name:"金城江区",center:[108.037276,24.689703],level:"district",districts:[]},{name:"罗城仫佬族自治县",center:[108.904706,24.777411],level:"district",districts:[]},{name:"南丹县",center:[107.541244,24.975631],level:"district",districts:[]},{name:"天峨县",center:[107.173802,24.999108],level:"district",districts:[]},{name:"宜州区",center:[108.636414,24.485214],level:"district",districts:[]}]},{name:"贺州市",center:[111.566871,24.403528],level:"city",districts:[{name:"八步区",center:[111.552095,24.411805],level:"district",districts:[]},{name:"富川瑶族自治县",center:[111.27745,24.814443],level:"district",districts:[]},{name:"平桂区",center:[111.479923,24.453845],level:"district",districts:[]},{name:"昭平县",center:[110.811325,24.169385],level:"district",districts:[]},{name:"钟山县",center:[111.303009,24.525957],level:"district",districts:[]}]},{name:"来宾市",center:[109.221465,23.750306],level:"city",districts:[{name:"合山市",center:[108.886082,23.806535],level:"district",districts:[]},{name:"金秀瑶族自治县",center:[110.189462,24.130374],level:"district",districts:[]},{name:"武宣县",center:[109.663206,23.59411],level:"district",districts:[]},{name:"忻城县",center:[108.665666,24.066234],level:"district",districts:[]},{name:"象州县",center:[109.705065,23.973793],level:"district",districts:[]},{name:"兴宾区",center:[109.183333,23.72892],level:"district",districts:[]}]},{name:"柳州市",center:[109.428608,24.326291],level:"city",districts:[{name:"城中区",center:[109.4273,24.366],level:"district",districts:[]},{name:"柳城县",center:[109.24473,24.651518],level:"district",districts:[]},{name:"柳北区",center:[109.402049,24.362691],level:"district",districts:[]},{name:"柳江区",center:[109.32638,24.254891],level:"district",districts:[]},{name:"柳南区",center:[109.385518,24.336229],level:"district",districts:[]},{name:"鹿寨县",center:[109.750638,24.472897],level:"district",districts:[]},{name:"融水苗族自治县",center:[109.256334,25.065934],level:"district",districts:[]},{name:"融安县",center:[109.397538,25.224549],level:"district",districts:[]},{name:"三江侗族自治县",center:[109.607675,25.783198],level:"district",districts:[]},{name:"鱼峰区",center:[109.452442,24.318516],level:"district",districts:[]}]},{name:"南宁市",center:[108.366543,22.817002],level:"city",districts:[{name:"宾阳县",center:[108.810326,23.217786],level:"district",districts:[]},{name:"横县",center:[109.261384,22.679931],level:"district",districts:[]},{name:"江南区",center:[108.273133,22.78136],level:"district",districts:[]},{name:"良庆区",center:[108.39301,22.752997],level:"district",districts:[]},{name:"隆安县",center:[107.696153,23.166028],level:"district",districts:[]},{name:"马山县",center:[108.177019,23.708321],level:"district",districts:[]},{name:"青秀区",center:[108.494024,22.785879],level:"district",districts:[]},{name:"上林县",center:[108.602846,23.431908],level:"district",districts:[]},{name:"武鸣区",center:[108.27467,23.158595],level:"district",districts:[]},{name:"西乡塘区",center:[108.313494,22.833928],level:"district",districts:[]},{name:"兴宁区",center:[108.368871,22.854021],level:"district",districts:[]},{name:"邕宁区",center:[108.487368,22.75839],level:"district",districts:[]}]},{name:"钦州市",center:[108.654146,21.979933],level:"city",districts:[{name:"灵山县",center:[109.291006,22.416536],level:"district",districts:[]},{name:"浦北县",center:[109.556953,22.271651],level:"district",districts:[]},{name:"钦北区",center:[108.44911,22.132761],level:"district",districts:[]},{name:"钦南区",center:[108.657209,21.938859],level:"district",districts:[]}]},{name:"梧州市",center:[111.279115,23.476962],level:"city",districts:[{name:"苍梧县",center:[111.544007,23.845097],level:"district",districts:[]},{name:"岑溪市",center:[110.994913,22.91835],level:"district",districts:[]},{name:"龙圩区",center:[111.246606,23.404772],level:"district",districts:[]},{name:"蒙山县",center:[110.525003,24.19357],level:"district",districts:[]},{name:"藤县",center:[110.914849,23.374983],level:"district",districts:[]},{name:"万秀区",center:[111.320518,23.472991],level:"district",districts:[]},{name:"长洲区",center:[111.274673,23.485944],level:"district",districts:[]}]},{name:"玉林市",center:[110.18122,22.654032],level:"city",districts:[{name:"博白县",center:[109.975985,22.273048],level:"district",districts:[]},{name:"北流市",center:[110.354214,22.70831],level:"district",districts:[]},{name:"福绵区",center:[110.059439,22.585556],level:"district",districts:[]},{name:"陆川县",center:[110.264052,22.321048],level:"district",districts:[]},{name:"容县",center:[110.558074,22.857839],level:"district",districts:[]},{name:"兴业县",center:[109.875304,22.736421],level:"district",districts:[]},{name:"玉州区",center:[110.151153,22.628087],level:"district",districts:[]}]}]},{name:"海南省",center:[110.349228,20.017377],level:"province",districts:[{name:"儋州市",center:[109.580811,19.521134],level:"city",districts:[{name:"海头镇",center:[108.953392,19.503315],level:"street",districts:[]},{name:"白马井镇",center:[109.218734,19.696407],level:"street",districts:[]},{name:"新英湾街道",center:[109.2224,19.745499],level:"street",districts:[]},{name:"那大街道",center:[109.573403,19.511799],level:"street",districts:[]},{name:"木棠镇",center:[109.35023,19.80393],level:"street",districts:[]},{name:"新州镇",center:[109.316166,19.71431],level:"street",districts:[]},{name:"中和镇",center:[109.349583,19.743857],level:"street",districts:[]},{name:"峨蔓镇",center:[109.266778,19.854773],level:"street",districts:[]},{name:"排浦镇",center:[109.163254,19.638809],level:"street",districts:[]},{name:"王五镇",center:[109.29572,19.653711],level:"street",districts:[]},{name:"光村镇",center:[109.48132,19.818101],level:"street",districts:[]},{name:"和庆镇",center:[109.640854,19.525401],level:"street",districts:[]},{name:"大成镇",center:[109.399661,19.507964],level:"street",districts:[]},{name:"兰洋镇",center:[109.664393,19.460398],level:"street",districts:[]},{name:"雅星镇",center:[109.269115,19.444076],level:"street",districts:[]},{name:"三都镇",center:[109.21922,19.786922],level:"street",districts:[]},{name:"东成镇",center:[109.461375,19.703706],level:"street",districts:[]},{name:"那大镇",center:[109.546409,19.514878],level:"street",districts:[]},{name:"兰训乡",center:[109.361149,19.859648],level:"street",districts:[]}]},{name:"海口市",center:[110.198286,20.044412],level:"city",districts:[{name:"龙华区",center:[110.328492,20.031006],level:"district",districts:[]},{name:"美兰区",center:[110.366358,20.029083],level:"district",districts:[]},{name:"琼山区",center:[110.353972,20.003169],level:"district",districts:[]},{name:"秀英区",center:[110.293603,20.007494],level:"district",districts:[]}]},{name:"三沙市",center:[112.338695,16.831839],level:"city",districts:[{name:"南沙群岛",center:[116.749997,11.471888],level:"district",districts:[]},{name:"西沙群岛",center:[111.792944,16.204546],level:"district",districts:[]},{name:"中沙群岛的岛礁及其海域",center:[117.740071,15.112855],level:"district",districts:[]}]},{name:"三亚市",center:[109.511772,18.253135],level:"city",districts:[{name:"海棠区",center:[109.752569,18.400106],level:"district",districts:[]},{name:"吉阳区",center:[109.578336,18.281406],level:"district",districts:[]},{name:"天涯区",center:[109.452378,18.298156],level:"district",districts:[]},{name:"崖州区",center:[109.171841,18.357291],level:"district",districts:[]}]},{name:"白沙黎族自治县",center:[109.451484,19.224823],level:"city",districts:[{name:"细水乡",center:[109.568501,19.206414],level:"street",districts:[]},{name:"阜龙乡",center:[109.460782,19.32259],level:"street",districts:[]},{name:"邦溪镇",center:[109.103544,19.369531],level:"street",districts:[]},{name:"南开乡",center:[109.41468,19.07781],level:"street",districts:[]},{name:"七坊镇",center:[109.24007,19.29558],level:"street",districts:[]},{name:"金波乡",center:[109.178467,19.236611],level:"street",districts:[]},{name:"牙叉镇",center:[109.445359,19.212209],level:"street",districts:[]},{name:"青松乡",center:[109.270939,19.155189],level:"street",districts:[]},{name:"打安镇",center:[109.373668,19.283887],level:"street",districts:[]},{name:"荣邦乡",center:[109.170727,19.41395],level:"street",districts:[]},{name:"元门乡",center:[109.486456,19.158071],level:"street",districts:[]}]},{name:"保亭黎族苗族自治县",center:[109.70259,18.63913],level:"city",districts:[{name:"毛岸镇",center:[109.581045,18.683945],level:"street",districts:[]},{name:"三道镇",center:[109.668672,18.464576],level:"street",districts:[]},{name:"保城镇",center:[109.703534,18.641565],level:"street",districts:[]},{name:"六弓乡",center:[109.78506,18.53984],level:"street",districts:[]},{name:"什玲镇",center:[109.78174,18.663921],level:"street",districts:[]},{name:"响水镇",center:[109.61628,18.592227],level:"street",districts:[]},{name:"毛感乡",center:[109.50901,18.613029],level:"street",districts:[]},{name:"新政镇",center:[109.628914,18.541645],level:"street",districts:[]},{name:"南林乡",center:[109.617455,18.405241],level:"street",districts:[]},{name:"加茂镇",center:[109.707284,18.55223],level:"street",districts:[]}]},{name:"昌江黎族自治县",center:[109.055739,19.298184],level:"city",districts:[{name:"石碌镇",center:[109.055809,19.27755],level:"street",districts:[]},{name:"乌烈镇",center:[108.792324,19.288577],level:"street",districts:[]},{name:"七叉镇",center:[109.05128,19.11481],level:"street",districts:[]},{name:"海尾镇",center:[108.8183,19.422],level:"street",districts:[]},{name:"叉河镇",center:[108.957345,19.238934],level:"street",districts:[]},{name:"昌化镇",center:[108.685071,19.329235],level:"street",districts:[]},{name:"十月田镇",center:[108.952224,19.328109],level:"street",districts:[]},{name:"王下乡",center:[109.150473,19.003399],level:"street",districts:[]}]},{name:"澄迈县",center:[110.006754,19.738521],level:"city",districts:[{name:"加乐镇",center:[110.00106,19.584999],level:"street",districts:[]},{name:"福山镇",center:[109.92986,19.83004],level:"street",districts:[]},{name:"瑞溪镇",center:[110.12908,19.73183],level:"street",districts:[]},{name:"文儒镇",center:[110.053169,19.53708],level:"street",districts:[]},{name:"仁兴镇",center:[109.88194,19.492539],level:"street",districts:[]},{name:"永发镇",center:[110.19532,19.747359],level:"street",districts:[]},{name:"大丰镇",center:[110.038147,19.855536],level:"street",districts:[]},{name:"桥头镇",center:[109.933531,19.954138],level:"street",districts:[]},{name:"中兴镇",center:[109.861281,19.564772],level:"street",districts:[]},{name:"老城镇",center:[110.126498,19.953144],level:"street",districts:[]},{name:"金江镇",center:[110.010187,19.736764],level:"street",districts:[]}]},{name:"定安县",center:[110.359339,19.681404],level:"city",districts:[{name:"翰林镇",center:[110.26473,19.333758],level:"street",districts:[]},{name:"龙河镇",center:[110.219091,19.381868],level:"street",districts:[]},{name:"黄竹镇",center:[110.446721,19.472782],level:"street",districts:[]},{name:"龙门镇",center:[110.328024,19.43916],level:"street",districts:[]},{name:"定城镇",center:[110.368432,19.680292],level:"street",districts:[]},{name:"富文镇",center:[110.26279,19.551585],level:"street",districts:[]},{name:"龙州乡",center:[110.266105,19.663599],level:"street",districts:[]},{name:"龙湖镇",center:[110.401161,19.573221],level:"street",districts:[]},{name:"居丁镇",center:[110.404932,19.574772],level:"street",districts:[]},{name:"雷鸣镇",center:[110.326015,19.553655],level:"street",districts:[]},{name:"岭口镇",center:[110.308233,19.342639],level:"street",districts:[]},{name:"新竹镇",center:[110.208962,19.617783],level:"street",districts:[]}]},{name:"东方市",center:[108.651815,19.095351],level:"city",districts:[{name:"江边乡",center:[108.976837,18.894428],level:"street",districts:[]},{name:"新龙镇",center:[108.684538,18.952023],level:"street",districts:[]},{name:"四更镇",center:[108.682117,19.225616],level:"street",districts:[]},{name:"板桥镇",center:[108.688613,18.794859],level:"street",districts:[]},{name:"感城镇",center:[108.64791,18.84991],level:"street",districts:[]},{name:"大田镇",center:[108.874903,19.16498],level:"street",districts:[]},{name:"天安乡",center:[108.912763,19.017418],level:"street",districts:[]},{name:"罗带乡",center:[108.674143,19.059986],level:"street",districts:[]},{name:"三家镇",center:[108.758458,19.241239],level:"street",districts:[]},{name:"东河镇",center:[108.93808,19.048051],level:"street",districts:[]},{name:"八所镇",center:[108.670497,19.091445],level:"street",districts:[]}]},{name:"乐东黎族自治县",center:[109.173054,18.750259],level:"city",districts:[{name:"大安镇",center:[109.214756,18.691329],level:"street",districts:[]},{name:"莺歌海镇",center:[108.697349,18.510154],level:"street",districts:[]},{name:"黄流镇",center:[108.794872,18.506684],level:"street",districts:[]},{name:"万冲镇",center:[109.32287,18.844711],level:"street",districts:[]},{name:"志仲镇",center:[109.265117,18.629241],level:"street",districts:[]},{name:"九所镇",center:[108.953913,18.453504],level:"street",districts:[]},{name:"利国镇",center:[108.897225,18.472095],level:"street",districts:[]},{name:"佛罗镇",center:[108.736344,18.578636],level:"street",districts:[]},{name:"抱由镇",center:[109.179533,18.74478],level:"street",districts:[]},{name:"尖峰镇",center:[108.792488,18.690415],level:"street",districts:[]},{name:"冲坡镇",center:[108.881852,18.473897],level:"street",districts:[]},{name:"千家镇",center:[109.086133,18.565577],level:"street",districts:[]}]},{name:"临高县",center:[109.690508,19.912025],level:"city",districts:[{name:"东英镇",center:[109.648634,19.959022],level:"street",districts:[]},{name:"皇桐镇",center:[109.849709,19.832893],level:"street",districts:[]},{name:"南宝镇",center:[109.599545,19.680461],level:"street",districts:[]},{name:"和舍镇",center:[109.727565,19.596205],level:"street",districts:[]},{name:"多文镇",center:[109.771058,19.773837],level:"street",districts:[]},{name:"临城镇",center:[109.696445,19.896521],level:"street",districts:[]},{name:"博厚镇",center:[109.745761,19.883726],level:"street",districts:[]},{name:"波莲镇",center:[109.648489,19.868223],level:"street",districts:[]},{name:"新盈镇",center:[109.536349,19.89513],level:"street",districts:[]},{name:"调楼镇",center:[109.546479,19.928661],level:"street",districts:[]},{name:"加来镇",center:[109.699231,19.709883],level:"street",districts:[]}]},{name:"陵水黎族自治县",center:[110.037503,18.506048],level:"city",districts:[{name:"光坡镇",center:[110.048782,18.54339],level:"street",districts:[]},{name:"大里乡",center:[109.95142,18.750483],level:"street",districts:[]},{name:"英州镇",center:[109.858895,18.427366],level:"street",districts:[]},{name:"三才镇",center:[110.003299,18.474578],level:"street",districts:[]},{name:"本号镇",center:[109.96248,18.608901],level:"street",districts:[]},{name:"群英乡",center:[109.87883,18.58299],level:"street",districts:[]},{name:"隆广镇",center:[109.89942,18.50198],level:"street",districts:[]},{name:"提蒙乡",center:[110.013034,18.564805],level:"street",districts:[]},{name:"椰林镇",center:[110.036325,18.506138],level:"street",districts:[]},{name:"新村镇",center:[109.971328,18.412445],level:"street",districts:[]},{name:"黎安镇",center:[110.069641,18.437315],level:"street",districts:[]},{name:"文罗镇",center:[109.957227,18.515697],level:"street",districts:[]}]},{name:"琼海市",center:[110.474497,19.259134],level:"city",districts:[{name:"博鳌镇",center:[110.586606,19.159714],level:"street",districts:[]},{name:"石壁镇",center:[110.308524,19.163306],level:"street",districts:[]},{name:"会山镇",center:[110.269379,19.067147],level:"street",districts:[]},{name:"大路镇",center:[110.476468,19.381023],level:"street",districts:[]},{name:"万泉镇",center:[110.409657,19.243071],level:"street",districts:[]},{name:"潭门镇",center:[110.61694,19.24169],level:"street",districts:[]},{name:"加积街道",center:[110.465066,19.241859],level:"street",districts:[]},{name:"中原镇",center:[110.468478,19.151912],level:"street",districts:[]},{name:"阳江镇",center:[110.349228,19.099221],level:"street",districts:[]},{name:"朝阳乡",center:[110.530134,19.152241],level:"street",districts:[]},{name:"长坡镇",center:[110.606781,19.33564],level:"street",districts:[]},{name:"塔洋镇",center:[110.508274,19.288196],level:"street",districts:[]},{name:"嘉积镇",center:[110.485992,19.242966],level:"street",districts:[]},{name:"龙江镇",center:[110.324964,19.146787],level:"street",districts:[]}]},{name:"琼中黎族苗族自治县",center:[109.838389,19.033369],level:"city",districts:[{name:"中平镇",center:[110.06023,19.061179],level:"street",districts:[]},{name:"和平镇",center:[110.029212,18.897423],level:"street",districts:[]},{name:"什运乡",center:[109.607969,18.992017],level:"street",districts:[]},{name:"营根镇",center:[109.83431,19.032547],level:"street",districts:[]},{name:"红毛镇",center:[109.689932,19.030684],level:"street",districts:[]},{name:"吊罗山乡",center:[109.878143,18.792633],level:"street",districts:[]},{name:"上安乡",center:[109.837283,18.876829],level:"street",districts:[]},{name:"湾岭镇",center:[109.900496,19.141306],level:"street",districts:[]},{name:"黎母山镇",center:[109.78685,19.267691],level:"street",districts:[]}]},{name:"屯昌县",center:[110.103415,19.351765],level:"city",districts:[{name:"南吕镇",center:[110.08253,19.2507],level:"street",districts:[]},{name:"西昌镇",center:[110.0455,19.433661],level:"street",districts:[]},{name:"新兴镇",center:[110.182802,19.506743],level:"street",districts:[]},{name:"乌坡镇",center:[110.075965,19.180023],level:"street",districts:[]},{name:"枫木镇",center:[110.019489,19.214452],level:"street",districts:[]},{name:"坡心镇",center:[110.089942,19.307033],level:"street",districts:[]},{name:"屯城镇",center:[110.104886,19.371561],level:"street",districts:[]},{name:"南坤镇",center:[109.948275,19.318366],level:"street",districts:[]}]},{name:"万宁市",center:[110.391073,18.795143],level:"city",districts:[{name:"龙滚镇",center:[110.519209,19.058665],level:"street",districts:[]},{name:"礼纪镇",center:[110.317655,18.75043],level:"street",districts:[]},{name:"后安镇",center:[110.443872,18.867778],level:"street",districts:[]},{name:"大茂镇",center:[110.396556,18.849039],level:"street",districts:[]},{name:"北大镇",center:[110.336053,18.920125],level:"street",districts:[]},{name:"万城镇",center:[110.397028,18.794435],level:"street",districts:[]},{name:"南桥镇",center:[110.152697,18.680116],level:"street",districts:[]},{name:"长丰镇",center:[110.327657,18.800665],level:"street",districts:[]},{name:"东澳镇",center:[110.401814,18.714928],level:"street",districts:[]},{name:"三更罗镇",center:[110.186521,18.860493],level:"street",districts:[]},{name:"和乐镇",center:[110.477641,18.903521],level:"street",districts:[]},{name:"山根镇",center:[110.486591,18.967334],level:"street",districts:[]}]},{name:"文昌市",center:[110.797717,19.543422],level:"city",districts:[{name:"重兴镇",center:[110.59675,19.411589],level:"street",districts:[]},{name:"潭牛镇",center:[110.735357,19.710084],level:"street",districts:[]},{name:"文城镇",center:[110.753868,19.613781],level:"street",districts:[]},{name:"会文镇",center:[110.731756,19.462573],level:"street",districts:[]},{name:"东路镇",center:[110.706497,19.791949],level:"street",districts:[]},{name:"冯坡镇",center:[110.783953,19.964651],level:"street",districts:[]},{name:"文教镇",center:[110.90782,19.66768],level:"street",districts:[]},{name:"锦山镇",center:[110.69748,19.99583],level:"street",districts:[]},{name:"蓬莱镇",center:[110.541209,19.536767],level:"street",districts:[]},{name:"东阁镇",center:[110.849213,19.656873],level:"street",districts:[]},{name:"昌洒镇",center:[110.900498,19.76179],level:"street",districts:[]},{name:"铺前镇",center:[110.580002,20.023731],level:"street",districts:[]},{name:"翁田镇",center:[110.880179,19.931473],level:"street",districts:[]},{name:"东郊镇",center:[110.851831,19.573201],level:"street",districts:[]},{name:"抱罗镇",center:[110.748935,19.843477],level:"street",districts:[]},{name:"公坡镇",center:[110.808679,19.789147],level:"street",districts:[]},{name:"龙楼镇",center:[110.968604,19.653286],level:"street",districts:[]}]},{name:"五指山市",center:[109.516925,18.775146],level:"city",districts:[{name:"番阳镇",center:[109.39785,18.874421],level:"street",districts:[]},{name:"冲山镇",center:[109.516626,18.780681],level:"street",districts:[]},{name:"毛阳镇",center:[109.50804,18.936964],level:"street",districts:[]},{name:"水满乡",center:[109.667012,18.881007],level:"street",districts:[]},{name:"通什镇",center:[109.517189,18.780692],level:"street",districts:[]},{name:"南圣镇",center:[109.592708,18.738439],level:"street",districts:[]},{name:"毛道乡",center:[109.410699,18.791255],level:"street",districts:[]},{name:"畅好乡",center:[109.48221,18.734951],level:"street",districts:[]}]}]},{name:"贵州省",center:[106.70546,26.600055],level:"province",districts:[{name:"安顺市",center:[105.947594,26.253088],level:"city",districts:[{name:"关岭布依族苗族自治县",center:[105.61933,25.94361],level:"district",districts:[]},{name:"平坝区",center:[106.256412,26.405715],level:"district",districts:[]},{name:"普定县",center:[105.743277,26.301565],level:"district",districts:[]},{name:"西秀区",center:[105.965116,26.245315],level:"district",districts:[]},{name:"镇宁布依族苗族自治县",center:[105.770283,26.058086],level:"district",districts:[]},{name:"紫云苗族布依族自治县",center:[106.084441,25.751047],level:"district",districts:[]}]},{name:"毕节市",center:[105.291702,27.283908],level:"city",districts:[{name:"大方县",center:[105.613037,27.141735],level:"district",districts:[]},{name:"赫章县",center:[104.727418,27.123078],level:"district",districts:[]},{name:"金沙县",center:[106.220227,27.459214],level:"district",districts:[]},{name:"纳雍县",center:[105.382714,26.777645],level:"district",districts:[]},{name:"七星关区",center:[105.30474,27.298458],level:"district",districts:[]},{name:"黔西县",center:[106.033544,27.007713],level:"district",districts:[]},{name:"威宁彝族回族苗族自治县",center:[104.253071,26.873806],level:"district",districts:[]},{name:"织金县",center:[105.770542,26.663449],level:"district",districts:[]}]},{name:"贵阳市",center:[106.630153,26.647661],level:"city",districts:[{name:"白云区",center:[106.623007,26.678561],level:"district",districts:[]},{name:"观山湖区",center:[106.622453,26.60145],level:"district",districts:[]},{name:"花溪区",center:[106.67026,26.409817],level:"district",districts:[]},{name:"开阳县",center:[106.965089,27.057764],level:"district",districts:[]},{name:"南明区",center:[106.714374,26.567944],level:"district",districts:[]},{name:"清镇市",center:[106.470714,26.556079],level:"district",districts:[]},{name:"乌当区",center:[106.750625,26.630845],level:"district",districts:[]},{name:"息烽县",center:[106.740407,27.090479],level:"district",districts:[]},{name:"修文县",center:[106.592108,26.838926],level:"district",districts:[]},{name:"云岩区",center:[106.724494,26.604688],level:"district",districts:[]}]},{name:"六盘水市",center:[104.830458,26.592707],level:"city",districts:[{name:"六枝特区",center:[105.476608,26.213108],level:"district",districts:[]},{name:"盘州市",center:[104.471375,25.709852],level:"district",districts:[]},{name:"水城县",center:[104.95783,26.547904],level:"district",districts:[]},{name:"钟山区",center:[104.843555,26.574979],level:"district",districts:[]}]},{name:"黔西南布依族苗族自治州",center:[104.906397,25.087856],level:"city",districts:[{name:"安龙县",center:[105.442701,25.099014],level:"district",districts:[]},{name:"册亨县",center:[105.811592,24.983663],level:"district",districts:[]},{name:"普安县",center:[104.953062,25.784135],level:"district",districts:[]},{name:"晴隆县",center:[105.218991,25.834783],level:"district",districts:[]},{name:"望谟县",center:[106.099617,25.178421],level:"district",districts:[]},{name:"兴仁县",center:[105.186237,25.435183],level:"district",districts:[]},{name:"兴义市",center:[104.895467,25.09204],level:"district",districts:[]},{name:"贞丰县",center:[105.649864,25.38576],level:"district",districts:[]}]},{name:"黔南布依族苗族自治州",center:[107.522171,26.253275],level:"city",districts:[{name:"都匀市",center:[107.518847,26.259427],level:"district",districts:[]},{name:"独山县",center:[107.545048,25.822132],level:"district",districts:[]},{name:"福泉市",center:[107.520386,26.686335],level:"district",districts:[]},{name:"贵定县",center:[107.232793,26.557089],level:"district",districts:[]},{name:"惠水县",center:[106.656442,26.13278],level:"district",districts:[]},{name:"荔波县",center:[107.898882,25.423895],level:"district",districts:[]},{name:"龙里县",center:[106.979524,26.453154],level:"district",districts:[]},{name:"罗甸县",center:[106.751589,25.426173],level:"district",districts:[]},{name:"平塘县",center:[107.322323,25.822349],level:"district",districts:[]},{name:"三都水族自治县",center:[107.869749,25.983202],level:"district",districts:[]},{name:"瓮安县",center:[107.470942,27.078441],level:"district",districts:[]},{name:"长顺县",center:[106.441805,26.025626],level:"district",districts:[]}]},{name:"黔东南苗族侗族自治州",center:[107.982874,26.583457],level:"city",districts:[{name:"岑巩县",center:[108.81606,27.173887],level:"district",districts:[]},{name:"从江县",center:[108.905329,25.753009],level:"district",districts:[]},{name:"丹寨县",center:[107.788727,26.19832],level:"district",districts:[]},{name:"黄平县",center:[107.916411,26.905396],level:"district",districts:[]},{name:"剑河县",center:[108.441501,26.728274],level:"district",districts:[]},{name:"锦屏县",center:[109.200534,26.676233],level:"district",districts:[]},{name:"凯里市",center:[107.97754,26.582963],level:"district",districts:[]},{name:"雷山县",center:[108.07754,26.378442],level:"district",districts:[]},{name:"黎平县",center:[109.136932,26.230706],level:"district",districts:[]},{name:"麻江县",center:[107.589359,26.491105],level:"district",districts:[]},{name:"三穗县",center:[108.675267,26.952967],level:"district",districts:[]},{name:"榕江县",center:[108.52188,25.931893],level:"district",districts:[]},{name:"施秉县",center:[108.124379,27.03292],level:"district",districts:[]},{name:"台江县",center:[108.321245,26.667525],level:"district",districts:[]},{name:"天柱县",center:[109.207751,26.909639],level:"district",districts:[]},{name:"镇远县",center:[108.429534,27.049497],level:"district",districts:[]}]},{name:"铜仁市",center:[109.189598,27.731514],level:"city",districts:[{name:"碧江区",center:[109.263998,27.815927],level:"district",districts:[]},{name:"德江县",center:[108.119807,28.263963],level:"district",districts:[]},{name:"江口县",center:[108.839557,27.69965],level:"district",districts:[]},{name:"石阡县",center:[108.223612,27.513829],level:"district",districts:[]},{name:"思南县",center:[108.253882,27.93755],level:"district",districts:[]},{name:"松桃苗族自治县",center:[109.202886,28.154071],level:"district",districts:[]},{name:"万山区",center:[109.213644,27.517896],level:"district",districts:[]},{name:"沿河土家族自治县",center:[108.50387,28.563927],level:"district",districts:[]},{name:"印江土家族苗族自治县",center:[108.409751,27.994246],level:"district",districts:[]},{name:"玉屏侗族自治县",center:[108.906411,27.235813],level:"district",districts:[]}]},{name:"遵义市",center:[106.927389,27.725654],level:"city",districts:[{name:"播州区",center:[106.829574,27.536298],level:"district",districts:[]},{name:"赤水市",center:[105.697472,28.590337],level:"district",districts:[]},{name:"道真仡佬族苗族自治县",center:[107.613133,28.862425],level:"district",districts:[]},{name:"凤冈县",center:[107.716355,27.954695],level:"district",districts:[]},{name:"红花岗区",center:[106.8937,27.644754],level:"district",districts:[]},{name:"汇川区",center:[106.93427,27.750125],level:"district",districts:[]},{name:"湄潭县",center:[107.465407,27.749055],level:"district",districts:[]},{name:"仁怀市",center:[106.40109,27.792514],level:"district",districts:[]},{name:"绥阳县",center:[107.191222,27.946222],level:"district",districts:[]},{name:"桐梓县",center:[106.825198,28.133311],level:"district",districts:[]},{name:"务川仡佬族苗族自治县",center:[107.898956,28.563086],level:"district",districts:[]},{name:"习水县",center:[106.197137,28.33127],level:"district",districts:[]},{name:"余庆县",center:[107.905197,27.215491],level:"district",districts:[]},{name:"正安县",center:[107.453945,28.553285],level:"district",districts:[]}]}]},{name:"山西省",center:[112.562678,37.873499],level:"province",districts:[{name:"大同市",center:[113.300129,40.076763],level:"city",districts:[{name:"城区",center:[113.298026,40.075666],level:"district",districts:[]},{name:"大同县",center:[113.61244,40.040294],level:"district",districts:[]},{name:"广灵县",center:[114.282758,39.760281],level:"district",districts:[]},{name:"浑源县",center:[113.699475,39.693406],level:"district",districts:[]},{name:"矿区",center:[113.177206,40.036858],level:"district",districts:[]},{name:"灵丘县",center:[114.23435,39.442406],level:"district",districts:[]},{name:"南郊区",center:[113.149693,40.005404],level:"district",districts:[]},{name:"天镇县",center:[114.090867,40.420237],level:"district",districts:[]},{name:"新荣区",center:[113.140004,40.255866],level:"district",districts:[]},{name:"阳高县",center:[113.748944,40.361059],level:"district",districts:[]},{name:"左云县",center:[112.703008,40.013442],level:"district",districts:[]}]},{name:"晋城市",center:[112.851486,35.490684],level:"city",districts:[{name:"城区",center:[112.853555,35.501571],level:"district",districts:[]},{name:"高平市",center:[112.92392,35.797997],level:"district",districts:[]},{name:"陵川县",center:[113.280688,35.775685],level:"district",districts:[]},{name:"沁水县",center:[112.186738,35.690141],level:"district",districts:[]},{name:"阳城县",center:[112.414738,35.486029],level:"district",districts:[]},{name:"泽州县",center:[112.899137,35.617221],level:"district",districts:[]}]},{name:"晋中市",center:[112.752652,37.687357],level:"city",districts:[{name:"和顺县",center:[113.570415,37.32957],level:"district",districts:[]},{name:"介休市",center:[111.916711,37.026944],level:"district",districts:[]},{name:"灵石县",center:[111.77864,36.847927],level:"district",districts:[]},{name:"平遥县",center:[112.176136,37.189421],level:"district",districts:[]},{name:"祁县",center:[112.335542,37.357869],level:"district",districts:[]},{name:"寿阳县",center:[113.176373,37.895191],level:"district",districts:[]},{name:"太谷县",center:[112.551305,37.421307],level:"district",districts:[]},{name:"昔阳县",center:[113.706977,37.61253],level:"district",districts:[]},{name:"榆次区",center:[112.708224,37.697794],level:"district",districts:[]},{name:"榆社县",center:[112.975209,37.070916],level:"district",districts:[]},{name:"左权县",center:[113.379403,37.082943],level:"district",districts:[]}]},{name:"临汾市",center:[111.518975,36.088005],level:"city",districts:[{name:"安泽县",center:[112.250144,36.147787],level:"district",districts:[]},{name:"大宁县",center:[110.75291,36.465102],level:"district",districts:[]},{name:"汾西县",center:[111.56395,36.652854],level:"district",districts:[]},{name:"浮山县",center:[111.848883,35.968124],level:"district",districts:[]},{name:"古县",center:[111.920465,36.266914],level:"district",districts:[]},{name:"洪洞县",center:[111.674965,36.253747],level:"district",districts:[]},{name:"侯马市",center:[111.372002,35.619105],level:"district",districts:[]},{name:"霍州市",center:[111.755398,36.56893],level:"district",districts:[]},{name:"吉县",center:[110.681763,36.098188],level:"district",districts:[]},{name:"蒲县",center:[111.096439,36.411826],level:"district",districts:[]},{name:"曲沃县",center:[111.47586,35.641086],level:"district",districts:[]},{name:"隰县",center:[110.940637,36.69333],level:"district",districts:[]},{name:"襄汾县",center:[111.441725,35.876293],level:"district",districts:[]},{name:"乡宁县",center:[110.847021,35.970389],level:"district",districts:[]},{name:"尧都区",center:[111.579554,36.07884],level:"district",districts:[]},{name:"翼城县",center:[111.718951,35.738576],level:"district",districts:[]},{name:"永和县",center:[110.632006,36.759507],level:"district",districts:[]}]},{name:"吕梁市",center:[111.144699,37.519126],level:"city",districts:[{name:"方山县",center:[111.244098,37.894631],level:"district",districts:[]},{name:"汾阳市",center:[111.770477,37.261756],level:"district",districts:[]},{name:"交城县",center:[112.156064,37.551963],level:"district",districts:[]},{name:"交口县",center:[111.181151,36.982186],level:"district",districts:[]},{name:"岚县",center:[111.671917,38.279299],level:"district",districts:[]},{name:"离石区",center:[111.150695,37.51786],level:"district",districts:[]},{name:"柳林县",center:[110.889007,37.429772],level:"district",districts:[]},{name:"临县",center:[110.992093,37.950758],level:"district",districts:[]},{name:"石楼县",center:[110.834634,36.99857],level:"district",districts:[]},{name:"文水县",center:[112.028866,37.438101],level:"district",districts:[]},{name:"孝义市",center:[111.778818,37.146294],level:"district",districts:[]},{name:"兴县",center:[111.127667,38.462389],level:"district",districts:[]},{name:"中阳县",center:[111.179657,37.357058],level:"district",districts:[]}]},{name:"朔州市",center:[112.432991,39.331855],level:"city",districts:[{name:"怀仁县",center:[113.131717,39.821627],level:"district",districts:[]},{name:"平鲁区",center:[112.28833,39.512155],level:"district",districts:[]},{name:"山阴县",center:[112.816413,39.527893],level:"district",districts:[]},{name:"朔城区",center:[112.432312,39.319519],level:"district",districts:[]},{name:"应县",center:[113.191098,39.554247],level:"district",districts:[]},{name:"右玉县",center:[112.466989,39.989063],level:"district",districts:[]}]},{name:"太原市",center:[112.548879,37.87059],level:"city",districts:[{name:"古交市",center:[112.175853,37.907129],level:"district",districts:[]},{name:"尖草坪区",center:[112.486691,37.940387],level:"district",districts:[]},{name:"晋源区",center:[112.47794,37.715193],level:"district",districts:[]},{name:"娄烦县",center:[111.797083,38.067932],level:"district",districts:[]},{name:"清徐县",center:[112.358667,37.607443],level:"district",districts:[]},{name:"万柏林区",center:[112.515937,37.85958],level:"district",districts:[]},{name:"小店区",center:[112.565659,37.736525],level:"district",districts:[]},{name:"杏花岭区",center:[112.570604,37.893955],level:"district",districts:[]},{name:"阳曲县",center:[112.672952,38.058488],level:"district",districts:[]},{name:"迎泽区",center:[112.5634,37.863451],level:"district",districts:[]}]},{name:"阳泉市",center:[113.580519,37.856971],level:"city",districts:[{name:"城区",center:[113.600669,37.847436],level:"district",districts:[]},{name:"郊区",center:[113.594163,37.944679],level:"district",districts:[]},{name:"矿区",center:[113.555279,37.868494],level:"district",districts:[]},{name:"平定县",center:[113.630107,37.804988],level:"district",districts:[]},{name:"盂县",center:[113.41233,38.085619],level:"district",districts:[]}]},{name:"忻州市",center:[112.734174,38.416663],level:"city",districts:[{name:"保德县",center:[111.086564,39.022487],level:"district",districts:[]},{name:"代县",center:[112.960282,39.066917],level:"district",districts:[]},{name:"定襄县",center:[112.957237,38.473506],level:"district",districts:[]},{name:"繁峙县",center:[113.265563,39.188811],level:"district",districts:[]},{name:"河曲县",center:[111.138472,39.384482],level:"district",districts:[]},{name:"静乐县",center:[111.939498,38.359306],level:"district",districts:[]},{name:"岢岚县",center:[111.57285,38.70418],level:"district",districts:[]},{name:"宁武县",center:[112.304722,39.001524],level:"district",districts:[]},{name:"偏关县",center:[111.508831,39.436306],level:"district",districts:[]},{name:"神池县",center:[112.211296,39.090552],level:"district",districts:[]},{name:"五寨县",center:[111.846904,38.910726],level:"district",districts:[]},{name:"五台县",center:[113.255309,38.728315],level:"district",districts:[]},{name:"忻府区",center:[112.746046,38.404242],level:"district",districts:[]},{name:"原平市",center:[112.711058,38.731402],level:"district",districts:[]}]},{name:"运城市",center:[111.00746,35.026516],level:"city",districts:[{name:"河津市",center:[110.712063,35.596383],level:"district",districts:[]},{name:"稷山县",center:[110.983333,35.604025],level:"district",districts:[]},{name:"绛县",center:[111.568236,35.49119],level:"district",districts:[]},{name:"临猗县",center:[110.774547,35.144277],level:"district",districts:[]},{name:"平陆县",center:[111.194133,34.82926],level:"district",districts:[]},{name:"芮城县",center:[110.694369,34.693579],level:"district",districts:[]},{name:"万荣县",center:[110.838024,35.415253],level:"district",districts:[]},{name:"闻喜县",center:[111.22472,35.356644],level:"district",districts:[]},{name:"夏县",center:[111.220456,35.141363],level:"district",districts:[]},{name:"新绛县",center:[111.224734,35.616251],level:"district",districts:[]},{name:"盐湖区",center:[110.998272,35.015101],level:"district",districts:[]},{name:"永济市",center:[110.447543,34.8671],level:"district",districts:[]},{name:"垣曲县",center:[111.670108,35.297369],level:"district",districts:[]}]},{name:"长治市",center:[113.116404,36.195409],level:"city",districts:[{name:"城区",center:[113.123088,36.20353],level:"district",districts:[]},{name:"壶关县",center:[113.207049,36.115448],level:"district",districts:[]},{name:"郊区",center:[113.101211,36.218388],level:"district",districts:[]},{name:"黎城县",center:[113.387155,36.502328],level:"district",districts:[]},{name:"潞城市",center:[113.228852,36.334104],level:"district",districts:[]},{name:"平顺县",center:[113.435961,36.200179],level:"district",districts:[]},{name:"沁县",center:[112.699226,36.756063],level:"district",districts:[]},{name:"沁源县",center:[112.337446,36.5002],level:"district",districts:[]},{name:"屯留县",center:[112.891998,36.315663],level:"district",districts:[]},{name:"武乡县",center:[112.864561,36.837625],level:"district",districts:[]},{name:"襄垣县",center:[113.051491,36.535817],level:"district",districts:[]},{name:"长治县",center:[113.051407,36.052858],level:"district",districts:[]},{name:"长子县",center:[112.8779,36.122334],level:"district",districts:[]}]}]},{name:"台湾省",center:[121.509062,25.044332],level:"province",districts:[]},{name:"甘肃省",center:[103.826447,36.05956],level:"province",districts:[{name:"白银市",center:[104.138771,36.545261],level:"city",districts:[{name:"白银区",center:[104.148556,36.535398],level:"district",districts:[]},{name:"会宁县",center:[105.053358,35.692823],level:"district",districts:[]},{name:"景泰县",center:[104.063091,37.183804],level:"district",districts:[]},{name:"靖远县",center:[104.676774,36.571365],level:"district",districts:[]},{name:"平川区",center:[104.825208,36.728304],level:"district",districts:[]}]},{name:"甘南藏族自治州",center:[102.910995,34.983409],level:"city",districts:[{name:"迭部县",center:[103.221869,34.055938],level:"district",districts:[]},{name:"合作市",center:[102.910484,35.000286],level:"district",districts:[]},{name:"临潭县",center:[103.353919,34.692747],level:"district",districts:[]},{name:"碌曲县",center:[102.487327,34.590944],level:"district",districts:[]},{name:"玛曲县",center:[102.072698,33.997712],level:"district",districts:[]},{name:"夏河县",center:[102.521807,35.202503],level:"district",districts:[]},{name:"舟曲县",center:[104.251482,33.793631],level:"district",districts:[]},{name:"卓尼县",center:[103.507109,34.589588],level:"district",districts:[]}]},{name:"定西市",center:[104.592225,35.606978],level:"city",districts:[{name:"安定区",center:[104.610668,35.580629],level:"district",districts:[]},{name:"临洮县",center:[103.859565,35.394988],level:"district",districts:[]},{name:"陇西县",center:[104.634983,35.00394],level:"district",districts:[]},{name:"岷县",center:[104.03688,34.438075],level:"district",districts:[]},{name:"通渭县",center:[105.24206,35.210831],level:"district",districts:[]},{name:"渭源县",center:[104.215467,35.136755],level:"district",districts:[]},{name:"漳县",center:[104.471572,34.848444],level:"district",districts:[]}]},{name:"嘉峪关市",center:[98.289419,39.772554],level:"city",districts:[{name:"嘉峪关乡",center:[98.225891,39.812293],level:"street",districts:[]},{name:"前进路街道",center:[98.261242,39.767627],level:"street",districts:[]},{name:"五一路街道",center:[98.272798,39.788242],level:"street",districts:[]},{name:"建设路街道",center:[98.280403,39.785651],level:"street",districts:[]},{name:"新华路街道",center:[98.268344,39.808651],level:"street",districts:[]},{name:"前进街道",center:[98.260744,39.763898],level:"street",districts:[]},{name:"峪泉镇",center:[98.231491,39.807959],level:"street",districts:[]},{name:"新城镇",center:[98.451709,39.875401],level:"street",districts:[]},{name:"文殊镇",center:[98.378358,39.693957],level:"street",districts:[]}]},{name:"金昌市",center:[102.188117,38.520717],level:"city",districts:[{name:"金川区",center:[102.194015,38.521087],level:"district",districts:[]},{name:"永昌县",center:[101.984458,38.243434],level:"district",districts:[]}]},{name:"酒泉市",center:[98.493927,39.732795],level:"city",districts:[{name:"阿克塞哈萨克族自治县",center:[94.340204,39.633943],level:"district",districts:[]},{name:"敦煌市",center:[94.661941,40.142089],level:"district",districts:[]},{name:"瓜州县",center:[95.782318,40.520538],level:"district",districts:[]},{name:"金塔县",center:[98.901252,39.983955],level:"district",districts:[]},{name:"肃州区",center:[98.507843,39.744953],level:"district",districts:[]},{name:"肃北蒙古族自治县",center:[94.876579,39.51245],level:"district",districts:[]},{name:"玉门市",center:[97.045661,40.292106],level:"district",districts:[]}]},{name:"兰州市",center:[103.834303,36.061089],level:"city",districts:[{name:"安宁区",center:[103.719054,36.104579],level:"district",districts:[]},{name:"城关区",center:[103.825307,36.057464],level:"district",districts:[]},{name:"皋兰县",center:[103.947377,36.332663],level:"district",districts:[]},{name:"红古区",center:[102.859323,36.345669],level:"district",districts:[]},{name:"七里河区",center:[103.785949,36.066146],level:"district",districts:[]},{name:"西固区",center:[103.627951,36.088552],level:"district",districts:[]},{name:"永登县",center:[103.26038,36.736513],level:"district",districts:[]},{name:"榆中县",center:[104.112527,35.843056],level:"district",districts:[]}]},{name:"临夏回族自治州",center:[103.210655,35.601352],level:"city",districts:[{name:"东乡族自治县",center:[103.389346,35.663752],level:"district",districts:[]},{name:"广河县",center:[103.575834,35.488051],level:"district",districts:[]},{name:"和政县",center:[103.350997,35.424603],level:"district",districts:[]},{name:"积石山保安族东乡族撒拉族自治县",center:[102.875843,35.71766],level:"district",districts:[]},{name:"康乐县",center:[103.708354,35.370505],level:"district",districts:[]},{name:"临夏市",center:[103.243021,35.604376],level:"district",districts:[]},{name:"临夏县",center:[103.039826,35.478722],level:"district",districts:[]},{name:"永靖县",center:[103.285853,35.958306],level:"district",districts:[]}]},{name:"陇南市",center:[104.960851,33.37068],level:"city",districts:[{name:"成县",center:[105.742424,33.75061],level:"district",districts:[]},{name:"宕昌县",center:[104.393385,34.047261],level:"district",districts:[]},{name:"徽县",center:[106.08778,33.768826],level:"district",districts:[]},{name:"康县",center:[105.609169,33.329136],level:"district",districts:[]},{name:"礼县",center:[105.17864,34.189345],level:"district",districts:[]},{name:"两当县",center:[106.304966,33.908917],level:"district",districts:[]},{name:"文县",center:[104.683433,32.943815],level:"district",districts:[]},{name:"武都区",center:[104.926337,33.392211],level:"district",districts:[]},{name:"西和县",center:[105.298756,34.014215],level:"district",districts:[]}]},{name:"平凉市",center:[106.665061,35.542606],level:"city",districts:[{name:"崇信县",center:[107.025763,35.305596],level:"district",districts:[]},{name:"华亭县",center:[106.653158,35.218292],level:"district",districts:[]},{name:"泾川县",center:[107.36785,35.332666],level:"district",districts:[]},{name:"静宁县",center:[105.732556,35.521976],level:"district",districts:[]},{name:"崆峒区",center:[106.674767,35.542491],level:"district",districts:[]},{name:"灵台县",center:[107.595874,35.070027],level:"district",districts:[]},{name:"庄浪县",center:[106.036686,35.202385],level:"district",districts:[]}]},{name:"庆阳市",center:[107.643571,35.70898],level:"city",districts:[{name:"合水县",center:[108.019554,35.819194],level:"district",districts:[]},{name:"华池县",center:[107.990062,36.461306],level:"district",districts:[]},{name:"环县",center:[107.308501,36.568434],level:"district",districts:[]},{name:"宁县",center:[107.928371,35.502176],level:"district",districts:[]},{name:"庆城县",center:[107.881802,36.016299],level:"district",districts:[]},{name:"西峰区",center:[107.651077,35.730652],level:"district",districts:[]},{name:"镇原县",center:[107.200832,35.677462],level:"district",districts:[]},{name:"正宁县",center:[108.359865,35.49178],level:"district",districts:[]}]},{name:"天水市",center:[105.724979,34.580885],level:"city",districts:[{name:"甘谷县",center:[105.340747,34.745486],level:"district",districts:[]},{name:"麦积区",center:[105.889556,34.570384],level:"district",districts:[]},{name:"秦安县",center:[105.674982,34.858916],level:"district",districts:[]},{name:"秦州区",center:[105.724215,34.580888],level:"district",districts:[]},{name:"清水县",center:[106.137293,34.749864],level:"district",districts:[]},{name:"武山县",center:[104.890587,34.72139],level:"district",districts:[]},{name:"张家川回族自治县",center:[106.204517,34.988037],level:"district",districts:[]}]},{name:"武威市",center:[102.638201,37.928267],level:"city",districts:[{name:"古浪县",center:[102.897533,37.47012],level:"district",districts:[]},{name:"凉州区",center:[102.642184,37.928224],level:"district",districts:[]},{name:"民勤县",center:[103.093791,38.62435],level:"district",districts:[]},{name:"天祝藏族自治县",center:[103.141757,36.97174],level:"district",districts:[]}]},{name:"张掖市",center:[100.449913,38.925548],level:"city",districts:[{name:"甘州区",center:[100.415096,38.944662],level:"district",districts:[]},{name:"高台县",center:[99.819519,39.378311],level:"district",districts:[]},{name:"临泽县",center:[100.164283,39.152462],level:"district",districts:[]},{name:"民乐县",center:[100.812629,38.430347],level:"district",districts:[]},{name:"山丹县",center:[101.088529,38.784505],level:"district",districts:[]},{name:"肃南裕固族自治县",center:[99.615601,38.836931],level:"district",districts:[]}]}]},{name:"上海市",center:[121.473662,31.230372],level:"province",districts:[{name:"上海城区",center:[121.473662,31.230372],level:"city",districts:[{name:"宝山区",center:[121.489612,31.405457],level:"district",districts:[]},{name:"崇明区",center:[121.397421,31.623728],level:"district",districts:[]},{name:"奉贤区",center:[121.474055,30.917766],level:"district",districts:[]},{name:"虹口区",center:[121.505133,31.2646],level:"district",districts:[]},{name:"黄浦区",center:[121.484428,31.231739],level:"district",districts:[]},{name:"嘉定区",center:[121.265374,31.375869],level:"district",districts:[]},{name:"金山区",center:[121.342455,30.741798],level:"district",districts:[]},{name:"静安区",center:[121.447453,31.227906],level:"district",districts:[]},{name:"闵行区",center:[121.380831,31.1129],level:"district",districts:[]},{name:"浦东新区",center:[121.544379,31.221517],level:"district",districts:[]},{name:"普陀区",center:[121.395514,31.249603],level:"district",districts:[]},{name:"青浦区",center:[121.124178,31.150681],level:"district",districts:[]},{name:"松江区",center:[121.227747,31.032243],level:"district",districts:[]},{name:"徐汇区",center:[121.436128,31.188464],level:"district",districts:[]},{name:"杨浦区",center:[121.525727,31.259822],level:"district",districts:[]},{name:"长宁区",center:[121.424622,31.220372],level:"district",districts:[]}]}]},{name:"安徽省",center:[117.329949,31.733806],level:"province",districts:[{name:"安庆市",center:[117.115101,30.531919],level:"city",districts:[{name:"大观区",center:[117.013469,30.553697],level:"district",districts:[]},{name:"怀宁县",center:[116.829475,30.733824],level:"district",districts:[]},{name:"潜山县",center:[116.581371,30.631136],level:"district",districts:[]},{name:"宿松县",center:[116.129105,30.153746],level:"district",districts:[]},{name:"太湖县",center:[116.308795,30.45422],level:"district",districts:[]},{name:"桐城市",center:[116.936748,31.035848],level:"district",districts:[]},{name:"望江县",center:[116.706498,30.128002],level:"district",districts:[]},{name:"宜秀区",center:[116.987542,30.613332],level:"district",districts:[]},{name:"迎江区",center:[117.09115,30.511548],level:"district",districts:[]},{name:"岳西县",center:[116.359692,30.849762],level:"district",districts:[]}]},{name:"蚌埠市",center:[117.388512,32.91663],level:"city",districts:[{name:"蚌山区",center:[117.373595,32.917048],level:"district",districts:[]},{name:"固镇县",center:[117.316913,33.31688],level:"district",districts:[]},{name:"淮上区",center:[117.35933,32.965435],level:"district",districts:[]},{name:"怀远县",center:[117.205237,32.970031],level:"district",districts:[]},{name:"龙子湖区",center:[117.379778,32.950611],level:"district",districts:[]},{name:"五河县",center:[117.879486,33.127823],level:"district",districts:[]},{name:"禹会区",center:[117.342155,32.929799],level:"district",districts:[]}]},{name:"亳州市",center:[115.77867,33.844592],level:"city",districts:[{name:"利辛县",center:[116.208564,33.144515],level:"district",districts:[]},{name:"蒙城县",center:[116.564247,33.26583],level:"district",districts:[]},{name:"谯城区",center:[115.779025,33.876235],level:"district",districts:[]},{name:"涡阳县",center:[116.215665,33.492921],level:"district",districts:[]}]},{name:"滁州市",center:[118.327944,32.255636],level:"city",districts:[{name:"定远县",center:[117.698562,32.530981],level:"district",districts:[]},{name:"凤阳县",center:[117.531622,32.874735],level:"district",districts:[]},{name:"来安县",center:[118.435718,32.452199],level:"district",districts:[]},{name:"琅琊区",center:[118.305961,32.294631],level:"district",districts:[]},{name:"明光市",center:[118.018193,32.78196],level:"district",districts:[]},{name:"南谯区",center:[118.41697,32.200197],level:"district",districts:[]},{name:"全椒县",center:[118.274149,32.08593],level:"district",districts:[]},{name:"天长市",center:[119.004816,32.667571],level:"district",districts:[]}]},{name:"池州市",center:[117.491592,30.664779],level:"city",districts:[{name:"东至县",center:[117.027618,30.111163],level:"district",districts:[]},{name:"贵池区",center:[117.567264,30.687219],level:"district",districts:[]},{name:"青阳县",center:[117.84743,30.63923],level:"district",districts:[]},{name:"石台县",center:[117.486306,30.210313],level:"district",districts:[]}]},{name:"阜阳市",center:[115.814504,32.890479],level:"city",districts:[{name:"阜南县",center:[115.595643,32.658297],level:"district",districts:[]},{name:"界首市",center:[115.374821,33.258244],level:"district",districts:[]},{name:"临泉县",center:[115.263115,33.039715],level:"district",districts:[]},{name:"太和县",center:[115.621941,33.160327],level:"district",districts:[]},{name:"颍东区",center:[115.856762,32.912477],level:"district",districts:[]},{name:"颍泉区",center:[115.80835,32.925211],level:"district",districts:[]},{name:"颍上县",center:[116.256772,32.653211],level:"district",districts:[]},{name:"颍州区",center:[115.806942,32.883468],level:"district",districts:[]}]},{name:"合肥市",center:[117.227219,31.820591],level:"city",districts:[{name:"包河区",center:[117.309519,31.793859],level:"district",districts:[]},{name:"巢湖市",center:[117.890354,31.624522],level:"district",districts:[]},{name:"肥西县",center:[117.157981,31.706809],level:"district",districts:[]},{name:"肥东县",center:[117.469382,31.88794],level:"district",districts:[]},{name:"庐阳区",center:[117.264786,31.878589],level:"district",districts:[]},{name:"庐江县",center:[117.2882,31.256524],level:"district",districts:[]},{name:"蜀山区",center:[117.260521,31.85124],level:"district",districts:[]},{name:"瑶海区",center:[117.309546,31.857917],level:"district",districts:[]},{name:"长丰县",center:[117.167564,32.478018],level:"district",districts:[]}]},{name:"黄山市",center:[118.338272,29.715185],level:"city",districts:[{name:"黄山区",center:[118.141567,30.272942],level:"district",districts:[]},{name:"徽州区",center:[118.336743,29.827271],level:"district",districts:[]},{name:"祁门县",center:[117.717396,29.854055],level:"district",districts:[]},{name:"歙县",center:[118.415345,29.861379],level:"district",districts:[]},{name:"屯溪区",center:[118.315329,29.696108],level:"district",districts:[]},{name:"休宁县",center:[118.193618,29.784124],level:"district",districts:[]},{name:"黟县",center:[117.938373,29.924805],level:"district",districts:[]}]},{name:"淮南市",center:[117.018399,32.587117],level:"city",districts:[{name:"八公山区",center:[116.83349,32.631379],level:"district",districts:[]},{name:"大通区",center:[117.053314,32.631519],level:"district",districts:[]},{name:"凤台县",center:[116.71105,32.709444],level:"district",districts:[]},{name:"潘集区",center:[116.834715,32.77208],level:"district",districts:[]},{name:"寿县",center:[116.798232,32.545109],level:"district",districts:[]},{name:"田家庵区",center:[117.017349,32.647277],level:"district",districts:[]},{name:"谢家集区",center:[116.859188,32.600037],level:"district",districts:[]}]},{name:"淮北市",center:[116.798265,33.955844],level:"city",districts:[{name:"杜集区",center:[116.828133,33.991451],level:"district",districts:[]},{name:"烈山区",center:[116.813042,33.895139],level:"district",districts:[]},{name:"濉溪县",center:[116.766298,33.915477],level:"district",districts:[]},{name:"相山区",center:[116.794344,33.959892],level:"district",districts:[]}]},{name:"六安市",center:[116.520139,31.735456],level:"city",districts:[{name:"霍邱县",center:[116.277911,32.353038],level:"district",districts:[]},{name:"霍山县",center:[116.351892,31.410561],level:"district",districts:[]},{name:"金寨县",center:[115.934366,31.72717],level:"district",districts:[]},{name:"金安区",center:[116.539173,31.750119],level:"district",districts:[]},{name:"舒城县",center:[116.948736,31.462234],level:"district",districts:[]},{name:"叶集区",center:[115.925271,31.863693],level:"district",districts:[]},{name:"裕安区",center:[116.479829,31.738183],level:"district",districts:[]}]},{name:"马鞍山市",center:[118.507011,31.67044],level:"city",districts:[{name:"博望区",center:[118.844538,31.558471],level:"district",districts:[]},{name:"当涂县",center:[118.497972,31.571213],level:"district",districts:[]},{name:"含山县",center:[118.101421,31.735598],level:"district",districts:[]},{name:"和县",center:[118.353667,31.742293],level:"district",districts:[]},{name:"花山区",center:[118.492565,31.71971],level:"district",districts:[]},{name:"雨山区",center:[118.498578,31.682132],level:"district",districts:[]}]},{name:"铜陵市",center:[117.81154,30.945515],level:"city",districts:[{name:"枞阳县",center:[117.250594,30.706018],level:"district",districts:[]},{name:"郊区",center:[117.768026,30.821069],level:"district",districts:[]},{name:"铜官区",center:[117.85616,30.936272],level:"district",districts:[]},{name:"义安区",center:[117.791544,30.952823],level:"district",districts:[]}]},{name:"宿州市",center:[116.964195,33.647309],level:"city",districts:[{name:"砀山县",center:[116.367095,34.442561],level:"district",districts:[]},{name:"灵璧县",center:[117.549395,33.554604],level:"district",districts:[]},{name:"泗县",center:[117.910629,33.482982],level:"district",districts:[]},{name:"萧县",center:[116.947349,34.188732],level:"district",districts:[]},{name:"埇桥区",center:[116.977203,33.64059],level:"district",districts:[]}]},{name:"芜湖市",center:[118.432941,31.352859],level:"city",districts:[{name:"繁昌县",center:[118.198703,31.101782],level:"district",districts:[]},{name:"镜湖区",center:[118.385009,31.340728],level:"district",districts:[]},{name:"鸠江区",center:[118.391734,31.369373],level:"district",districts:[]},{name:"南陵县",center:[118.334359,30.914922],level:"district",districts:[]},{name:"三山区",center:[118.268101,31.219568],level:"district",districts:[]},{name:"无为县",center:[117.902366,31.303167],level:"district",districts:[]},{name:"芜湖县",center:[118.576124,31.134809],level:"district",districts:[]},{name:"弋江区",center:[118.372655,31.311756],level:"district",districts:[]}]},{name:"宣城市",center:[118.75868,30.940195],level:"city",districts:[{name:"广德县",center:[119.420935,30.877555],level:"district",districts:[]},{name:"绩溪县",center:[118.578519,30.067533],level:"district",districts:[]},{name:"泾县",center:[118.419859,30.688634],level:"district",districts:[]},{name:"旌德县",center:[118.549861,30.298142],level:"district",districts:[]},{name:"郎溪县",center:[119.179656,31.126412],level:"district",districts:[]},{name:"宁国市",center:[118.983171,30.633882],level:"district",districts:[]},{name:"宣州区",center:[118.785561,30.944076],level:"district",districts:[]}]}]},{name:"河南省",center:[113.753394,34.765869],level:"province",districts:[{name:"安阳市",center:[114.392392,36.097577],level:"city",districts:[{name:"安阳县",center:[114.130207,36.130584],level:"district",districts:[]},{name:"北关区",center:[114.355742,36.10766],level:"district",districts:[]},{name:"滑县",center:[114.519311,35.575417],level:"district",districts:[]},{name:"林州市",center:[113.820129,36.083046],level:"district",districts:[]},{name:"龙安区",center:[114.301331,36.076225],level:"district",districts:[]},{name:"内黄县",center:[114.901452,35.971704],level:"district",districts:[]},{name:"汤阴县",center:[114.357763,35.924514],level:"district",districts:[]},{name:"文峰区",center:[114.357082,36.090468],level:"district",districts:[]},{name:"殷都区",center:[114.303553,36.10989],level:"district",districts:[]}]},{name:"鹤壁市",center:[114.297309,35.748325],level:"city",districts:[{name:"鹤山区",center:[114.163258,35.954611],level:"district",districts:[]},{name:"浚县",center:[114.55091,35.67636],level:"district",districts:[]},{name:"淇滨区",center:[114.298789,35.741592],level:"district",districts:[]},{name:"淇县",center:[114.208828,35.622507],level:"district",districts:[]},{name:"山城区",center:[114.184318,35.898033],level:"district",districts:[]}]},{name:"焦作市",center:[113.241823,35.215893],level:"city",districts:[{name:"博爱县",center:[113.064379,35.171045],level:"district",districts:[]},{name:"解放区",center:[113.230816,35.240282],level:"district",districts:[]},{name:"马村区",center:[113.322332,35.256108],level:"district",districts:[]},{name:"孟州市",center:[112.791401,34.907315],level:"district",districts:[]},{name:"沁阳市",center:[112.950716,35.087539],level:"district",districts:[]},{name:"山阳区",center:[113.254881,35.214507],level:"district",districts:[]},{name:"温县",center:[113.08053,34.940189],level:"district",districts:[]},{name:"武陟县",center:[113.401679,35.099378],level:"district",districts:[]},{name:"修武县",center:[113.447755,35.223514],level:"district",districts:[]},{name:"中站区",center:[113.182946,35.236819],level:"district",districts:[]}]},{name:"开封市",center:[114.307677,34.797966],level:"city",districts:[{name:"鼓楼区",center:[114.348306,34.78856],level:"district",districts:[]},{name:"兰考县",center:[114.821348,34.822211],level:"district",districts:[]},{name:"龙亭区",center:[114.356076,34.815565],level:"district",districts:[]},{name:"杞县",center:[114.783139,34.549174],level:"district",districts:[]},{name:"顺河回族区",center:[114.364875,34.800458],level:"district",districts:[]},{name:"通许县",center:[114.467467,34.480433],level:"district",districts:[]},{name:"尉氏县",center:[114.193081,34.411494],level:"district",districts:[]},{name:"祥符区",center:[114.441285,34.756916],level:"district",districts:[]},{name:"禹王台区",center:[114.34817,34.777104],level:"district",districts:[]}]},{name:"漯河市",center:[114.016536,33.580873],level:"city",districts:[{name:"临颍县",center:[113.931261,33.828042],level:"district",districts:[]},{name:"舞阳县",center:[113.609286,33.437876],level:"district",districts:[]},{name:"郾城区",center:[114.006943,33.587409],level:"district",districts:[]},{name:"源汇区",center:[114.017948,33.565441],level:"district",districts:[]},{name:"召陵区",center:[114.093902,33.586565],level:"district",districts:[]}]},{name:"洛阳市",center:[112.453926,34.620202],level:"city",districts:[{name:"瀍河回族区",center:[112.500131,34.679773],level:"district",districts:[]},{name:"吉利区",center:[112.589112,34.900467],level:"district",districts:[]},{name:"涧西区",center:[112.395756,34.658033],level:"district",districts:[]},{name:"老城区",center:[112.469766,34.6842],level:"district",districts:[]},{name:"栾川县",center:[111.615768,33.785698],level:"district",districts:[]},{name:"洛宁县",center:[111.653111,34.389197],level:"district",districts:[]},{name:"洛龙区",center:[112.463833,34.619711],level:"district",districts:[]},{name:"孟津县",center:[112.445354,34.825638],level:"district",districts:[]},{name:"汝阳县",center:[112.473139,34.153939],level:"district",districts:[]},{name:"嵩县",center:[112.085634,34.134516],level:"district",districts:[]},{name:"西工区",center:[112.427914,34.660378],level:"district",districts:[]},{name:"新安县",center:[112.13244,34.728284],level:"district",districts:[]},{name:"伊川县",center:[112.425676,34.421323],level:"district",districts:[]},{name:"偃师市",center:[112.789534,34.72722],level:"district",districts:[]},{name:"宜阳县",center:[112.179238,34.514644],level:"district",districts:[]}]},{name:"南阳市",center:[112.528308,32.990664],level:"city",districts:[{name:"邓州市",center:[112.087493,32.68758],level:"district",districts:[]},{name:"方城县",center:[113.012494,33.254391],level:"district",districts:[]},{name:"南召县",center:[112.429133,33.489877],level:"district",districts:[]},{name:"内乡县",center:[111.849392,33.044864],level:"district",districts:[]},{name:"社旗县",center:[112.948245,33.056109],level:"district",districts:[]},{name:"唐河县",center:[112.807636,32.681335],level:"district",districts:[]},{name:"桐柏县",center:[113.428287,32.380073],level:"district",districts:[]},{name:"宛城区",center:[112.539558,33.003784],level:"district",districts:[]},{name:"卧龙区",center:[112.528789,32.989877],level:"district",districts:[]},{name:"淅川县",center:[111.490964,33.13782],level:"district",districts:[]},{name:"西峡县",center:[111.47353,33.307294],level:"district",districts:[]},{name:"新野县",center:[112.360026,32.520805],level:"district",districts:[]},{name:"镇平县",center:[112.234697,33.03411],level:"district",districts:[]}]},{name:"平顶山市",center:[113.192661,33.766169],level:"city",districts:[{name:"宝丰县",center:[113.054801,33.868434],level:"district",districts:[]},{name:"郏县",center:[113.212609,33.971787],level:"district",districts:[]},{name:"鲁山县",center:[112.908202,33.738293],level:"district",districts:[]},{name:"汝州市",center:[112.844517,34.167029],level:"district",districts:[]},{name:"石龙区",center:[112.898818,33.898713],level:"district",districts:[]},{name:"卫东区",center:[113.335192,33.734706],level:"district",districts:[]},{name:"舞钢市",center:[113.516343,33.314033],level:"district",districts:[]},{name:"新华区",center:[113.293977,33.737251],level:"district",districts:[]},{name:"叶县",center:[113.357239,33.626731],level:"district",districts:[]},{name:"湛河区",center:[113.320873,33.725681],level:"district",districts:[]}]},{name:"濮阳市",center:[115.029216,35.761829],level:"city",districts:[{name:"范县",center:[115.504201,35.851906],level:"district",districts:[]},{name:"华龙区",center:[115.074151,35.777346],level:"district",districts:[]},{name:"南乐县",center:[115.204675,36.069476],level:"district",districts:[]},{name:"濮阳县",center:[115.029078,35.712193],level:"district",districts:[]},{name:"清丰县",center:[115.104389,35.88518],level:"district",districts:[]},{name:"台前县",center:[115.871906,35.96939],level:"district",districts:[]}]},{name:"商丘市",center:[115.656339,34.414961],level:"city",districts:[{name:"梁园区",center:[115.613965,34.443893],level:"district",districts:[]},{name:"民权县",center:[115.173971,34.648191],level:"district",districts:[]},{name:"宁陵县",center:[115.313743,34.460399],level:"district",districts:[]},{name:"睢县",center:[115.071879,34.445655],level:"district",districts:[]},{name:"睢阳区",center:[115.653301,34.388389],level:"district",districts:[]},{name:"夏邑县",center:[116.131447,34.237553],level:"district",districts:[]},{name:"永城市",center:[116.4495,33.929291],level:"district",districts:[]},{name:"虞城县",center:[115.828319,34.400835],level:"district",districts:[]},{name:"柘城县",center:[115.305708,34.091082],level:"district",districts:[]}]},{name:"三门峡市",center:[111.200367,34.772792],level:"city",districts:[{name:"湖滨区",center:[111.188397,34.770886],level:"district",districts:[]},{name:"灵宝市",center:[110.89422,34.516828],level:"district",districts:[]},{name:"卢氏县",center:[111.047858,34.054324],level:"district",districts:[]},{name:"渑池县",center:[111.761797,34.767951],level:"district",districts:[]},{name:"陕州区",center:[111.103563,34.720547],level:"district",districts:[]},{name:"义马市",center:[111.87448,34.7474],level:"district",districts:[]}]},{name:"许昌市",center:[113.852454,34.035771],level:"city",districts:[{name:"建安区",center:[113.822983,34.12466],level:"district",districts:[]},{name:"魏都区",center:[113.822647,34.025341],level:"district",districts:[]},{name:"襄城县",center:[113.505874,33.851459],level:"district",districts:[]},{name:"鄢陵县",center:[114.177399,34.102332],level:"district",districts:[]},{name:"禹州市",center:[113.488478,34.140701],level:"district",districts:[]},{name:"长葛市",center:[113.813714,34.19592],level:"district",districts:[]}]},{name:"新乡市",center:[113.926763,35.303704],level:"city",districts:[{name:"封丘县",center:[114.418882,35.041198],level:"district",districts:[]},{name:"凤泉区",center:[113.915184,35.383978],level:"district",districts:[]},{name:"红旗区",center:[113.875245,35.30385],level:"district",districts:[]},{name:"辉县市",center:[113.805468,35.462312],level:"district",districts:[]},{name:"获嘉县",center:[113.657433,35.259808],level:"district",districts:[]},{name:"牧野区",center:[113.908772,35.315039],level:"district",districts:[]},{name:"卫辉市",center:[114.064907,35.398494],level:"district",districts:[]},{name:"卫滨区",center:[113.865663,35.301992],level:"district",districts:[]},{name:"新乡县",center:[113.805205,35.190836],level:"district",districts:[]},{name:"延津县",center:[114.20509,35.141889],level:"district",districts:[]},{name:"原阳县",center:[113.940046,35.065587],level:"district",districts:[]},{name:"长垣县",center:[114.668936,35.201548],level:"district",districts:[]}]},{name:"信阳市",center:[114.091193,32.147679],level:"city",districts:[{name:"固始县",center:[115.654481,32.168137],level:"district",districts:[]},{name:"光山县",center:[114.919152,32.010002],level:"district",districts:[]},{name:"淮滨县",center:[115.419537,32.473258],level:"district",districts:[]},{name:"潢川县",center:[115.051908,32.131522],level:"district",districts:[]},{name:"罗山县",center:[114.512872,32.203883],level:"district",districts:[]},{name:"平桥区",center:[114.125656,32.101031],level:"district",districts:[]},{name:"商城县",center:[115.406862,31.798377],level:"district",districts:[]},{name:"浉河区",center:[114.058713,32.116803],level:"district",districts:[]},{name:"息县",center:[114.740456,32.342792],level:"district",districts:[]},{name:"新县",center:[114.879239,31.643918],level:"district",districts:[]}]},{name:"郑州市",center:[113.625328,34.746611],level:"city",districts:[{name:"登封市",center:[113.050581,34.454443],level:"district",districts:[]},{name:"二七区",center:[113.640211,34.724114],level:"district",districts:[]},{name:"巩义市",center:[113.022406,34.7481],level:"district",districts:[]},{name:"管城回族区",center:[113.6775,34.75429],level:"district",districts:[]},{name:"惠济区",center:[113.6169,34.867457],level:"district",districts:[]},{name:"金水区",center:[113.660617,34.800004],level:"district",districts:[]},{name:"上街区",center:[113.30893,34.802752],level:"district",districts:[]},{name:"新密市",center:[113.391087,34.539376],level:"district",districts:[]},{name:"新郑市",center:[113.740662,34.395949],level:"district",districts:[]},{name:"荥阳市",center:[113.38324,34.786948],level:"district",districts:[]},{name:"中牟县",center:[113.976253,34.718936],level:"district",districts:[]},{name:"中原区",center:[113.613337,34.748256],level:"district",districts:[]}]},{name:"周口市",center:[114.69695,33.626149],level:"city",districts:[{name:"沈丘县",center:[115.098583,33.409369],level:"district",districts:[]},{name:"川汇区",center:[114.650628,33.647598],level:"district",districts:[]},{name:"郸城县",center:[115.177188,33.644743],level:"district",districts:[]},{name:"扶沟县",center:[114.394821,34.059968],level:"district",districts:[]},{name:"淮阳县",center:[114.886153,33.731561],level:"district",districts:[]},{name:"鹿邑县",center:[115.484454,33.86],level:"district",districts:[]},{name:"商水县",center:[114.611651,33.542138],level:"district",districts:[]},{name:"太康县",center:[114.837888,34.064463],level:"district",districts:[]},{name:"西华县",center:[114.529756,33.767407],level:"district",districts:[]},{name:"项城市",center:[114.875333,33.465838],level:"district",districts:[]}]},{name:"驻马店市",center:[114.022247,33.012885],level:"city",districts:[{name:"泌阳县",center:[113.327144,32.723975],level:"district",districts:[]},{name:"平舆县",center:[114.619159,32.96271],level:"district",districts:[]},{name:"确山县",center:[114.026429,32.802064],level:"district",districts:[]},{name:"上蔡县",center:[114.264381,33.262439],level:"district",districts:[]},{name:"汝南县",center:[114.362379,33.006729],level:"district",districts:[]},{name:"遂平县",center:[114.013182,33.145649],level:"district",districts:[]},{name:"西平县",center:[114.021538,33.387684],level:"district",districts:[]},{name:"新蔡县",center:[114.96547,32.744896],level:"district",districts:[]},{name:"驿城区",center:[113.993914,32.973054],level:"district",districts:[]},{name:"正阳县",center:[114.392773,32.605697],level:"district",districts:[]}]},{name:"济源市",center:[112.602256,35.067199],level:"city",districts:[{name:"坡头镇",center:[112.524757,34.928431],level:"street",districts:[]},{name:"轵城镇",center:[112.600987,35.04613],level:"street",districts:[]},{name:"大峪镇",center:[112.396154,34.937623],level:"street",districts:[]},{name:"天坛街道",center:[112.565589,35.094593],level:"street",districts:[]},{name:"济水街道",center:[112.588928,35.091632],level:"street",districts:[]},{name:"玉泉街道",center:[112.615791,35.092594],level:"street",districts:[]},{name:"邵原镇",center:[112.133528,35.160959],level:"street",districts:[]},{name:"思礼镇",center:[112.507286,35.101133],level:"street",districts:[]},{name:"下冶镇",center:[112.200224,35.03283],level:"street",districts:[]},{name:"五龙口镇",center:[112.68937,35.135041],level:"street",districts:[]},{name:"梨林镇",center:[112.713491,35.077678],level:"street",districts:[]},{name:"王屋镇",center:[112.272468,35.113906],level:"street",districts:[]},{name:"克井镇",center:[112.543028,35.160298],level:"street",districts:[]},{name:"承留镇",center:[112.499266,35.077712],level:"street",districts:[]}]}]},{name:"河北省",center:[114.530235,38.037433],level:"province",districts:[{name:"保定市",center:[115.464589,38.874434],level:"city",districts:[{name:"安国市",center:[115.326646,38.418439],level:"district",districts:[]},{name:"安新县",center:[115.935603,38.935369],level:"district",districts:[]},{name:"博野县",center:[115.46438,38.457364],level:"district",districts:[]},{name:"定州市",center:[114.990392,38.516461],level:"district",districts:[]},{name:"定兴县",center:[115.808296,39.263145],level:"district",districts:[]},{name:"阜平县",center:[114.195104,38.849152],level:"district",districts:[]},{name:"高阳县",center:[115.778965,38.700088],level:"district",districts:[]},{name:"高碑店市",center:[115.873886,39.326839],level:"district",districts:[]},{name:"竞秀区",center:[115.45877,38.877449],level:"district",districts:[]},{name:"涞水县",center:[115.713904,39.394316],level:"district",districts:[]},{name:"莲池区",center:[115.497097,38.883582],level:"district",districts:[]},{name:"蠡县",center:[115.583854,38.488055],level:"district",districts:[]},{name:"涞源县",center:[114.694283,39.360247],level:"district",districts:[]},{name:"满城区",center:[115.322334,38.949119],level:"district",districts:[]},{name:"清苑区",center:[115.489959,38.765148],level:"district",districts:[]},{name:"曲阳县",center:[114.745008,38.622248],level:"district",districts:[]},{name:"容城县",center:[115.861657,39.042784],level:"district",districts:[]},{name:"顺平县",center:[115.13547,38.837487],level:"district",districts:[]},{name:"唐县",center:[114.982972,38.748203],level:"district",districts:[]},{name:"望都县",center:[115.155128,38.695842],level:"district",districts:[]},{name:"雄县",center:[116.10865,38.99455],level:"district",districts:[]},{name:"徐水区",center:[115.655774,39.018736],level:"district",districts:[]},{name:"易县",center:[115.497457,39.349393],level:"district",districts:[]},{name:"涿州市",center:[115.974422,39.485282],level:"district",districts:[]}]},{name:"沧州市",center:[116.838834,38.304477],level:"city",districts:[{name:"沧县",center:[117.007478,38.219856],level:"district",districts:[]},{name:"东光县",center:[116.537067,37.888248],level:"district",districts:[]},{name:"海兴县",center:[117.497651,38.143169],level:"district",districts:[]},{name:"河间市",center:[116.099517,38.446624],level:"district",districts:[]},{name:"黄骅市",center:[117.329949,38.371402],level:"district",districts:[]},{name:"孟村回族自治县",center:[117.104298,38.053409],level:"district",districts:[]},{name:"南皮县",center:[116.708347,38.038421],level:"district",districts:[]},{name:"泊头市",center:[116.578367,38.083437],level:"district",districts:[]},{name:"青县",center:[116.804305,38.583021],level:"district",districts:[]},{name:"任丘市",center:[116.082917,38.683591],level:"district",districts:[]},{name:"肃宁县",center:[115.829758,38.422801],level:"district",districts:[]},{name:"吴桥县",center:[116.391508,37.627661],level:"district",districts:[]},{name:"献县",center:[116.122725,38.190185],level:"district",districts:[]},{name:"新华区",center:[116.866284,38.314416],level:"district",districts:[]},{name:"盐山县",center:[117.230602,38.058087],level:"district",districts:[]},{name:"运河区",center:[116.843673,38.283749],level:"district",districts:[]}]},{name:"承德市",center:[117.962749,40.952942],level:"city",districts:[{name:"承德县",center:[118.173824,40.768238],level:"district",districts:[]},{name:"丰宁满族自治县",center:[116.646051,41.209069],level:"district",districts:[]},{name:"宽城满族自治县",center:[118.485313,40.611391],level:"district",districts:[]},{name:"隆化县",center:[117.738937,41.313791],level:"district",districts:[]},{name:"滦平县",center:[117.332801,40.941482],level:"district",districts:[]},{name:"平泉市",center:[118.701951,41.018405],level:"district",districts:[]},{name:"双桥区",center:[117.943466,40.974643],level:"district",districts:[]},{name:"双滦区",center:[117.799888,40.959236],level:"district",districts:[]},{name:"围场满族蒙古族自治县",center:[117.760159,41.938529],level:"district",districts:[]},{name:"兴隆县",center:[117.500558,40.417358],level:"district",districts:[]},{name:"鹰手营子矿区",center:[117.659499,40.546361],level:"district",districts:[]}]},{name:"邯郸市",center:[114.538959,36.625594],level:"city",districts:[{name:"成安县",center:[114.670032,36.444317],level:"district",districts:[]},{name:"磁县",center:[114.373946,36.374011],level:"district",districts:[]},{name:"丛台区",center:[114.492896,36.636409],level:"district",districts:[]},{name:"大名县",center:[115.147814,36.285616],level:"district",districts:[]},{name:"肥乡区",center:[114.800166,36.548131],level:"district",districts:[]},{name:"峰峰矿区",center:[114.212802,36.419739],level:"district",districts:[]},{name:"复兴区",center:[114.462061,36.639033],level:"district",districts:[]},{name:"广平县",center:[114.948606,36.483484],level:"district",districts:[]},{name:"馆陶县",center:[115.282467,36.547556],level:"district",districts:[]},{name:"邯山区",center:[114.531002,36.594313],level:"district",districts:[]},{name:"鸡泽县",center:[114.889376,36.91034],level:"district",districts:[]},{name:"临漳县",center:[114.619536,36.335025],level:"district",districts:[]},{name:"曲周县",center:[114.957504,36.76607],level:"district",districts:[]},{name:"邱县",center:[115.200589,36.811148],level:"district",districts:[]},{name:"涉县",center:[113.6914,36.584994],level:"district",districts:[]},{name:"魏县",center:[114.93892,36.359868],level:"district",districts:[]},{name:"武安市",center:[114.203697,36.696506],level:"district",districts:[]},{name:"永年区",center:[114.543832,36.743966],level:"district",districts:[]}]},{name:"衡水市",center:[115.670177,37.73892],level:"city",districts:[{name:"安平县",center:[115.519278,38.234501],level:"district",districts:[]},{name:"阜城县",center:[116.175262,37.862505],level:"district",districts:[]},{name:"故城县",center:[115.965874,37.347409],level:"district",districts:[]},{name:"冀州区",center:[115.579308,37.550856],level:"district",districts:[]},{name:"景县",center:[116.270648,37.69229],level:"district",districts:[]},{name:"饶阳县",center:[115.725833,38.235892],level:"district",districts:[]},{name:"深州市",center:[115.559574,38.001535],level:"district",districts:[]},{name:"桃城区",center:[115.67545,37.735465],level:"district",districts:[]},{name:"武强县",center:[115.982461,38.041368],level:"district",districts:[]},{name:"武邑县",center:[115.887531,37.801665],level:"district",districts:[]},{name:"枣强县",center:[115.724259,37.513417],level:"district",districts:[]}]},{name:"廊坊市",center:[116.683752,39.538047],level:"city",districts:[{name:"霸州市",center:[116.391484,39.125744],level:"district",districts:[]},{name:"安次区",center:[116.694544,39.502569],level:"district",districts:[]},{name:"大厂回族自治县",center:[116.989574,39.886547],level:"district",districts:[]},{name:"大城县",center:[116.653793,38.705449],level:"district",districts:[]},{name:"固安县",center:[116.298657,39.438214],level:"district",districts:[]},{name:"广阳区",center:[116.71069,39.522786],level:"district",districts:[]},{name:"三河市",center:[117.078294,39.982718],level:"district",districts:[]},{name:"文安县",center:[116.457898,38.87292],level:"district",districts:[]},{name:"香河县",center:[117.006093,39.761424],level:"district",districts:[]},{name:"永清县",center:[116.50568,39.330689],level:"district",districts:[]}]},{name:"秦皇岛市",center:[119.518197,39.888701],level:"city",districts:[{name:"北戴河区",center:[119.484522,39.834596],level:"district",districts:[]},{name:"昌黎县",center:[119.199551,39.700911],level:"district",districts:[]},{name:"抚宁区",center:[119.244847,39.876253],level:"district",districts:[]},{name:"海港区",center:[119.564962,39.94756],level:"district",districts:[]},{name:"卢龙县",center:[118.892986,39.891946],level:"district",districts:[]},{name:"青龙满族自治县",center:[118.949684,40.407578],level:"district",districts:[]},{name:"山海关区",center:[119.775799,39.978848],level:"district",districts:[]}]},{name:"石家庄市",center:[114.514793,38.042228],level:"city",districts:[{name:"藁城区",center:[114.847023,38.021453],level:"district",districts:[]},{name:"高邑县",center:[114.611121,37.615534],level:"district",districts:[]},{name:"井陉县",center:[114.145242,38.032118],level:"district",districts:[]},{name:"晋州市",center:[115.044213,38.033671],level:"district",districts:[]},{name:"井陉矿区",center:[114.062062,38.065151],level:"district",districts:[]},{name:"灵寿县",center:[114.382614,38.308665],level:"district",districts:[]},{name:"鹿泉区",center:[114.313654,38.085953],level:"district",districts:[]},{name:"栾城区",center:[114.648318,37.900199],level:"district",districts:[]},{name:"平山县",center:[114.195918,38.247888],level:"district",districts:[]},{name:"桥西区",center:[114.461088,38.004193],level:"district",districts:[]},{name:"深泽县",center:[115.20092,38.184033],level:"district",districts:[]},{name:"无极县",center:[114.97634,38.179192],level:"district",districts:[]},{name:"辛集市",center:[115.217658,37.943121],level:"district",districts:[]},{name:"行唐县",center:[114.552714,38.438377],level:"district",districts:[]},{name:"新乐市",center:[114.683776,38.343319],level:"district",districts:[]},{name:"新华区",center:[114.463377,38.05095],level:"district",districts:[]},{name:"裕华区",center:[114.531202,38.00643],level:"district",districts:[]},{name:"元氏县",center:[114.525409,37.766513],level:"district",districts:[]},{name:"赞皇县",center:[114.386111,37.665663],level:"district",districts:[]},{name:"长安区",center:[114.539395,38.036347],level:"district",districts:[]},{name:"正定县",center:[114.570941,38.146444],level:"district",districts:[]},{name:"赵县",center:[114.776297,37.756578],level:"district",districts:[]}]},{name:"唐山市",center:[118.180193,39.630867],level:"city",districts:[{name:"曹妃甸区",center:[118.460379,39.27307],level:"district",districts:[]},{name:"丰润区",center:[118.162215,39.832582],level:"district",districts:[]},{name:"丰南区",center:[118.085169,39.576031],level:"district",districts:[]},{name:"古冶区",center:[118.447635,39.733578],level:"district",districts:[]},{name:"开平区",center:[118.261841,39.671001],level:"district",districts:[]},{name:"乐亭县",center:[118.912571,39.425608],level:"district",districts:[]},{name:"路北区",center:[118.200692,39.624437],level:"district",districts:[]},{name:"路南区",center:[118.154354,39.625058],level:"district",districts:[]},{name:"滦南县",center:[118.682379,39.518996],level:"district",districts:[]},{name:"滦县",center:[118.703598,39.740593],level:"district",districts:[]},{name:"迁安市",center:[118.701144,39.999174],level:"district",districts:[]},{name:"迁西县",center:[118.314715,40.1415],level:"district",districts:[]},{name:"玉田县",center:[117.738658,39.900401],level:"district",districts:[]},{name:"遵化市",center:[117.965892,40.189201],level:"district",districts:[]}]},{name:"邢台市",center:[114.504677,37.070834],level:"city",districts:[{name:"柏乡县",center:[114.693425,37.482422],level:"district",districts:[]},{name:"广宗县",center:[115.142626,37.074661],level:"district",districts:[]},{name:"巨鹿县",center:[115.037477,37.221112],level:"district",districts:[]},{name:"临城县",center:[114.498761,37.444498],level:"district",districts:[]},{name:"临西县",center:[115.501048,36.870811],level:"district",districts:[]},{name:"隆尧县",center:[114.770419,37.350172],level:"district",districts:[]},{name:"南宫市",center:[115.408747,37.359264],level:"district",districts:[]},{name:"南和县",center:[114.683863,37.005017],level:"district",districts:[]},{name:"内丘县",center:[114.512128,37.286669],level:"district",districts:[]},{name:"宁晋县",center:[114.93992,37.624564],level:"district",districts:[]},{name:"平乡县",center:[115.030075,37.063148],level:"district",districts:[]},{name:"桥东区",center:[114.507058,37.071287],level:"district",districts:[]},{name:"桥西区",center:[114.468601,37.059827],level:"district",districts:[]},{name:"清河县",center:[115.667208,37.039991],level:"district",districts:[]},{name:"任县",center:[114.671936,37.120982],level:"district",districts:[]},{name:"沙河市",center:[114.503339,36.854929],level:"district",districts:[]},{name:"威县",center:[115.266703,36.975478],level:"district",districts:[]},{name:"新河县",center:[115.250907,37.520862],level:"district",districts:[]},{name:"邢台县",center:[114.561132,37.05073],level:"district",districts:[]}]},{name:"张家口市",center:[114.886252,40.768493],level:"city",districts:[{name:"赤城县",center:[115.831498,40.912921],level:"district",districts:[]},{name:"崇礼区",center:[115.282668,40.974675],level:"district",districts:[]},{name:"沽源县",center:[115.688692,41.669668],level:"district",districts:[]},{name:"怀安县",center:[114.385791,40.674193],level:"district",districts:[]},{name:"怀来县",center:[115.517861,40.415343],level:"district",districts:[]},{name:"康保县",center:[114.600404,41.852368],level:"district",districts:[]},{name:"桥西区",center:[114.869657,40.819581],level:"district",districts:[]},{name:"桥东区",center:[114.894189,40.788434],level:"district",districts:[]},{name:"尚义县",center:[113.969618,41.076226],level:"district",districts:[]},{name:"万全区",center:[114.740557,40.766965],level:"district",districts:[]},{name:"蔚县",center:[114.588903,39.840842],level:"district",districts:[]},{name:"下花园区",center:[115.287352,40.502652],level:"district",districts:[]},{name:"宣化区",center:[115.099494,40.608793],level:"district",districts:[]},{name:"阳原县",center:[114.150348,40.104663],level:"district",districts:[]},{name:"张北县",center:[114.720077,41.158596],level:"district",districts:[]},{name:"涿鹿县",center:[115.205345,40.379562],level:"district",districts:[]}]}]},{name:"湖北省",center:[114.341745,30.546557],level:"province",districts:[{name:"鄂州市",center:[114.894935,30.391141],level:"city",districts:[{name:"鄂城区",center:[114.891586,30.400651],level:"district",districts:[]},{name:"华容区",center:[114.729878,30.534309],level:"district",districts:[]},{name:"梁子湖区",center:[114.684731,30.100141],level:"district",districts:[]}]},{name:"恩施土家族苗族自治州",center:[109.488172,30.272156],level:"city",districts:[{name:"巴东县",center:[110.340756,31.042324],level:"district",districts:[]},{name:"恩施市",center:[109.479664,30.29468],level:"district",districts:[]},{name:"鹤峰县",center:[110.033662,29.890171],level:"district",districts:[]},{name:"建始县",center:[109.722109,30.602129],level:"district",districts:[]},{name:"来凤县",center:[109.407828,29.493484],level:"district",districts:[]},{name:"利川市",center:[108.936452,30.29098],level:"district",districts:[]},{name:"咸丰县",center:[109.139726,29.665202],level:"district",districts:[]},{name:"宣恩县",center:[109.489926,29.98692],level:"district",districts:[]}]},{name:"黄石市",center:[115.038962,30.201038],level:"city",districts:[{name:"大冶市",center:[114.980424,30.096147],level:"district",districts:[]},{name:"黄石港区",center:[115.065849,30.222938],level:"district",districts:[]},{name:"铁山区",center:[114.891605,30.203118],level:"district",districts:[]},{name:"西塞山区",center:[115.109955,30.204924],level:"district",districts:[]},{name:"下陆区",center:[114.961327,30.173912],level:"district",districts:[]},{name:"阳新县",center:[115.215227,29.830257],level:"district",districts:[]}]},{name:"黄冈市",center:[114.872199,30.453667],level:"city",districts:[{name:"红安县",center:[114.618236,31.288153],level:"district",districts:[]},{name:"黄梅县",center:[115.944219,30.070453],level:"district",districts:[]},{name:"黄州区",center:[114.880104,30.434354],level:"district",districts:[]},{name:"罗田县",center:[115.399222,30.78429],level:"district",districts:[]},{name:"麻城市",center:[115.008163,31.172739],level:"district",districts:[]},{name:"蕲春县",center:[115.437007,30.225964],level:"district",districts:[]},{name:"团风县",center:[114.872191,30.643569],level:"district",districts:[]},{name:"浠水县",center:[115.265355,30.452115],level:"district",districts:[]},{name:"武穴市",center:[115.561217,29.844107],level:"district",districts:[]},{name:"英山县",center:[115.681359,30.735157],level:"district",districts:[]}]},{name:"荆门市",center:[112.199427,31.035395],level:"city",districts:[{name:"东宝区",center:[112.201493,31.051852],level:"district",districts:[]},{name:"掇刀区",center:[112.207962,30.973451],level:"district",districts:[]},{name:"京山县",center:[113.119566,31.018457],level:"district",districts:[]},{name:"沙洋县",center:[112.588581,30.709221],level:"district",districts:[]},{name:"钟祥市",center:[112.58812,31.167819],level:"district",districts:[]}]},{name:"荆州市",center:[112.239746,30.335184],level:"city",districts:[{name:"公安县",center:[112.229648,30.058336],level:"district",districts:[]},{name:"洪湖市",center:[113.475801,29.826916],level:"district",districts:[]},{name:"监利县",center:[112.904788,29.840179],level:"district",districts:[]},{name:"江陵县",center:[112.424664,30.041822],level:"district",districts:[]},{name:"荆州区",center:[112.190185,30.352853],level:"district",districts:[]},{name:"沙市区",center:[112.25193,30.326009],level:"district",districts:[]},{name:"石首市",center:[112.425454,29.720938],level:"district",districts:[]},{name:"松滋市",center:[111.756781,30.174529],level:"district",districts:[]}]},{name:"随州市",center:[113.382515,31.690191],level:"city",districts:[{name:"曾都区",center:[113.37112,31.71628],level:"district",districts:[]},{name:"广水市",center:[113.825889,31.616853],level:"district",districts:[]},{name:"随县",center:[113.290634,31.883739],level:"district",districts:[]}]},{name:"十堰市",center:[110.799291,32.629462],level:"city",districts:[{name:"丹江口市",center:[111.513127,32.540157],level:"district",districts:[]},{name:"房县",center:[110.733181,32.050378],level:"district",districts:[]},{name:"茅箭区",center:[110.813719,32.591904],level:"district",districts:[]},{name:"郧西县",center:[110.425983,32.993182],level:"district",districts:[]},{name:"郧阳区",center:[110.81205,32.834775],level:"district",districts:[]},{name:"张湾区",center:[110.769132,32.652297],level:"district",districts:[]},{name:"竹山县",center:[110.228747,32.224808],level:"district",districts:[]},{name:"竹溪县",center:[109.715304,32.318255],level:"district",districts:[]}]},{name:"武汉市",center:[114.305469,30.593175],level:"city",districts:[{name:"蔡甸区",center:[114.087285,30.536454],level:"district",districts:[]},{name:"东西湖区",center:[114.137116,30.619917],level:"district",districts:[]},{name:"汉阳区",center:[114.21861,30.553983],level:"district",districts:[]},{name:"汉南区",center:[114.084597,30.308829],level:"district",districts:[]},{name:"洪山区",center:[114.343796,30.500247],level:"district",districts:[]},{name:"黄陂区",center:[114.375725,30.882174],level:"district",districts:[]},{name:"江汉区",center:[114.270867,30.601475],level:"district",districts:[]},{name:"江夏区",center:[114.319097,30.376308],level:"district",districts:[]},{name:"江岸区",center:[114.30911,30.600052],level:"district",districts:[]},{name:"硚口区",center:[114.21492,30.582202],level:"district",districts:[]},{name:"青山区",center:[114.384968,30.640191],level:"district",districts:[]},{name:"武昌区",center:[114.31665,30.554408],level:"district",districts:[]},{name:"新洲区",center:[114.801096,30.841425],level:"district",districts:[]}]},{name:"孝感市",center:[113.957037,30.917766],level:"city",districts:[{name:"安陆市",center:[113.688941,31.25561],level:"district",districts:[]},{name:"大悟县",center:[114.127022,31.561164],level:"district",districts:[]},{name:"汉川市",center:[113.839149,30.661243],level:"district",districts:[]},{name:"孝南区",center:[113.910705,30.916812],level:"district",districts:[]},{name:"孝昌县",center:[113.998009,31.258159],level:"district",districts:[]},{name:"应城市",center:[113.572707,30.92837],level:"district",districts:[]},{name:"云梦县",center:[113.753554,31.020983],level:"district",districts:[]}]},{name:"襄阳市",center:[112.122426,32.009016],level:"city",districts:[{name:"保康县",center:[111.261308,31.87831],level:"district",districts:[]},{name:"樊城区",center:[112.135684,32.044832],level:"district",districts:[]},{name:"谷城县",center:[111.652982,32.263849],level:"district",districts:[]},{name:"老河口市",center:[111.683861,32.359068],level:"district",districts:[]},{name:"南漳县",center:[111.838905,31.774636],level:"district",districts:[]},{name:"襄城区",center:[112.134052,32.010366],level:"district",districts:[]},{name:"襄州区",center:[112.211982,32.087127],level:"district",districts:[]},{name:"宜城市",center:[112.257788,31.719806],level:"district",districts:[]},{name:"枣阳市",center:[112.771959,32.128818],level:"district",districts:[]}]},{name:"咸宁市",center:[114.322616,29.841362],level:"city",districts:[{name:"赤壁市",center:[113.90038,29.725184],level:"district",districts:[]},{name:"崇阳县",center:[114.039523,29.556688],level:"district",districts:[]},{name:"嘉鱼县",center:[113.939271,29.970676],level:"district",districts:[]},{name:"通城县",center:[113.816966,29.245269],level:"district",districts:[]},{name:"通山县",center:[114.482622,29.606372],level:"district",districts:[]},{name:"咸安区",center:[114.298711,29.852891],level:"district",districts:[]}]},{name:"宜昌市",center:[111.286445,30.691865],level:"city",districts:[{name:"点军区",center:[111.268119,30.693247],level:"district",districts:[]},{name:"当阳市",center:[111.788312,30.821266],level:"district",districts:[]},{name:"五峰土家族自治县",center:[111.07374,30.156741],level:"district",districts:[]},{name:"伍家岗区",center:[111.361037,30.644334],level:"district",districts:[]},{name:"西陵区",center:[111.285646,30.710781],level:"district",districts:[]},{name:"猇亭区",center:[111.43462,30.530903],level:"district",districts:[]},{name:"兴山县",center:[110.746804,31.348196],level:"district",districts:[]},{name:"夷陵区",center:[111.32638,30.770006],level:"district",districts:[]},{name:"宜都市",center:[111.450096,30.378299],level:"district",districts:[]},{name:"远安县",center:[111.640508,31.060869],level:"district",districts:[]},{name:"长阳土家族自治县",center:[111.207242,30.472763],level:"district",districts:[]},{name:"枝江市",center:[111.76053,30.42594],level:"district",districts:[]},{name:"秭归县",center:[110.977711,30.825897],level:"district",districts:[]}]},{name:"潜江市",center:[112.899762,30.402167],level:"city",districts:[{name:"积玉口镇",center:[112.602848,30.445452],level:"street",districts:[]},{name:"浩口镇",center:[112.649998,30.378737],level:"street",districts:[]},{name:"张金镇",center:[112.596542,30.191927],level:"street",districts:[]},{name:"龙湾镇",center:[112.716783,30.229497],level:"street",districts:[]},{name:"杨市街道",center:[112.906177,30.368621],level:"street",districts:[]},{name:"广华街道",center:[112.698707,30.4433],level:"street",districts:[]},{name:"周矶街道",center:[112.809903,30.413886],level:"street",districts:[]},{name:"园林街道",center:[112.892257,30.412252],level:"street",districts:[]},{name:"泽口街道",center:[112.878264,30.484583],level:"street",districts:[]},{name:"渔洋镇",center:[112.908916,30.172423],level:"street",districts:[]},{name:"兴隆镇",center:[112.669031,30.61437],level:"street",districts:[]},{name:"老新镇",center:[112.85718,30.188774],level:"street",districts:[]},{name:"竹根滩镇",center:[112.906645,30.493505],level:"street",districts:[]},{name:"高石碑镇",center:[112.673268,30.547511],level:"street",districts:[]},{name:"熊口镇",center:[112.781307,30.306017],level:"street",districts:[]},{name:"王场镇",center:[112.774326,30.504891],level:"street",districts:[]}]},{name:"神农架林区",center:[110.675743,31.744915],level:"city",districts:[{name:"新华镇",center:[110.891544,31.592996],level:"street",districts:[]},{name:"宋洛乡",center:[110.607962,31.660861],level:"street",districts:[]},{name:"阳日镇",center:[110.819531,31.737393],level:"street",districts:[]},{name:"九湖乡",center:[110.11101,31.459682],level:"street",districts:[]},{name:"下谷坪土家族乡",center:[110.245252,31.365767],level:"street",districts:[]},{name:"木鱼镇",center:[110.482912,31.40142],level:"street",districts:[]},{name:"红坪镇",center:[110.429295,31.672835],level:"street",districts:[]},{name:"松柏镇",center:[110.661631,31.746937],level:"street",districts:[]}]},{name:"天门市",center:[113.166078,30.663337],level:"city",districts:[{name:"净潭乡",center:[113.400546,30.655127],level:"street",districts:[]},{name:"麻洋镇",center:[113.267873,30.435305],level:"street",districts:[]},{name:"多祥镇",center:[113.367061,30.427415],level:"street",districts:[]},{name:"拖市镇",center:[112.83882,30.727032],level:"street",districts:[]},{name:"蒋场镇",center:[112.945059,30.605892],level:"street",districts:[]},{name:"汪场镇",center:[113.041017,30.613778],level:"street",districts:[]},{name:"马湾镇",center:[113.334657,30.573309],level:"street",districts:[]},{name:"横林镇",center:[113.188343,30.536738],level:"street",districts:[]},{name:"九真镇",center:[113.220017,30.741711],level:"street",districts:[]},{name:"石河镇",center:[113.086015,30.75847],level:"street",districts:[]},{name:"张港镇",center:[112.881476,30.567657],level:"street",districts:[]},{name:"小板镇",center:[113.224975,30.608035],level:"street",districts:[]},{name:"彭市镇",center:[113.187885,30.456585],level:"street",districts:[]},{name:"岳口街道",center:[113.084237,30.509648],level:"street",districts:[]},{name:"候口街道",center:[113.147037,30.622951],level:"street",districts:[]},{name:"杨林街道",center:[113.194881,30.639918],level:"street",districts:[]},{name:"竟陵街道",center:[113.167089,30.645679],level:"street",districts:[]},{name:"皂市镇",center:[113.349357,30.856178],level:"street",districts:[]},{name:"岳口镇",center:[113.093585,30.507143],level:"street",districts:[]},{name:"渔薪镇",center:[112.990563,30.675337],level:"street",districts:[]},{name:"多宝镇",center:[112.697695,30.668163],level:"street",districts:[]},{name:"卢市镇",center:[113.343274,30.666241],level:"street",districts:[]},{name:"胡市镇",center:[113.389611,30.779595],level:"street",districts:[]},{name:"佛子山镇",center:[113.011283,30.752449],level:"street",districts:[]},{name:"黄潭镇",center:[113.090808,30.659423],level:"street",districts:[]},{name:"干驿镇",center:[113.386195,30.543403],level:"street",districts:[]}]},{name:"仙桃市",center:[113.423583,30.361438],level:"city",districts:[{name:"郑场镇",center:[113.033681,30.487221],level:"street",districts:[]},{name:"西流河镇",center:[113.677656,30.314502],level:"street",districts:[]},{name:"郭河镇",center:[113.293617,30.240359],level:"street",districts:[]},{name:"干河街道",center:[113.426439,30.374458],level:"street",districts:[]},{name:"毛嘴镇",center:[113.035343,30.417299],level:"street",districts:[]},{name:"龙华山街道",center:[113.461331,30.369509],level:"street",districts:[]},{name:"沙咀街道",center:[113.452657,30.35672],level:"street",districts:[]},{name:"袁市街道",center:[113.405411,30.378631],level:"street",districts:[]},{name:"沙嘴街道",center:[113.451741,30.357096],level:"street",districts:[]},{name:"剅河镇",center:[113.085477,30.33957],level:"street",districts:[]},{name:"三伏潭镇",center:[113.201557,30.375224],level:"street",districts:[]},{name:"胡场镇",center:[113.308093,30.377514],level:"street",districts:[]},{name:"长埫口镇",center:[113.564459,30.400802],level:"street",districts:[]},{name:"张沟镇",center:[113.38053,30.250066],level:"street",districts:[]},{name:"陈场镇",center:[113.087722,30.235173],level:"street",districts:[]},{name:"通海口镇",center:[113.153309,30.198244],level:"street",districts:[]},{name:"彭场镇",center:[113.506437,30.263346],level:"street",districts:[]},{name:"杨林尾镇",center:[113.509285,30.137065],level:"street",districts:[]},{name:"沙湖镇",center:[113.67514,30.169374],level:"street",districts:[]},{name:"沔城回族镇",center:[113.230882,30.19298],level:"street",districts:[]}]}]},{name:"湖南省",center:[112.9836,28.112743],level:"province",districts:[{name:"常德市",center:[111.698784,29.031654],level:"city",districts:[{name:"安乡县",center:[112.171131,29.411309],level:"district",districts:[]},{name:"鼎城区",center:[111.680783,29.018593],level:"district",districts:[]},{name:"汉寿县",center:[111.970514,28.906106],level:"district",districts:[]},{name:"津市市",center:[111.877499,29.60548],level:"district",districts:[]},{name:"澧县",center:[111.758702,29.633236],level:"district",districts:[]},{name:"临澧县",center:[111.647517,29.440793],level:"district",districts:[]},{name:"石门县",center:[111.380014,29.584292],level:"district",districts:[]},{name:"桃源县",center:[111.488925,28.902503],level:"district",districts:[]},{name:"武陵区",center:[111.683153,29.055163],level:"district",districts:[]}]},{name:"郴州市",center:[113.014984,25.770532],level:"city",districts:[{name:"安仁县",center:[113.26932,26.709061],level:"district",districts:[]},{name:"北湖区",center:[113.011035,25.784054],level:"district",districts:[]},{name:"桂阳县",center:[112.734173,25.754172],level:"district",districts:[]},{name:"桂东县",center:[113.944614,26.077616],level:"district",districts:[]},{name:"嘉禾县",center:[112.36902,25.587519],level:"district",districts:[]},{name:"临武县",center:[112.563456,25.27556],level:"district",districts:[]},{name:"汝城县",center:[113.684727,25.532816],level:"district",districts:[]},{name:"苏仙区",center:[113.112105,25.797013],level:"district",districts:[]},{name:"永兴县",center:[113.116527,26.12715],level:"district",districts:[]},{name:"宜章县",center:[112.948712,25.399938],level:"district",districts:[]},{name:"资兴市",center:[113.236146,25.976243],level:"district",districts:[]}]},{name:"衡阳市",center:[112.572018,26.893368],level:"city",districts:[{name:"常宁市",center:[112.399878,26.421956],level:"district",districts:[]},{name:"衡南县",center:[112.677877,26.738247],level:"district",districts:[]},{name:"衡山县",center:[112.868268,27.23029],level:"district",districts:[]},{name:"衡阳县",center:[112.370546,26.969577],level:"district",districts:[]},{name:"衡东县",center:[112.953168,27.08117],level:"district",districts:[]},{name:"耒阳市",center:[112.859759,26.422277],level:"district",districts:[]},{name:"南岳区",center:[112.738604,27.232443],level:"district",districts:[]},{name:"祁东县",center:[112.090356,26.799896],level:"district",districts:[]},{name:"石鼓区",center:[112.597992,26.943755],level:"district",districts:[]},{name:"雁峰区",center:[112.6154,26.840602],level:"district",districts:[]},{name:"蒸湘区",center:[112.567107,26.911854],level:"district",districts:[]},{name:"珠晖区",center:[112.620209,26.894765],level:"district",districts:[]}]},{name:"娄底市",center:[111.994482,27.70027],level:"city",districts:[{name:"冷水江市",center:[111.434984,27.686251],level:"district",districts:[]},{name:"涟源市",center:[111.664329,27.692577],level:"district",districts:[]},{name:"娄星区",center:[112.001914,27.729863],level:"district",districts:[]},{name:"双峰县",center:[112.175163,27.457172],level:"district",districts:[]},{name:"新化县",center:[111.327412,27.726514],level:"district",districts:[]}]},{name:"邵阳市",center:[111.467674,27.23895],level:"city",districts:[{name:"北塔区",center:[111.452196,27.246489],level:"district",districts:[]},{name:"城步苗族自治县",center:[110.322239,26.390598],level:"district",districts:[]},{name:"大祥区",center:[111.439091,27.221452],level:"district",districts:[]},{name:"洞口县",center:[110.575846,27.06032],level:"district",districts:[]},{name:"隆回县",center:[111.032437,27.113978],level:"district",districts:[]},{name:"邵东县",center:[111.74427,27.258987],level:"district",districts:[]},{name:"邵阳县",center:[111.273805,26.990637],level:"district",districts:[]},{name:"双清区",center:[111.496341,27.232708],level:"district",districts:[]},{name:"绥宁县",center:[110.155655,26.581954],level:"district",districts:[]},{name:"武冈市",center:[110.631884,26.726599],level:"district",districts:[]},{name:"新邵县",center:[111.458656,27.320917],level:"district",districts:[]},{name:"新宁县",center:[110.856988,26.433367],level:"district",districts:[]}]},{name:"湘西土家族苗族自治州",center:[109.738906,28.31195],level:"city",districts:[{name:"保靖县",center:[109.660559,28.699878],level:"district",districts:[]},{name:"凤凰县",center:[109.581083,27.958081],level:"district",districts:[]},{name:"古丈县",center:[109.950728,28.616935],level:"district",districts:[]},{name:"花垣县",center:[109.482078,28.572029],level:"district",districts:[]},{name:"吉首市",center:[109.698015,28.262376],level:"district",districts:[]},{name:"泸溪县",center:[110.21961,28.216641],level:"district",districts:[]},{name:"龙山县",center:[109.443938,29.457663],level:"district",districts:[]},{name:"永顺县",center:[109.856933,28.979955],level:"district",districts:[]}]},{name:"湘潭市",center:[112.944026,27.829795],level:"city",districts:[{name:"韶山市",center:[112.52667,27.915008],level:"district",districts:[]},{name:"湘潭县",center:[112.950831,27.778958],level:"district",districts:[]},{name:"湘乡市",center:[112.550205,27.718549],level:"district",districts:[]},{name:"雨湖区",center:[112.907162,27.856325],level:"district",districts:[]},{name:"岳塘区",center:[112.969479,27.872028],level:"district",districts:[]}]},{name:"永州市",center:[111.613418,26.419641],level:"city",districts:[{name:"道县",center:[111.600795,25.526437],level:"district",districts:[]},{name:"东安县",center:[111.316464,26.392183],level:"district",districts:[]},{name:"江华瑶族自治县",center:[111.579535,25.185809],level:"district",districts:[]},{name:"江永县",center:[111.343911,25.273539],level:"district",districts:[]},{name:"冷水滩区",center:[111.592343,26.46128],level:"district",districts:[]},{name:"蓝山县",center:[112.196567,25.369725],level:"district",districts:[]},{name:"零陵区",center:[111.631109,26.221936],level:"district",districts:[]},{name:"宁远县",center:[111.945844,25.570888],level:"district",districts:[]},{name:"祁阳县",center:[111.840657,26.58012],level:"district",districts:[]},{name:"双牌县",center:[111.659967,25.961909],level:"district",districts:[]},{name:"新田县",center:[112.203287,25.904305],level:"district",districts:[]}]},{name:"益阳市",center:[112.355129,28.554349],level:"city",districts:[{name:"安化县",center:[111.212846,28.374107],level:"district",districts:[]},{name:"赫山区",center:[112.374145,28.579494],level:"district",districts:[]},{name:"南县",center:[112.396337,29.362275],level:"district",districts:[]},{name:"桃江县",center:[112.155822,28.518084],level:"district",districts:[]},{name:"沅江市",center:[112.355954,28.847045],level:"district",districts:[]},{name:"资阳区",center:[112.324272,28.59111],level:"district",districts:[]}]},{name:"张家界市",center:[110.479148,29.117013],level:"city",districts:[{name:"慈利县",center:[111.139775,29.429999],level:"district",districts:[]},{name:"桑植县",center:[110.204652,29.414111],level:"district",districts:[]},{name:"武陵源区",center:[110.550433,29.34573],level:"district",districts:[]},{name:"永定区",center:[110.537138,29.119855],level:"district",districts:[]}]},{name:"株洲市",center:[113.133853,27.827986],level:"city",districts:[{name:"茶陵县",center:[113.539094,26.777521],level:"district",districts:[]},{name:"荷塘区",center:[113.173487,27.855928],level:"district",districts:[]},{name:"醴陵市",center:[113.496999,27.646096],level:"district",districts:[]},{name:"芦淞区",center:[113.152724,27.78507],level:"district",districts:[]},{name:"石峰区",center:[113.117731,27.875445],level:"district",districts:[]},{name:"天元区",center:[113.082216,27.826866],level:"district",districts:[]},{name:"炎陵县",center:[113.772655,26.489902],level:"district",districts:[]},{name:"攸县",center:[113.396385,27.014583],level:"district",districts:[]},{name:"株洲县",center:[113.144109,27.699232],level:"district",districts:[]}]},{name:"岳阳市",center:[113.12873,29.356803],level:"city",districts:[{name:"华容县",center:[112.540463,29.531057],level:"district",districts:[]},{name:"君山区",center:[113.006435,29.461106],level:"district",districts:[]},{name:"临湘市",center:[113.450423,29.476849],level:"district",districts:[]},{name:"汨罗市",center:[113.067251,28.806881],level:"district",districts:[]},{name:"平江县",center:[113.581234,28.701868],level:"district",districts:[]},{name:"湘阴县",center:[112.909426,28.689104],level:"district",districts:[]},{name:"云溪区",center:[113.272312,29.472745],level:"district",districts:[]},{name:"岳阳楼区",center:[113.129684,29.371814],level:"district",districts:[]},{name:"岳阳县",center:[113.116418,29.144066],level:"district",districts:[]}]},{name:"长沙市",center:[112.938884,28.22808],level:"city",districts:[{name:"芙蓉区",center:[113.032539,28.185389],level:"district",districts:[]},{name:"开福区",center:[112.985884,28.256298],level:"district",districts:[]},{name:"浏阳市",center:[113.643076,28.162833],level:"district",districts:[]},{name:"宁乡市",center:[112.551885,28.277483],level:"district",districts:[]},{name:"天心区",center:[112.989897,28.114526],level:"district",districts:[]},{name:"望城区",center:[112.831176,28.353434],level:"district",districts:[]},{name:"雨花区",center:[113.03826,28.135722],level:"district",districts:[]},{name:"岳麓区",center:[112.93132,28.234538],level:"district",districts:[]},{name:"长沙县",center:[113.081097,28.246918],level:"district",districts:[]}]},{name:"怀化市",center:[110.001923,27.569517],level:"city",districts:[{name:"辰溪县",center:[110.183917,28.006336],level:"district",districts:[]},{name:"洪江市",center:[109.836669,27.208609],level:"district",districts:[]},{name:"鹤城区",center:[110.040315,27.578926],level:"district",districts:[]},{name:"会同县",center:[109.735661,26.887238],level:"district",districts:[]},{name:"靖州苗族侗族自治县",center:[109.696273,26.575107],level:"district",districts:[]},{name:"麻阳苗族自治县",center:[109.81701,27.857569],level:"district",districts:[]},{name:"通道侗族自治县",center:[109.784412,26.158054],level:"district",districts:[]},{name:"新晃侗族自治县",center:[109.174932,27.352673],level:"district",districts:[]},{name:"溆浦县",center:[110.594879,27.908267],level:"district",districts:[]},{name:"沅陵县",center:[110.393844,28.452686],level:"district",districts:[]},{name:"芷江侗族自治县",center:[109.684629,27.443499],level:"district",districts:[]},{name:"中方县",center:[109.944711,27.440138],level:"district",districts:[]}]}]},{name:"黑龙江省",center:[126.661665,45.742366],level:"province",districts:[{name:"大庆市",center:[125.103784,46.589309],level:"city",districts:[{name:"大同区",center:[124.812364,46.039827],level:"district",districts:[]},{name:"杜尔伯特蒙古族自治县",center:[124.442572,46.862817],level:"district",districts:[]},{name:"红岗区",center:[124.891039,46.398418],level:"district",districts:[]},{name:"林甸县",center:[124.863603,47.171717],level:"district",districts:[]},{name:"龙凤区",center:[125.135326,46.562247],level:"district",districts:[]},{name:"萨尔图区",center:[125.135591,46.629092],level:"district",districts:[]},{name:"让胡路区",center:[124.870596,46.652357],level:"district",districts:[]},{name:"肇州县",center:[125.268643,45.699066],level:"district",districts:[]},{name:"肇源县",center:[125.078223,45.51932],level:"district",districts:[]}]},{name:"大兴安岭地区",center:[124.711526,52.335262],level:"city",districts:[{name:"呼玛县",center:[126.652396,51.726091],level:"district",districts:[]},{name:"加格达奇区",center:[124.139595,50.408735],level:"district",districts:[]},{name:"漠河县",center:[122.538591,52.972272],level:"district",districts:[]},{name:"塔河县",center:[124.709996,52.334456],level:"district",districts:[]}]},{name:"哈尔滨市",center:[126.534967,45.803775],level:"city",districts:[{name:"阿城区",center:[126.958098,45.548669],level:"district",districts:[]},{name:"巴彦县",center:[127.403781,46.086549],level:"district",districts:[]},{name:"宾县",center:[127.466634,45.745917],level:"district",districts:[]},{name:"道里区",center:[126.616973,45.75577],level:"district",districts:[]},{name:"道外区",center:[126.64939,45.792057],level:"district",districts:[]},{name:"方正县",center:[128.829536,45.851694],level:"district",districts:[]},{name:"呼兰区",center:[126.587905,45.889457],level:"district",districts:[]},{name:"木兰县",center:[128.043466,45.950582],level:"district",districts:[]},{name:"南岗区",center:[126.668784,45.760174],level:"district",districts:[]},{name:"平房区",center:[126.637611,45.597911],level:"district",districts:[]},{name:"尚志市",center:[128.009894,45.209586],level:"district",districts:[]},{name:"双城区",center:[126.312624,45.383218],level:"district",districts:[]},{name:"松北区",center:[126.516914,45.794504],level:"district",districts:[]},{name:"通河县",center:[128.746124,45.990205],level:"district",districts:[]},{name:"五常市",center:[127.167618,44.931991],level:"district",districts:[]},{name:"香坊区",center:[126.662593,45.707716],level:"district",districts:[]},{name:"延寿县",center:[128.331643,45.451897],level:"district",districts:[]},{name:"依兰县",center:[129.567877,46.325419],level:"district",districts:[]}]},{name:"鹤岗市",center:[130.297943,47.350189],level:"city",districts:[{name:"东山区",center:[130.317002,47.338537],level:"district",districts:[]},{name:"工农区",center:[130.274684,47.31878],level:"district",districts:[]},{name:"萝北县",center:[130.85155,47.576444],level:"district",districts:[]},{name:"南山区",center:[130.286788,47.315174],level:"district",districts:[]},{name:"绥滨县",center:[131.852759,47.289115],level:"district",districts:[]},{name:"向阳区",center:[130.294235,47.342468],level:"district",districts:[]},{name:"兴山区",center:[130.303481,47.357702],level:"district",districts:[]},{name:"兴安区",center:[130.239245,47.252849],level:"district",districts:[]}]},{name:"黑河市",center:[127.528293,50.245129],level:"city",districts:[{name:"爱辉区",center:[127.50045,50.252105],level:"district",districts:[]},{name:"北安市",center:[126.490864,48.241365],level:"district",districts:[]},{name:"嫩江县",center:[125.221192,49.185766],level:"district",districts:[]},{name:"孙吴县",center:[127.336303,49.425647],level:"district",districts:[]},{name:"五大连池市",center:[126.205516,48.517257],level:"district",districts:[]},{name:"逊克县",center:[128.478749,49.564252],level:"district",districts:[]}]},{name:"鸡西市",center:[130.969333,45.295075],level:"city",districts:[{name:"城子河区",center:[131.011304,45.33697],level:"district",districts:[]},{name:"滴道区",center:[130.843613,45.348763],level:"district",districts:[]},{name:"恒山区",center:[130.904963,45.210668],level:"district",districts:[]},{name:"虎林市",center:[132.93721,45.762685],level:"district",districts:[]},{name:"鸡冠区",center:[130.981185,45.304355],level:"district",districts:[]},{name:"鸡东县",center:[131.124079,45.260412],level:"district",districts:[]},{name:"梨树区",center:[130.69699,45.092046],level:"district",districts:[]},{name:"麻山区",center:[130.478187,45.212088],level:"district",districts:[]},{name:"密山市",center:[131.846635,45.529774],level:"district",districts:[]}]},{name:"佳木斯市",center:[130.318878,46.799777],level:"city",districts:[{name:"东风区",center:[130.403664,46.822571],level:"district",districts:[]},{name:"富锦市",center:[132.037686,47.250107],level:"district",districts:[]},{name:"抚远市",center:[134.307884,48.364687],level:"district",districts:[]},{name:"桦川县",center:[130.71908,47.023001],level:"district",districts:[]},{name:"桦南县",center:[130.553343,46.239184],level:"district",districts:[]},{name:"郊区",center:[130.327194,46.810085],level:"district",districts:[]},{name:"前进区",center:[130.375062,46.814102],level:"district",districts:[]},{name:"汤原县",center:[129.905072,46.730706],level:"district",districts:[]},{name:"同江市",center:[132.510919,47.642707],level:"district",districts:[]},{name:"向阳区",center:[130.365346,46.80779],level:"district",districts:[]}]},{name:"牡丹江市",center:[129.633168,44.551653],level:"city",districts:[{name:"爱民区",center:[129.591537,44.596042],level:"district",districts:[]},{name:"东安区",center:[129.626641,44.58136],level:"district",districts:[]},{name:"东宁市",center:[131.122915,44.087585],level:"district",districts:[]},{name:"海林市",center:[129.380481,44.594213],level:"district",districts:[]},{name:"林口县",center:[130.284033,45.278046],level:"district",districts:[]},{name:"穆棱市",center:[130.524436,44.918813],level:"district",districts:[]},{name:"宁安市",center:[129.482851,44.34072],level:"district",districts:[]},{name:"绥芬河市",center:[131.152545,44.412308],level:"district",districts:[]},{name:"西安区",center:[129.616058,44.577625],level:"district",districts:[]},{name:"阳明区",center:[129.635615,44.596104],level:"district",districts:[]}]},{name:"齐齐哈尔市",center:[123.918186,47.354348],level:"city",districts:[{name:"昂昂溪区",center:[123.8224,47.15516],level:"district",districts:[]},{name:"拜泉县",center:[126.100213,47.595851],level:"district",districts:[]},{name:"富裕县",center:[124.473793,47.774347],level:"district",districts:[]},{name:"富拉尔基区",center:[123.629189,47.208843],level:"district",districts:[]},{name:"甘南县",center:[123.507429,47.922405],level:"district",districts:[]},{name:"建华区",center:[123.955464,47.354364],level:"district",districts:[]},{name:"克山县",center:[125.875705,48.037031],level:"district",districts:[]},{name:"克东县",center:[126.24872,48.04206],level:"district",districts:[]},{name:"龙江县",center:[123.205323,47.338665],level:"district",districts:[]},{name:"龙沙区",center:[123.957531,47.317308],level:"district",districts:[]},{name:"梅里斯达斡尔族区",center:[123.75291,47.309537],level:"district",districts:[]},{name:"碾子山区",center:[122.887775,47.516872],level:"district",districts:[]},{name:"讷河市",center:[124.88287,48.466592],level:"district",districts:[]},{name:"泰来县",center:[123.416631,46.393694],level:"district",districts:[]},{name:"铁锋区",center:[123.978293,47.340517],level:"district",districts:[]},{name:"依安县",center:[125.306278,47.893548],level:"district",districts:[]}]},{name:"七台河市",center:[131.003082,45.771396],level:"city",districts:[{name:"勃利县",center:[130.59217,45.755063],level:"district",districts:[]},{name:"茄子河区",center:[131.068075,45.785215],level:"district",districts:[]},{name:"桃山区",center:[131.020202,45.765705],level:"district",districts:[]},{name:"新兴区",center:[130.932143,45.81593],level:"district",districts:[]}]},{name:"绥化市",center:[126.968887,46.653845],level:"city",districts:[{name:"安达市",center:[125.346156,46.419633],level:"district",districts:[]},{name:"北林区",center:[126.985504,46.6375],level:"district",districts:[]},{name:"海伦市",center:[126.930106,47.45117],level:"district",districts:[]},{name:"兰西县",center:[126.288117,46.25245],level:"district",districts:[]},{name:"明水县",center:[125.906301,47.173426],level:"district",districts:[]},{name:"青冈县",center:[126.099195,46.70391],level:"district",districts:[]},{name:"庆安县",center:[127.507824,46.880102],level:"district",districts:[]},{name:"绥棱县",center:[127.114832,47.236015],level:"district",districts:[]},{name:"望奎县",center:[126.486075,46.832719],level:"district",districts:[]},{name:"肇东市",center:[125.961814,46.051126],level:"district",districts:[]}]},{name:"双鸭山市",center:[131.141195,46.676418],level:"city",districts:[{name:"宝山区",center:[131.401589,46.577167],level:"district",districts:[]},{name:"宝清县",center:[132.196853,46.327457],level:"district",districts:[]},{name:"集贤县",center:[131.141311,46.728412],level:"district",districts:[]},{name:"尖山区",center:[131.158415,46.64635],level:"district",districts:[]},{name:"岭东区",center:[131.164723,46.592721],level:"district",districts:[]},{name:"饶河县",center:[134.013872,46.798163],level:"district",districts:[]},{name:"四方台区",center:[131.337592,46.597264],level:"district",districts:[]},{name:"友谊县",center:[131.808063,46.767299],level:"district",districts:[]}]},{name:"伊春市",center:[128.841125,47.727535],level:"city",districts:[{name:"翠峦区",center:[128.669754,47.726394],level:"district",districts:[]},{name:"带岭区",center:[129.020888,47.028379],level:"district",districts:[]},{name:"红星区",center:[129.390983,48.239431],level:"district",districts:[]},{name:"嘉荫县",center:[130.403134,48.888972],level:"district",districts:[]},{name:"金山屯区",center:[129.429117,47.413074],level:"district",districts:[]},{name:"美溪区",center:[129.129314,47.63509],level:"district",districts:[]},{name:"南岔区",center:[129.283467,47.138034],level:"district",districts:[]},{name:"上甘岭区",center:[129.02426,47.974707],level:"district",districts:[]},{name:"汤旺河区",center:[129.571108,48.454651],level:"district",districts:[]},{name:"铁力市",center:[128.032424,46.986633],level:"district",districts:[]},{name:"乌马河区",center:[128.799477,47.727687],level:"district",districts:[]},{name:"乌伊岭区",center:[129.43792,48.590322],level:"district",districts:[]},{name:"五营区",center:[129.245343,48.10791],level:"district",districts:[]},{name:"西林区",center:[129.312851,47.480735],level:"district",districts:[]},{name:"伊春区",center:[128.907257,47.728237],level:"district",districts:[]},{name:"新青区",center:[129.533599,48.290455],level:"district",districts:[]},{name:"友好区",center:[128.836291,47.841032],level:"district",districts:[]}]}]},{name:"江苏省",center:[118.762765,32.060875],level:"province",districts:[{name:"常州市",center:[119.974061,31.811226],level:"city",districts:[{name:"金坛区",center:[119.597811,31.723219],level:"district",districts:[]},{name:"溧阳市",center:[119.48421,31.416911],level:"district",districts:[]},{name:"天宁区",center:[119.999219,31.792787],level:"district",districts:[]},{name:"武进区",center:[119.942437,31.701187],level:"district",districts:[]},{name:"新北区",center:[119.971697,31.830427],level:"district",districts:[]},{name:"钟楼区",center:[119.902369,31.802089],level:"district",districts:[]}]},{name:"淮安市",center:[119.113185,33.551052],level:"city",districts:[{name:"洪泽区",center:[118.873241,33.294214],level:"district",districts:[]},{name:"淮安区",center:[119.141099,33.502868],level:"district",districts:[]},{name:"淮阴区",center:[119.034725,33.631892],level:"district",districts:[]},{name:"金湖县",center:[119.020584,33.025433],level:"district",districts:[]},{name:"涟水县",center:[119.260227,33.781331],level:"district",districts:[]},{name:"清江浦区",center:[119.026718,33.552627],level:"district",districts:[]},{name:"盱眙县",center:[118.54436,33.011971],level:"district",districts:[]}]},{name:"连云港市",center:[119.221611,34.596653],level:"city",districts:[{name:"东海县",center:[118.752842,34.542308],level:"district",districts:[]},{name:"赣榆区",center:[119.17333,34.841348],level:"district",districts:[]},{name:"灌云县",center:[119.239381,34.284381],level:"district",districts:[]},{name:"灌南县",center:[119.315651,34.087134],level:"district",districts:[]},{name:"海州区",center:[119.163509,34.572274],level:"district",districts:[]},{name:"连云区",center:[119.338788,34.760249],level:"district",districts:[]}]},{name:"南京市",center:[118.796682,32.05957],level:"city",districts:[{name:"高淳区",center:[118.89222,31.327586],level:"district",districts:[]},{name:"鼓楼区",center:[118.770182,32.066601],level:"district",districts:[]},{name:"江宁区",center:[118.840015,31.952612],level:"district",districts:[]},{name:"建邺区",center:[118.731793,32.003731],level:"district",districts:[]},{name:"溧水区",center:[119.028288,31.651099],level:"district",districts:[]},{name:"六合区",center:[118.822132,32.323584],level:"district",districts:[]},{name:"浦口区",center:[118.628003,32.058903],level:"district",districts:[]},{name:"栖霞区",center:[118.909153,32.096388],level:"district",districts:[]},{name:"秦淮区",center:[118.79476,32.039113],level:"district",districts:[]},{name:"玄武区",center:[118.797757,32.048498],level:"district",districts:[]},{name:"雨花台区",center:[118.779051,31.99126],level:"district",districts:[]}]},{name:"南通市",center:[120.894676,31.981143],level:"city",districts:[{name:"崇川区",center:[120.857434,32.009875],level:"district",districts:[]},{name:"港闸区",center:[120.818526,32.032441],level:"district",districts:[]},{name:"海安县",center:[120.467343,32.533572],level:"district",districts:[]},{name:"海门市",center:[121.18181,31.869483],level:"district",districts:[]},{name:"启东市",center:[121.655432,31.793278],level:"district",districts:[]},{name:"如皋市",center:[120.573803,32.371562],level:"district",districts:[]},{name:"如东县",center:[121.185201,32.331765],level:"district",districts:[]},{name:"通州区",center:[121.073828,32.06568],level:"district",districts:[]}]},{name:"苏州市",center:[120.585728,31.2974],level:"city",districts:[{name:"常熟市",center:[120.752481,31.654375],level:"district",districts:[]},{name:"姑苏区",center:[120.617369,31.33565],level:"district",districts:[]},{name:"虎丘区",center:[120.434238,31.329601],level:"district",districts:[]},{name:"昆山市",center:[120.980736,31.385597],level:"district",districts:[]},{name:"太仓市",center:[121.13055,31.457735],level:"district",districts:[]},{name:"吴江区",center:[120.645157,31.138677],level:"district",districts:[]},{name:"吴中区",center:[120.632308,31.263183],level:"district",districts:[]},{name:"相城区",center:[120.642626,31.369089],level:"district",districts:[]},{name:"张家港市",center:[120.555982,31.875571],level:"district",districts:[]}]},{name:"宿迁市",center:[118.275198,33.963232],level:"city",districts:[{name:"沭阳县",center:[118.804784,34.111022],level:"district",districts:[]},{name:"泗洪县",center:[118.223591,33.476051],level:"district",districts:[]},{name:"泗阳县",center:[118.703424,33.722478],level:"district",districts:[]},{name:"宿豫区",center:[118.330781,33.946822],level:"district",districts:[]},{name:"宿城区",center:[118.242533,33.963029],level:"district",districts:[]}]},{name:"泰州市",center:[119.922933,32.455536],level:"city",districts:[{name:"高港区",center:[119.881717,32.318821],level:"district",districts:[]},{name:"海陵区",center:[119.919424,32.491016],level:"district",districts:[]},{name:"姜堰区",center:[120.127934,32.509155],level:"district",districts:[]},{name:"靖江市",center:[120.277138,31.982751],level:"district",districts:[]},{name:"泰兴市",center:[120.051743,32.171853],level:"district",districts:[]},{name:"兴化市",center:[119.852541,32.910459],level:"district",districts:[]}]},{name:"无锡市",center:[120.31191,31.491169],level:"city",districts:[{name:"滨湖区",center:[120.283811,31.527276],level:"district",districts:[]},{name:"惠山区",center:[120.298433,31.680335],level:"district",districts:[]},{name:"江阴市",center:[120.286129,31.921345],level:"district",districts:[]},{name:"梁溪区",center:[120.303108,31.566155],level:"district",districts:[]},{name:"锡山区",center:[120.357858,31.589715],level:"district",districts:[]},{name:"新吴区",center:[120.352782,31.550966],level:"district",districts:[]},{name:"宜兴市",center:[119.823308,31.340637],level:"district",districts:[]}]},{name:"徐州市",center:[117.284124,34.205768],level:"city",districts:[{name:"丰县",center:[116.59539,34.693906],level:"district",districts:[]},{name:"鼓楼区",center:[117.185576,34.288646],level:"district",districts:[]},{name:"贾汪区",center:[117.464958,34.436936],level:"district",districts:[]},{name:"沛县",center:[116.936353,34.760761],level:"district",districts:[]},{name:"邳州市",center:[118.012531,34.338888],level:"district",districts:[]},{name:"泉山区",center:[117.194469,34.225522],level:"district",districts:[]},{name:"睢宁县",center:[117.941563,33.912597],level:"district",districts:[]},{name:"铜山区",center:[117.169461,34.180779],level:"district",districts:[]},{name:"新沂市",center:[118.354537,34.36958],level:"district",districts:[]},{name:"云龙区",center:[117.251076,34.253164],level:"district",districts:[]}]},{name:"盐城市",center:[120.163107,33.347708],level:"city",districts:[{name:"滨海县",center:[119.82083,33.990334],level:"district",districts:[]},{name:"大丰区",center:[120.50085,33.200333],level:"district",districts:[]},{name:"东台市",center:[120.320328,32.868426],level:"district",districts:[]},{name:"阜宁县",center:[119.802527,33.759325],level:"district",districts:[]},{name:"建湖县",center:[119.7886,33.439067],level:"district",districts:[]},{name:"射阳县",center:[120.229986,33.758361],level:"district",districts:[]},{name:"亭湖区",center:[120.197358,33.390536],level:"district",districts:[]},{name:"响水县",center:[119.578364,34.199479],level:"district",districts:[]},{name:"盐都区",center:[120.153712,33.338283],level:"district",districts:[]}]},{name:"扬州市",center:[119.412939,32.394209],level:"city",districts:[{name:"宝应县",center:[119.360729,33.240391],level:"district",districts:[]},{name:"高邮市",center:[119.459161,32.781659],level:"district",districts:[]},{name:"广陵区",center:[119.431849,32.39472],level:"district",districts:[]},{name:"邗江区",center:[119.397994,32.377655],level:"district",districts:[]},{name:"江都区",center:[119.569989,32.434672],level:"district",districts:[]},{name:"仪征市",center:[119.184766,32.272258],level:"district",districts:[]}]},{name:"镇江市",center:[119.425836,32.187849],level:"city",districts:[{name:"丹徒区",center:[119.433853,32.131962],level:"district",districts:[]},{name:"丹阳市",center:[119.606439,32.010214],level:"district",districts:[]},{name:"京口区",center:[119.47016,32.19828],level:"district",districts:[]},{name:"句容市",center:[119.168695,31.944998],level:"district",districts:[]},{name:"润州区",center:[119.411959,32.195264],level:"district",districts:[]},{name:"扬中市",center:[119.797634,32.23483],level:"district",districts:[]}]}]},{name:"江西省",center:[115.81635,28.63666],level:"province",districts:[{name:"抚州市",center:[116.358181,27.949217],level:"city",districts:[{name:"崇仁县",center:[116.07626,27.754466],level:"district",districts:[]},{name:"东乡区",center:[116.603559,28.247696],level:"district",districts:[]},{name:"广昌县",center:[116.335686,26.843684],level:"district",districts:[]},{name:"金溪县",center:[116.755058,27.918959],level:"district",districts:[]},{name:"黎川县",center:[116.907681,27.282333],level:"district",districts:[]},{name:"乐安县",center:[115.83048,27.428765],level:"district",districts:[]},{name:"临川区",center:[116.312166,27.934572],level:"district",districts:[]},{name:"南城县",center:[116.63704,27.569678],level:"district",districts:[]},{name:"南丰县",center:[116.525725,27.218444],level:"district",districts:[]},{name:"宜黄县",center:[116.236201,27.554886],level:"district",districts:[]},{name:"资溪县",center:[117.060263,27.706101],level:"district",districts:[]}]},{name:"赣州市",center:[114.933546,25.830694],level:"city",districts:[{name:"安远县",center:[115.393922,25.136927],level:"district",districts:[]},{name:"崇义县",center:[114.308267,25.681784],level:"district",districts:[]},{name:"大余县",center:[114.362112,25.401313],level:"district",districts:[]},{name:"定南县",center:[115.027845,24.78441],level:"district",districts:[]},{name:"赣县区",center:[115.011561,25.86069],level:"district",districts:[]},{name:"会昌县",center:[115.786056,25.600272],level:"district",districts:[]},{name:"龙南县",center:[114.789873,24.911069],level:"district",districts:[]},{name:"南康区",center:[114.765412,25.66145],level:"district",districts:[]},{name:"宁都县",center:[116.009472,26.470116],level:"district",districts:[]},{name:"全南县",center:[114.530125,24.742403],level:"district",districts:[]},{name:"瑞金市",center:[116.027134,25.885555],level:"district",districts:[]},{name:"上犹县",center:[114.551138,25.785172],level:"district",districts:[]},{name:"石城县",center:[116.346995,26.314775],level:"district",districts:[]},{name:"信丰县",center:[114.922922,25.386379],level:"district",districts:[]},{name:"兴国县",center:[115.363189,26.337937],level:"district",districts:[]},{name:"寻乌县",center:[115.637933,24.969167],level:"district",districts:[]},{name:"于都县",center:[115.415508,25.952068],level:"district",districts:[]},{name:"章贡区",center:[114.921171,25.817816],level:"district",districts:[]}]},{name:"吉安市",center:[114.966567,27.090763],level:"city",districts:[{name:"安福县",center:[114.619893,27.392873],level:"district",districts:[]},{name:"吉州区",center:[114.994763,27.143801],level:"district",districts:[]},{name:"吉安县",center:[114.907875,27.039787],level:"district",districts:[]},{name:"吉水县",center:[115.135507,27.229632],level:"district",districts:[]},{name:"井冈山市",center:[114.289228,26.748081],level:"district",districts:[]},{name:"青原区",center:[115.014811,27.081977],level:"district",districts:[]},{name:"泰和县",center:[114.92299,26.801628],level:"district",districts:[]},{name:"遂川县",center:[114.520537,26.313737],level:"district",districts:[]},{name:"万安县",center:[114.759364,26.456553],level:"district",districts:[]},{name:"峡江县",center:[115.316566,27.582901],level:"district",districts:[]},{name:"新干县",center:[115.387052,27.740191],level:"district",districts:[]},{name:"永新县",center:[114.243072,26.944962],level:"district",districts:[]},{name:"永丰县",center:[115.421344,27.316939],level:"district",districts:[]}]},{name:"九江市",center:[115.952914,29.662117],level:"city",districts:[{name:"德安县",center:[115.767447,29.298696],level:"district",districts:[]},{name:"都昌县",center:[116.203979,29.273239],level:"district",districts:[]},{name:"共青城市",center:[115.808844,29.248316],level:"district",districts:[]},{name:"湖口县",center:[116.251947,29.731101],level:"district",districts:[]},{name:"柴桑区",center:[115.911323,29.608431],level:"district",districts:[]},{name:"濂溪区",center:[115.992842,29.668064],level:"district",districts:[]},{name:"庐山市",center:[116.04506,29.448128],level:"district",districts:[]},{name:"彭泽县",center:[116.56438,29.876991],level:"district",districts:[]},{name:"瑞昌市",center:[115.681335,29.675834],level:"district",districts:[]},{name:"武宁县",center:[115.092757,29.246591],level:"district",districts:[]},{name:"浔阳区",center:[115.990301,29.727593],level:"district",districts:[]},{name:"修水县",center:[114.546836,29.025726],level:"district",districts:[]},{name:"永修县",center:[115.831956,29.011871],level:"district",districts:[]}]},{name:"景德镇市",center:[117.178222,29.268945],level:"city",districts:[{name:"昌江区",center:[117.18363,29.273565],level:"district",districts:[]},{name:"浮梁县",center:[117.215066,29.352253],level:"district",districts:[]},{name:"乐平市",center:[117.151796,28.97844],level:"district",districts:[]},{name:"珠山区",center:[117.202919,29.299938],level:"district",districts:[]}]},{name:"南昌市",center:[115.858198,28.682892],level:"city",districts:[{name:"安义县",center:[115.548658,28.846],level:"district",districts:[]},{name:"东湖区",center:[115.903526,28.698731],level:"district",districts:[]},{name:"进贤县",center:[116.241288,28.377343],level:"district",districts:[]},{name:"南昌县",center:[115.933742,28.558296],level:"district",districts:[]},{name:"青山湖区",center:[115.962144,28.682984],level:"district",districts:[]},{name:"青云谱区",center:[115.925749,28.621169],level:"district",districts:[]},{name:"湾里区",center:[115.730847,28.714796],level:"district",districts:[]},{name:"西湖区",center:[115.877233,28.657595],level:"district",districts:[]},{name:"新建区",center:[115.815277,28.692864],level:"district",districts:[]}]},{name:"萍乡市",center:[113.887083,27.658373],level:"city",districts:[{name:"安源区",center:[113.870704,27.61511],level:"district",districts:[]},{name:"莲花县",center:[113.961488,27.127664],level:"district",districts:[]},{name:"芦溪县",center:[114.029827,27.630806],level:"district",districts:[]},{name:"上栗县",center:[113.795311,27.880301],level:"district",districts:[]},{name:"湘东区",center:[113.733047,27.640075],level:"district",districts:[]}]},{name:"上饶市",center:[117.943433,28.454863],level:"city",districts:[{name:"德兴市",center:[117.578713,28.946464],level:"district",districts:[]},{name:"广丰区",center:[118.19124,28.436285],level:"district",districts:[]},{name:"横峰县",center:[117.596452,28.407117],level:"district",districts:[]},{name:"鄱阳县",center:[116.70359,29.004847],level:"district",districts:[]},{name:"铅山县",center:[117.709659,28.315664],level:"district",districts:[]},{name:"广信区",center:[117.907849,28.448982],level:"district",districts:[]},{name:"万年县",center:[117.058445,28.694582],level:"district",districts:[]},{name:"婺源县",center:[117.861797,29.248085],level:"district",districts:[]},{name:"信州区",center:[117.966268,28.431006],level:"district",districts:[]},{name:"弋阳县",center:[117.449588,28.378044],level:"district",districts:[]},{name:"余干县",center:[116.695646,28.702302],level:"district",districts:[]},{name:"玉山县",center:[118.244769,28.682309],level:"district",districts:[]}]},{name:"新余市",center:[114.917346,27.817808],level:"city",districts:[{name:"分宜县",center:[114.692049,27.814757],level:"district",districts:[]},{name:"渝水区",center:[114.944549,27.800148],level:"district",districts:[]}]},{name:"宜春市",center:[114.416785,27.815743],level:"city",districts:[{name:"奉新县",center:[115.400491,28.688423],level:"district",districts:[]},{name:"丰城市",center:[115.771093,28.159141],level:"district",districts:[]},{name:"高安市",center:[115.360619,28.441152],level:"district",districts:[]},{name:"靖安县",center:[115.362628,28.861478],level:"district",districts:[]},{name:"上高县",center:[114.947683,28.238061],level:"district",districts:[]},{name:"铜鼓县",center:[114.371172,28.520769],level:"district",districts:[]},{name:"万载县",center:[114.444854,28.105689],level:"district",districts:[]},{name:"宜丰县",center:[114.802852,28.394565],level:"district",districts:[]},{name:"袁州区",center:[114.427858,27.797091],level:"district",districts:[]},{name:"樟树市",center:[115.546152,28.055853],level:"district",districts:[]}]},{name:"鹰潭市",center:[117.042173,28.272537],level:"city",districts:[{name:"贵溪市",center:[117.245497,28.292519],level:"district",districts:[]},{name:"余江县",center:[116.85926,28.198652],level:"district",districts:[]},{name:"月湖区",center:[117.102475,28.267018],level:"district",districts:[]}]}]},{name:"吉林省",center:[125.32568,43.897016],level:"province",districts:[{name:"白城市",center:[122.838714,45.619884],level:"city",districts:[{name:"大安市",center:[124.292626,45.506996],level:"district",districts:[]},{name:"洮北区",center:[122.851029,45.621716],level:"district",districts:[]},{name:"洮南市",center:[122.798579,45.356807],level:"district",districts:[]},{name:"通榆县",center:[123.088238,44.81291],level:"district",districts:[]},{name:"镇赉县",center:[123.199607,45.84835],level:"district",districts:[]}]},{name:"白山市",center:[126.41473,41.943972],level:"city",districts:[{name:"抚松县",center:[127.449763,42.221207],level:"district",districts:[]},{name:"浑江区",center:[126.416093,41.945409],level:"district",districts:[]},{name:"江源区",center:[126.591178,42.056747],level:"district",districts:[]},{name:"靖宇县",center:[126.813583,42.388896],level:"district",districts:[]},{name:"临江市",center:[126.918087,41.811979],level:"district",districts:[]},{name:"长白朝鲜族自治县",center:[128.200789,41.420018],level:"district",districts:[]}]},{name:"吉林市",center:[126.549572,43.837883],level:"city",districts:[{name:"昌邑区",center:[126.574709,43.881818],level:"district",districts:[]},{name:"船营区",center:[126.540966,43.833445],level:"district",districts:[]},{name:"丰满区",center:[126.562274,43.821601],level:"district",districts:[]},{name:"桦甸市",center:[126.746309,42.972096],level:"district",districts:[]},{name:"蛟河市",center:[127.344229,43.724007],level:"district",districts:[]},{name:"龙潭区",center:[126.562197,43.910802],level:"district",districts:[]},{name:"磐石市",center:[126.060427,42.946285],level:"district",districts:[]},{name:"舒兰市",center:[126.965607,44.406105],level:"district",districts:[]},{name:"永吉县",center:[126.497741,43.672582],level:"district",districts:[]}]},{name:"辽源市",center:[125.14366,42.887766],level:"city",districts:[{name:"东丰县",center:[125.531021,42.677371],level:"district",districts:[]},{name:"东辽县",center:[124.991424,42.92625],level:"district",districts:[]},{name:"龙山区",center:[125.136627,42.90158],level:"district",districts:[]},{name:"西安区",center:[125.149281,42.927324],level:"district",districts:[]}]},{name:"松原市",center:[124.825042,45.141548],level:"city",districts:[{name:"扶余市",center:[126.049803,44.9892],level:"district",districts:[]},{name:"乾安县",center:[124.041139,45.003773],level:"district",districts:[]},{name:"宁江区",center:[124.86562,45.209915],level:"district",districts:[]},{name:"前郭尔罗斯蒙古族自治县",center:[124.823417,45.118061],level:"district",districts:[]},{name:"长岭县",center:[123.967483,44.275895],level:"district",districts:[]}]},{name:"四平市",center:[124.350398,43.166419],level:"city",districts:[{name:"公主岭市",center:[124.822929,43.504676],level:"district",districts:[]},{name:"梨树县",center:[124.33539,43.30706],level:"district",districts:[]},{name:"双辽市",center:[123.502723,43.518302],level:"district",districts:[]},{name:"铁东区",center:[124.409591,43.162105],level:"district",districts:[]},{name:"铁西区",center:[124.345722,43.146155],level:"district",districts:[]},{name:"伊通满族自治县",center:[125.305393,43.345754],level:"district",districts:[]}]},{name:"通化市",center:[125.939697,41.728401],level:"city",districts:[{name:"东昌区",center:[125.927101,41.702859],level:"district",districts:[]},{name:"二道江区",center:[126.042678,41.774044],level:"district",districts:[]},{name:"辉南县",center:[126.046783,42.684921],level:"district",districts:[]},{name:"集安市",center:[126.19403,41.125307],level:"district",districts:[]},{name:"柳河县",center:[125.744735,42.284605],level:"district",districts:[]},{name:"梅河口市",center:[125.710859,42.539253],level:"district",districts:[]},{name:"通化县",center:[125.759259,41.679808],level:"district",districts:[]}]},{name:"延边朝鲜族自治州",center:[129.471868,42.909408],level:"city",districts:[{name:"安图县",center:[128.899772,43.11195],level:"district",districts:[]},{name:"敦化市",center:[128.232131,43.372642],level:"district",districts:[]},{name:"和龙市",center:[129.010106,42.546675],level:"district",districts:[]},{name:"珲春市",center:[130.366036,42.862821],level:"district",districts:[]},{name:"龙井市",center:[129.427066,42.76631],level:"district",districts:[]},{name:"图们市",center:[129.84371,42.968044],level:"district",districts:[]},{name:"汪清县",center:[129.771607,43.312522],level:"district",districts:[]},{name:"延吉市",center:[129.508804,42.89125],level:"district",districts:[]}]},{name:"长春市",center:[125.323513,43.817251],level:"city",districts:[{name:"朝阳区",center:[125.288254,43.833762],level:"district",districts:[]},{name:"德惠市",center:[125.728755,44.522056],level:"district",districts:[]},{name:"二道区",center:[125.374327,43.865577],level:"district",districts:[]},{name:"九台区",center:[125.839573,44.151742],level:"district",districts:[]},{name:"宽城区",center:[125.326581,43.943612],level:"district",districts:[]},{name:"绿园区",center:[125.256135,43.880975],level:"district",districts:[]},{name:"南关区",center:[125.350173,43.863989],level:"district",districts:[]},{name:"农安县",center:[125.184887,44.432763],level:"district",districts:[]},{name:"双阳区",center:[125.664662,43.525311],level:"district",districts:[]},{name:"榆树市",center:[126.533187,44.840318],level:"district",districts:[]}]}]},{name:"辽宁省",center:[123.431382,41.836175],level:"province",districts:[{name:"鞍山市",center:[122.994329,41.108647],level:"city",districts:[{name:"海城市",center:[122.685217,40.882377],level:"district",districts:[]},{name:"立山区",center:[123.029091,41.150401],level:"district",districts:[]},{name:"千山区",center:[122.944751,41.068901],level:"district",districts:[]},{name:"台安县",center:[122.436196,41.412767],level:"district",districts:[]},{name:"铁东区",center:[122.991052,41.089933],level:"district",districts:[]},{name:"铁西区",center:[122.969629,41.119884],level:"district",districts:[]},{name:"岫岩满族自治县",center:[123.280935,40.29088],level:"district",districts:[]}]},{name:"本溪市",center:[123.685142,41.486981],level:"city",districts:[{name:"本溪满族自治县",center:[124.120635,41.302009],level:"district",districts:[]},{name:"桓仁满族自治县",center:[125.361007,41.267127],level:"district",districts:[]},{name:"明山区",center:[123.817214,41.308719],level:"district",districts:[]},{name:"南芬区",center:[123.744802,41.100445],level:"district",districts:[]},{name:"平山区",center:[123.769088,41.299587],level:"district",districts:[]},{name:"溪湖区",center:[123.767646,41.329219],level:"district",districts:[]}]},{name:"朝阳市",center:[120.450879,41.573762],level:"city",districts:[{name:"北票市",center:[120.77073,41.800683],level:"district",districts:[]},{name:"朝阳县",center:[120.389754,41.497825],level:"district",districts:[]},{name:"建平县",center:[119.64328,41.403128],level:"district",districts:[]},{name:"喀喇沁左翼蒙古族自治县",center:[119.741223,41.12815],level:"district",districts:[]},{name:"凌源市",center:[119.401574,41.245445],level:"district",districts:[]},{name:"龙城区",center:[120.413376,41.576749],level:"district",districts:[]},{name:"双塔区",center:[120.453744,41.565627],level:"district",districts:[]}]},{name:"丹东市",center:[124.35445,40.000787],level:"city",districts:[{name:"东港市",center:[124.152705,39.863008],level:"district",districts:[]},{name:"凤城市",center:[124.066919,40.452297],level:"district",districts:[]},{name:"宽甸满族自治县",center:[124.783659,40.731316],level:"district",districts:[]},{name:"元宝区",center:[124.395661,40.136434],level:"district",districts:[]},{name:"振安区",center:[124.470034,40.201553],level:"district",districts:[]},{name:"振兴区",center:[124.383237,40.129944],level:"district",districts:[]}]},{name:"大连市",center:[121.614848,38.914086],level:"city",districts:[{name:"甘井子区",center:[121.525466,38.953343],level:"district",districts:[]},{name:"金州区",center:[121.782655,39.050001],level:"district",districts:[]},{name:"旅顺口区",center:[121.261953,38.851705],level:"district",districts:[]},{name:"普兰店区",center:[121.938269,39.392095],level:"district",districts:[]},{name:"沙河口区",center:[121.594297,38.904788],level:"district",districts:[]},{name:"瓦房店市",center:[121.979543,39.626897],level:"district",districts:[]},{name:"西岗区",center:[121.612324,38.914687],level:"district",districts:[]},{name:"长海县",center:[122.588494,39.272728],level:"district",districts:[]},{name:"庄河市",center:[122.967424,39.680843],level:"district",districts:[]},{name:"中山区",center:[121.644926,38.918574],level:"district",districts:[]}]},{name:"抚顺市",center:[123.957208,41.880872],level:"city",districts:[{name:"东洲区",center:[124.038685,41.853191],level:"district",districts:[]},{name:"抚顺县",center:[124.097978,41.922644],level:"district",districts:[]},{name:"清原满族自治县",center:[124.924083,42.100538],level:"district",districts:[]},{name:"顺城区",center:[123.945075,41.883235],level:"district",districts:[]},{name:"望花区",center:[123.784225,41.853641],level:"district",districts:[]},{name:"新宾满族自治县",center:[125.039978,41.734256],level:"district",districts:[]},{name:"新抚区",center:[123.912872,41.862026],level:"district",districts:[]}]},{name:"阜新市",center:[121.670273,42.021602],level:"city",districts:[{name:"阜新蒙古族自治县",center:[121.757901,42.065175],level:"district",districts:[]},{name:"海州区",center:[121.657638,42.011162],level:"district",districts:[]},{name:"清河门区",center:[121.416105,41.7831],level:"district",districts:[]},{name:"太平区",center:[121.678604,42.010669],level:"district",districts:[]},{name:"细河区",center:[121.68054,42.025494],level:"district",districts:[]},{name:"新邱区",center:[121.792535,42.087632],level:"district",districts:[]},{name:"彰武县",center:[122.538793,42.386543],level:"district",districts:[]}]},{name:"葫芦岛市",center:[120.836939,40.71104],level:"city",districts:[{name:"建昌县",center:[119.837124,40.824367],level:"district",districts:[]},{name:"连山区",center:[120.869231,40.774461],level:"district",districts:[]},{name:"龙港区",center:[120.893786,40.735519],level:"district",districts:[]},{name:"南票区",center:[120.749727,41.107107],level:"district",districts:[]},{name:"绥中县",center:[120.344311,40.32558],level:"district",districts:[]},{name:"兴城市",center:[120.756479,40.609731],level:"district",districts:[]}]},{name:"锦州市",center:[121.126846,41.095685],level:"city",districts:[{name:"北镇市",center:[121.777395,41.58844],level:"district",districts:[]},{name:"古塔区",center:[121.128279,41.117245],level:"district",districts:[]},{name:"黑山县",center:[122.126292,41.653593],level:"district",districts:[]},{name:"凌河区",center:[121.150877,41.114989],level:"district",districts:[]},{name:"凌海市",center:[121.35549,41.160567],level:"district",districts:[]},{name:"太和区",center:[121.103892,41.109147],level:"district",districts:[]},{name:"义县",center:[121.23908,41.533086],level:"district",districts:[]}]},{name:"辽阳市",center:[123.236974,41.267794],level:"city",districts:[{name:"白塔区",center:[123.174325,41.270347],level:"district",districts:[]},{name:"灯塔市",center:[123.339312,41.426372],level:"district",districts:[]},{name:"弓长岭区",center:[123.419803,41.151847],level:"district",districts:[]},{name:"宏伟区",center:[123.196672,41.217649],level:"district",districts:[]},{name:"辽阳县",center:[123.105694,41.205329],level:"district",districts:[]},{name:"太子河区",center:[123.18144,41.295023],level:"district",districts:[]},{name:"文圣区",center:[123.231408,41.283754],level:"district",districts:[]}]},{name:"盘锦市",center:[122.170584,40.719847],level:"city",districts:[{name:"大洼区",center:[122.082574,41.002279],level:"district",districts:[]},{name:"盘山县",center:[121.996411,41.242639],level:"district",districts:[]},{name:"双台子区",center:[122.039787,41.19965],level:"district",districts:[]},{name:"兴隆台区",center:[122.070769,41.119898],level:"district",districts:[]}]},{name:"沈阳市",center:[123.465035,41.677284],level:"city",districts:[{name:"沈河区",center:[123.458691,41.796177],level:"district",districts:[]},{name:"沈北新区",center:[123.583196,41.912487],level:"district",districts:[]},{name:"大东区",center:[123.469948,41.805137],level:"district",districts:[]},{name:"法库县",center:[123.440294,42.50108],level:"district",districts:[]},{name:"和平区",center:[123.420368,41.789833],level:"district",districts:[]},{name:"皇姑区",center:[123.442378,41.824516],level:"district",districts:[]},{name:"浑南区",center:[123.449714,41.714914],level:"district",districts:[]},{name:"康平县",center:[123.343699,42.72793],level:"district",districts:[]},{name:"辽中区",center:[122.765409,41.516826],level:"district",districts:[]},{name:"苏家屯区",center:[123.344062,41.664757],level:"district",districts:[]},{name:"铁西区",center:[123.333968,41.820807],level:"district",districts:[]},{name:"新民市",center:[122.836723,41.985186],level:"district",districts:[]},{name:"于洪区",center:[123.308119,41.793721],level:"district",districts:[]}]},{name:"铁岭市",center:[123.726035,42.223828],level:"city",districts:[{name:"昌图县",center:[124.111099,42.785791],level:"district",districts:[]},{name:"调兵山市",center:[123.567117,42.467521],level:"district",districts:[]},{name:"开原市",center:[124.038268,42.546307],level:"district",districts:[]},{name:"清河区",center:[124.159191,42.546565],level:"district",districts:[]},{name:"铁岭县",center:[123.728933,42.223395],level:"district",districts:[]},{name:"西丰县",center:[124.727392,42.73803],level:"district",districts:[]},{name:"银州区",center:[123.842305,42.286129],level:"district",districts:[]}]},{name:"营口市",center:[122.219458,40.625364],level:"city",districts:[{name:"鲅鱼圈区",center:[122.121521,40.226661],level:"district",districts:[]},{name:"大石桥市",center:[122.509006,40.644482],level:"district",districts:[]},{name:"盖州市",center:[122.349012,40.40074],level:"district",districts:[]},{name:"老边区",center:[122.380087,40.680191],level:"district",districts:[]},{name:"西市区",center:[122.206419,40.666213],level:"district",districts:[]},{name:"站前区",center:[122.259033,40.672563],level:"district",districts:[]}]}]},{name:"宁夏回族自治区",center:[106.259126,38.472641],level:"province",districts:[{name:"固原市",center:[106.24261,36.015855],level:"city",districts:[{name:"泾源县",center:[106.330646,35.498159],level:"district",districts:[]},{name:"隆德县",center:[106.111595,35.625914],level:"district",districts:[]},{name:"彭阳县",center:[106.631809,35.858815],level:"district",districts:[]},{name:"西吉县",center:[105.729085,35.963912],level:"district",districts:[]},{name:"原州区",center:[106.287781,36.003739],level:"district",districts:[]}]},{name:"石嘴山市",center:[106.383303,38.983236],level:"city",districts:[{name:"大武口区",center:[106.367958,39.01918],level:"district",districts:[]},{name:"惠农区",center:[106.781176,39.239302],level:"district",districts:[]},{name:"平罗县",center:[106.523474,38.913544],level:"district",districts:[]}]},{name:"吴忠市",center:[106.198913,37.997428],level:"city",districts:[{name:"红寺堡区",center:[106.062113,37.425702],level:"district",districts:[]},{name:"利通区",center:[106.212613,37.98349],level:"district",districts:[]},{name:"青铜峡市",center:[106.078817,38.021302],level:"district",districts:[]},{name:"同心县",center:[105.895309,36.95449],level:"district",districts:[]},{name:"盐池县",center:[107.407358,37.783205],level:"district",districts:[]}]},{name:"银川市",center:[106.230909,38.487193],level:"city",districts:[{name:"贺兰县",center:[106.349861,38.554599],level:"district",districts:[]},{name:"金凤区",center:[106.239679,38.47436],level:"district",districts:[]},{name:"灵武市",center:[106.340053,38.102655],level:"district",districts:[]},{name:"西夏区",center:[106.161106,38.502605],level:"district",districts:[]},{name:"兴庆区",center:[106.28865,38.473609],level:"district",districts:[]},{name:"永宁县",center:[106.253145,38.277372],level:"district",districts:[]}]},{name:"中卫市",center:[105.196902,37.499972],level:"city",districts:[{name:"海原县",center:[105.643487,36.565033],level:"district",districts:[]},{name:"沙坡头区",center:[105.173721,37.516883],level:"district",districts:[]},{name:"中宁县",center:[105.685218,37.491546],level:"district",districts:[]}]}]},{name:"内蒙古自治区",center:[111.76629,40.81739],level:"province",districts:[{name:"阿拉善盟",center:[105.728957,38.851921],level:"city",districts:[{name:"阿拉善右旗",center:[101.666917,39.216185],level:"district",districts:[]},{name:"阿拉善左旗",center:[105.666275,38.833389],level:"district",districts:[]},{name:"额济纳旗",center:[101.055731,41.95455],level:"district",districts:[]}]},{name:"巴彦淖尔市",center:[107.387657,40.743213],level:"city",districts:[{name:"磴口县",center:[107.008248,40.330523],level:"district",districts:[]},{name:"杭锦后旗",center:[107.151245,40.88602],level:"district",districts:[]},{name:"临河区",center:[107.363918,40.751187],level:"district",districts:[]},{name:"乌拉特中旗",center:[108.513645,41.587732],level:"district",districts:[]},{name:"乌拉特前旗",center:[108.652114,40.737018],level:"district",districts:[]},{name:"乌拉特后旗",center:[107.074621,41.084282],level:"district",districts:[]},{name:"五原县",center:[108.267561,41.088421],level:"district",districts:[]}]},{name:"包头市",center:[109.953504,40.621157],level:"city",districts:[{name:"白云鄂博矿区",center:[109.973803,41.769511],level:"district",districts:[]},{name:"达尔罕茂明安联合旗",center:[110.432626,41.698992],level:"district",districts:[]},{name:"东河区",center:[110.044106,40.576319],level:"district",districts:[]},{name:"固阳县",center:[110.060514,41.034105],level:"district",districts:[]},{name:"九原区",center:[109.967449,40.610561],level:"district",districts:[]},{name:"昆都仑区",center:[109.837707,40.642578],level:"district",districts:[]},{name:"青山区",center:[109.901572,40.643246],level:"district",districts:[]},{name:"石拐区",center:[110.060254,40.681748],level:"district",districts:[]},{name:"土默特右旗",center:[110.524262,40.569426],level:"district",districts:[]}]},{name:"赤峰市",center:[118.88694,42.257843],level:"city",districts:[{name:"阿鲁科尔沁旗",center:[120.0657,43.872298],level:"district",districts:[]},{name:"巴林右旗",center:[118.66518,43.534414],level:"district",districts:[]},{name:"敖汉旗",center:[119.921603,42.290781],level:"district",districts:[]},{name:"巴林左旗",center:[119.362931,43.960889],level:"district",districts:[]},{name:"红山区",center:[118.953854,42.296588],level:"district",districts:[]},{name:"喀喇沁旗",center:[118.701937,41.927363],level:"district",districts:[]},{name:"克什克腾旗",center:[117.545797,43.264988],level:"district",districts:[]},{name:"林西县",center:[118.05545,43.61812],level:"district",districts:[]},{name:"宁城县",center:[119.318876,41.601375],level:"district",districts:[]},{name:"松山区",center:[118.916208,42.299798],level:"district",districts:[]},{name:"翁牛特旗",center:[119.00658,42.936188],level:"district",districts:[]},{name:"元宝山区",center:[119.288611,42.038902],level:"district",districts:[]}]},{name:"鄂尔多斯市",center:[109.781327,39.608266],level:"city",districts:[{name:"达拉特旗",center:[110.033833,40.412438],level:"district",districts:[]},{name:"东胜区",center:[109.963333,39.822593],level:"district",districts:[]},{name:"鄂托克旗",center:[107.97616,39.08965],level:"district",districts:[]},{name:"鄂托克前旗",center:[107.477514,38.182362],level:"district",districts:[]},{name:"杭锦旗",center:[108.736208,39.833309],level:"district",districts:[]},{name:"康巴什区",center:[109.790076,39.607472],level:"district",districts:[]},{name:"乌审旗",center:[108.817607,38.604136],level:"district",districts:[]},{name:"伊金霍洛旗",center:[109.74774,39.564659],level:"district",districts:[]},{name:"准格尔旗",center:[111.240171,39.864361],level:"district",districts:[]}]},{name:"呼和浩特市",center:[111.749995,40.842356],level:"city",districts:[{name:"和林格尔县",center:[111.821843,40.378787],level:"district",districts:[]},{name:"回民区",center:[111.623692,40.808608],level:"district",districts:[]},{name:"清水河县",center:[111.647609,39.921095],level:"district",districts:[]},{name:"赛罕区",center:[111.701355,40.792667],level:"district",districts:[]},{name:"土默特左旗",center:[111.163902,40.729572],level:"district",districts:[]},{name:"托克托县",center:[111.194312,40.277431],level:"district",districts:[]},{name:"武川县",center:[111.451303,41.096471],level:"district",districts:[]},{name:"新城区",center:[111.665544,40.858289],level:"district",districts:[]},{name:"玉泉区",center:[111.673881,40.753655],level:"district",districts:[]}]},{name:"呼伦贝尔市",center:[119.765558,49.211576],level:"city",districts:[{name:"阿荣旗",center:[123.459049,48.126584],level:"district",districts:[]},{name:"陈巴尔虎旗",center:[119.424026,49.328916],level:"district",districts:[]},{name:"额尔古纳市",center:[120.180506,50.243102],level:"district",districts:[]},{name:"鄂伦春自治旗",center:[123.726201,50.591842],level:"district",districts:[]},{name:"鄂温克族自治旗",center:[119.755239,49.146592],level:"district",districts:[]},{name:"根河市",center:[121.520388,50.780344],level:"district",districts:[]},{name:"海拉尔区",center:[119.736176,49.212188],level:"district",districts:[]},{name:"满洲里市",center:[117.378529,49.597841],level:"district",districts:[]},{name:"莫力达瓦达斡尔族自治旗",center:[124.519023,48.477728],level:"district",districts:[]},{name:"新巴尔虎右旗",center:[116.82369,48.672101],level:"district",districts:[]},{name:"新巴尔虎左旗",center:[118.269819,48.218241],level:"district",districts:[]},{name:"牙克石市",center:[120.711775,49.285629],level:"district",districts:[]},{name:"扎兰屯市",center:[122.737467,48.013733],level:"district",districts:[]},{name:"扎赉诺尔区",center:[117.670248,49.510375],level:"district",districts:[]}]},{name:"乌海市",center:[106.794216,39.655248],level:"city",districts:[{name:"海勃湾区",center:[106.822778,39.691156],level:"district",districts:[]},{name:"海南区",center:[106.891424,39.441364],level:"district",districts:[]},{name:"乌达区",center:[106.726099,39.505925],level:"district",districts:[]}]},{name:"乌兰察布市",center:[113.132584,40.994785],level:"city",districts:[{name:"察哈尔右翼中旗",center:[112.635577,41.277462],level:"district",districts:[]},{name:"察哈尔右翼前旗",center:[113.214733,40.785631],level:"district",districts:[]},{name:"察哈尔右翼后旗",center:[113.191035,41.436069],level:"district",districts:[]},{name:"丰镇市",center:[113.109892,40.436983],level:"district",districts:[]},{name:"化德县",center:[114.010437,41.90456],level:"district",districts:[]},{name:"集宁区",center:[113.116453,41.034134],level:"district",districts:[]},{name:"凉城县",center:[112.503971,40.531555],level:"district",districts:[]},{name:"商都县",center:[113.577816,41.562113],level:"district",districts:[]},{name:"四子王旗",center:[111.706617,41.533462],level:"district",districts:[]},{name:"兴和县",center:[113.834173,40.872301],level:"district",districts:[]},{name:"卓资县",center:[112.577528,40.894691],level:"district",districts:[]}]},{name:"通辽市",center:[122.243444,43.652889],level:"city",districts:[{name:"霍林郭勒市",center:[119.68187,45.533962],level:"district",districts:[]},{name:"科尔沁左翼中旗",center:[123.312264,44.126625],level:"district",districts:[]},{name:"开鲁县",center:[121.319308,43.601244],level:"district",districts:[]},{name:"科尔沁区",center:[122.255671,43.623078],level:"district",districts:[]},{name:"科尔沁左翼后旗",center:[122.35677,42.935105],level:"district",districts:[]},{name:"库伦旗",center:[121.8107,42.735656],level:"district",districts:[]},{name:"奈曼旗",center:[120.658282,42.867226],level:"district",districts:[]},{name:"扎鲁特旗",center:[120.911676,44.556389],level:"district",districts:[]}]},{name:"锡林郭勒盟",center:[116.048222,43.933454],level:"city",districts:[{name:"阿巴嘎旗",center:[114.950248,44.022995],level:"district",districts:[]},{name:"东乌珠穆沁旗",center:[116.974494,45.498221],level:"district",districts:[]},{name:"二连浩特市",center:[111.951002,43.6437],level:"district",districts:[]},{name:"多伦县",center:[116.485555,42.203591],level:"district",districts:[]},{name:"苏尼特右旗",center:[112.641783,42.742892],level:"district",districts:[]},{name:"苏尼特左旗",center:[113.667248,43.85988],level:"district",districts:[]},{name:"太仆寺旗",center:[115.282986,41.877135],level:"district",districts:[]},{name:"锡林浩特市",center:[116.086029,43.933403],level:"district",districts:[]},{name:"镶黄旗",center:[113.847287,42.232371],level:"district",districts:[]},{name:"西乌珠穆沁旗",center:[117.608911,44.587882],level:"district",districts:[]},{name:"正镶白旗",center:[115.029848,42.28747],level:"district",districts:[]},{name:"正蓝旗",center:[115.99247,42.241638],level:"district",districts:[]}]},{name:"兴安盟",center:[122.037657,46.082462],level:"city",districts:[{name:"阿尔山市",center:[119.943575,47.17744],level:"district",districts:[]},{name:"科尔沁右翼中旗",center:[121.47653,45.060837],level:"district",districts:[]},{name:"科尔沁右翼前旗",center:[121.952621,46.079833],level:"district",districts:[]},{name:"突泉县",center:[121.593799,45.38193],level:"district",districts:[]},{name:"乌兰浩特市",center:[122.093123,46.072731],level:"district",districts:[]},{name:"扎赉特旗",center:[122.899656,46.723237],level:"district",districts:[]}]}]},{name:"山东省",center:[117.019915,36.671156],level:"province",districts:[{name:"滨州市",center:[117.970699,37.38198],level:"city",districts:[{name:"博兴县",center:[118.110709,37.15457],level:"district",districts:[]},{name:"滨城区",center:[118.019326,37.430724],level:"district",districts:[]},{name:"惠民县",center:[117.509921,37.489877],level:"district",districts:[]},{name:"无棣县",center:[117.625696,37.77026],level:"district",districts:[]},{name:"阳信县",center:[117.603339,37.632433],level:"district",districts:[]},{name:"沾化区",center:[118.098902,37.69926],level:"district",districts:[]},{name:"邹平县",center:[117.743109,36.862989],level:"district",districts:[]}]},{name:"德州市",center:[116.359381,37.436657],level:"city",districts:[{name:"德城区",center:[116.29947,37.450804],level:"district",districts:[]},{name:"乐陵市",center:[117.231934,37.729907],level:"district",districts:[]},{name:"临邑县",center:[116.866799,37.189797],level:"district",districts:[]},{name:"陵城区",center:[116.576092,37.335794],level:"district",districts:[]},{name:"宁津县",center:[116.800306,37.652189],level:"district",districts:[]},{name:"平原县",center:[116.434032,37.165323],level:"district",districts:[]},{name:"齐河县",center:[116.762893,36.784158],level:"district",districts:[]},{name:"庆云县",center:[117.385256,37.775349],level:"district",districts:[]},{name:"武城县",center:[116.069302,37.213311],level:"district",districts:[]},{name:"夏津县",center:[116.001726,36.948371],level:"district",districts:[]},{name:"禹城市",center:[116.638327,36.933812],level:"district",districts:[]}]},{name:"东营市",center:[118.674614,37.433963],level:"city",districts:[{name:"东营区",center:[118.582184,37.448964],level:"district",districts:[]},{name:"广饶县",center:[118.407107,37.053555],level:"district",districts:[]},{name:"河口区",center:[118.525543,37.886162],level:"district",districts:[]},{name:"垦利区",center:[118.575228,37.573054],level:"district",districts:[]},{name:"利津县",center:[118.255287,37.490328],level:"district",districts:[]}]},{name:"菏泽市",center:[115.480656,35.23375],level:"city",districts:[{name:"曹县",center:[115.542328,34.825508],level:"district",districts:[]},{name:"成武县",center:[115.889764,34.952459],level:"district",districts:[]},{name:"单县",center:[116.107428,34.778808],level:"district",districts:[]},{name:"定陶区",center:[115.57302,35.070995],level:"district",districts:[]},{name:"东明县",center:[115.107404,35.276162],level:"district",districts:[]},{name:"鄄城县",center:[115.510192,35.563408],level:"district",districts:[]},{name:"巨野县",center:[116.062394,35.388925],level:"district",districts:[]},{name:"牡丹区",center:[115.417826,35.252512],level:"district",districts:[]},{name:"郓城县",center:[115.9389,35.575135],level:"district",districts:[]}]},{name:"济南市",center:[117.120098,36.6512],level:"city",districts:[{name:"槐荫区",center:[116.901224,36.651441],level:"district",districts:[]},{name:"济阳县",center:[117.173524,36.978537],level:"district",districts:[]},{name:"历下区",center:[117.076441,36.666465],level:"district",districts:[]},{name:"历城区",center:[117.06523,36.680259],level:"district",districts:[]},{name:"平阴县",center:[116.456006,36.289251],level:"district",districts:[]},{name:"商河县",center:[117.157232,37.309041],level:"district",districts:[]},{name:"市中区",center:[116.997845,36.651335],level:"district",districts:[]},{name:"天桥区",center:[116.987153,36.678589],level:"district",districts:[]},{name:"章丘区",center:[117.526228,36.681258],level:"district",districts:[]},{name:"长清区",center:[116.751843,36.55371],level:"district",districts:[]}]},{name:"济宁市",center:[116.587282,35.414982],level:"city",districts:[{name:"嘉祥县",center:[116.342449,35.408824],level:"district",districts:[]},{name:"金乡县",center:[116.311532,35.066619],level:"district",districts:[]},{name:"梁山县",center:[116.096044,35.802306],level:"district",districts:[]},{name:"曲阜市",center:[116.986526,35.581108],level:"district",districts:[]},{name:"任城区",center:[116.606103,35.444028],level:"district",districts:[]},{name:"泗水县",center:[117.251195,35.664323],level:"district",districts:[]},{name:"微山县",center:[117.128827,34.806554],level:"district",districts:[]},{name:"汶上县",center:[116.49708,35.712298],level:"district",districts:[]},{name:"兖州区",center:[116.783833,35.553144],level:"district",districts:[]},{name:"鱼台县",center:[116.650608,35.012749],level:"district",districts:[]},{name:"邹城市",center:[117.007453,35.40268],level:"district",districts:[]}]},{name:"莱芜市",center:[117.676723,36.213813],level:"city",districts:[{name:"钢城区",center:[117.811354,36.058572],level:"district",districts:[]},{name:"莱城区",center:[117.659884,36.203179],level:"district",districts:[]}]},{name:"聊城市",center:[115.985389,36.456684],level:"city",districts:[{name:"茌平县",center:[116.25527,36.580688],level:"district",districts:[]},{name:"东昌府区",center:[115.988349,36.434669],level:"district",districts:[]},{name:"东阿县",center:[116.247579,36.334917],level:"district",districts:[]},{name:"高唐县",center:[116.23016,36.846762],level:"district",districts:[]},{name:"冠县",center:[115.442739,36.484009],level:"district",districts:[]},{name:"临清市",center:[115.704881,36.838277],level:"district",districts:[]},{name:"莘县",center:[115.671191,36.233598],level:"district",districts:[]},{name:"阳谷县",center:[115.79182,36.114392],level:"district",districts:[]}]},{name:"临沂市",center:[118.356414,35.104673],level:"city",districts:[{name:"费县",center:[117.977325,35.26596],level:"district",districts:[]},{name:"河东区",center:[118.402893,35.089916],level:"district",districts:[]},{name:"莒南县",center:[118.835163,35.174846],level:"district",districts:[]},{name:"兰陵县",center:[118.07065,34.857149],level:"district",districts:[]},{name:"兰山区",center:[118.347842,35.051804],level:"district",districts:[]},{name:"临沭县",center:[118.650781,34.919851],level:"district",districts:[]},{name:"罗庄区",center:[118.284786,34.996741],level:"district",districts:[]},{name:"蒙阴县",center:[117.953621,35.719396],level:"district",districts:[]},{name:"平邑县",center:[117.640352,35.505943],level:"district",districts:[]},{name:"郯城县",center:[118.367215,34.613586],level:"district",districts:[]},{name:"沂南县",center:[118.465221,35.550217],level:"district",districts:[]},{name:"沂水县",center:[118.627917,35.79045],level:"district",districts:[]}]},{name:"青岛市",center:[120.382621,36.067131],level:"city",districts:[{name:"城阳区",center:[120.396256,36.307559],level:"district",districts:[]},{name:"黄岛区",center:[120.198055,35.960933],level:"district",districts:[]},{name:"即墨区",center:[120.447158,36.389408],level:"district",districts:[]},{name:"胶州市",center:[120.033382,36.26468],level:"district",districts:[]},{name:"莱西市",center:[120.51769,36.889084],level:"district",districts:[]},{name:"李沧区",center:[120.432922,36.145519],level:"district",districts:[]},{name:"崂山区",center:[120.468956,36.107538],level:"district",districts:[]},{name:"平度市",center:[119.98842,36.776357],level:"district",districts:[]},{name:"市南区",center:[120.412392,36.075651],level:"district",districts:[]},{name:"市北区",center:[120.374701,36.0876],level:"district",districts:[]}]},{name:"日照市",center:[119.526925,35.416734],level:"city",districts:[{name:"东港区",center:[119.462267,35.42548],level:"district",districts:[]},{name:"莒县",center:[118.837063,35.579868],level:"district",districts:[]},{name:"岚山区",center:[119.318928,35.121884],level:"district",districts:[]},{name:"五莲县",center:[119.213619,35.760228],level:"district",districts:[]}]},{name:"泰安市",center:[117.087614,36.200252],level:"city",districts:[{name:"岱岳区",center:[117.041581,36.187989],level:"district",districts:[]},{name:"东平县",center:[116.470304,35.937102],level:"district",districts:[]},{name:"肥城市",center:[116.768358,36.182571],level:"district",districts:[]},{name:"宁阳县",center:[116.805796,35.758786],level:"district",districts:[]},{name:"泰山区",center:[117.135354,36.192083],level:"district",districts:[]},{name:"新泰市",center:[117.767952,35.909032],level:"district",districts:[]}]},{name:"威海市",center:[122.120282,37.513412],level:"city",districts:[{name:"环翠区",center:[122.123443,37.50199],level:"district",districts:[]},{name:"乳山市",center:[121.539764,36.919816],level:"district",districts:[]},{name:"荣成市",center:[122.486657,37.16516],level:"district",districts:[]},{name:"文登区",center:[122.05767,37.193735],level:"district",districts:[]}]},{name:"潍坊市",center:[119.161748,36.706962],level:"city",districts:[{name:"安丘市",center:[119.218978,36.478493],level:"district",districts:[]},{name:"昌乐县",center:[118.829992,36.706964],level:"district",districts:[]},{name:"昌邑市",center:[119.403069,36.843319],level:"district",districts:[]},{name:"坊子区",center:[119.166485,36.654448],level:"district",districts:[]},{name:"高密市",center:[119.755597,36.382594],level:"district",districts:[]},{name:"寒亭区",center:[119.211157,36.755623],level:"district",districts:[]},{name:"奎文区",center:[119.132482,36.70759],level:"district",districts:[]},{name:"临朐县",center:[118.542982,36.512506],level:"district",districts:[]},{name:"青州市",center:[118.479654,36.684789],level:"district",districts:[]},{name:"寿光市",center:[118.790739,36.85576],level:"district",districts:[]},{name:"潍城区",center:[119.024835,36.7281],level:"district",districts:[]},{name:"诸城市",center:[119.410103,35.995654],level:"district",districts:[]}]},{name:"烟台市",center:[121.447852,37.464539],level:"city",districts:[{name:"福山区",center:[121.267741,37.498246],level:"district",districts:[]},{name:"海阳市",center:[121.173793,36.688],level:"district",districts:[]},{name:"莱山区",center:[121.445301,37.511291],level:"district",districts:[]},{name:"莱阳市",center:[120.711672,36.978941],level:"district",districts:[]},{name:"莱州市",center:[119.942274,37.177129],level:"district",districts:[]},{name:"龙口市",center:[120.477813,37.646107],level:"district",districts:[]},{name:"牟平区",center:[121.600455,37.387061],level:"district",districts:[]},{name:"蓬莱市",center:[120.758848,37.810661],level:"district",districts:[]},{name:"栖霞市",center:[120.849675,37.335123],level:"district",districts:[]},{name:"招远市",center:[120.434071,37.355469],level:"district",districts:[]},{name:"芝罘区",center:[121.400445,37.541475],level:"district",districts:[]},{name:"长岛县",center:[120.73658,37.921368],level:"district",districts:[]}]},{name:"枣庄市",center:[117.323725,34.810488],level:"city",districts:[{name:"山亭区",center:[117.461517,35.099528],level:"district",districts:[]},{name:"市中区",center:[117.556139,34.863554],level:"district",districts:[]},{name:"台儿庄区",center:[117.734414,34.56244],level:"district",districts:[]},{name:"滕州市",center:[117.165824,35.114155],level:"district",districts:[]},{name:"薛城区",center:[117.263164,34.795062],level:"district",districts:[]},{name:"峄城区",center:[117.590816,34.773263],level:"district",districts:[]}]},{name:"淄博市",center:[118.055019,36.813546],level:"city",districts:[{name:"博山区",center:[117.861851,36.494701],level:"district",districts:[]},{name:"高青县",center:[117.826924,37.170979],level:"district",districts:[]},{name:"桓台县",center:[118.097922,36.959804],level:"district",districts:[]},{name:"临淄区",center:[118.309118,36.826981],level:"district",districts:[]},{name:"沂源县",center:[118.170855,36.185038],level:"district",districts:[]},{name:"张店区",center:[118.017938,36.806669],level:"district",districts:[]},{name:"周村区",center:[117.869886,36.803072],level:"district",districts:[]},{name:"淄川区",center:[117.966723,36.643452],level:"district",districts:[]}]}]},{name:"青海省",center:[101.780268,36.620939],level:"province",districts:[{name:"果洛藏族自治州",center:[100.244808,34.471431],level:"city",districts:[{name:"班玛县",center:[100.737138,32.932723],level:"district",districts:[]},{name:"达日县",center:[99.651392,33.74892],level:"district",districts:[]},{name:"甘德县",center:[99.900923,33.969216],level:"district",districts:[]},{name:"久治县",center:[101.482831,33.429471],level:"district",districts:[]},{name:"玛沁县",center:[100.238888,34.477433],level:"district",districts:[]},{name:"玛多县",center:[98.209206,34.915946],level:"district",districts:[]}]},{name:"海东市",center:[102.104287,36.502039],level:"city",districts:[{name:"互助土族自治县",center:[101.959271,36.844248],level:"district",districts:[]},{name:"化隆回族自治县",center:[102.264143,36.094908],level:"district",districts:[]},{name:"乐都区",center:[102.401724,36.482058],level:"district",districts:[]},{name:"民和回族土族自治县",center:[102.830892,36.320321],level:"district",districts:[]},{name:"平安区",center:[102.108834,36.500563],level:"district",districts:[]},{name:"循化撒拉族自治县",center:[102.489135,35.851152],level:"district",districts:[]}]},{name:"海北藏族自治州",center:[100.900997,36.954413],level:"city",districts:[{name:"刚察县",center:[100.145833,37.32547],level:"district",districts:[]},{name:"海晏县",center:[100.99426,36.896359],level:"district",districts:[]},{name:"门源回族自治县",center:[101.611539,37.388746],level:"district",districts:[]},{name:"祁连县",center:[100.253211,38.177112],level:"district",districts:[]}]},{name:"海西蒙古族藏族自治州",center:[97.369751,37.377139],level:"city",districts:[{name:"德令哈市",center:[97.360984,37.369436],level:"district",districts:[]},{name:"都兰县",center:[98.095844,36.302496],level:"district",districts:[]},{name:"格尔木市",center:[94.928453,36.406367],level:"district",districts:[]},{name:"海西蒙古族藏族自治州直辖",center:[95.356546,37.853328],level:"district",districts:[]},{name:"天峻县",center:[99.022984,37.300851],level:"district",districts:[]},{name:"乌兰县",center:[98.480195,36.929749],level:"district",districts:[]}]},{name:"海南藏族自治州",center:[100.622692,36.296529],level:"city",districts:[{name:"共和县",center:[100.620031,36.284107],level:"district",districts:[]},{name:"贵南县",center:[100.747503,35.586714],level:"district",districts:[]},{name:"贵德县",center:[101.433391,36.040166],level:"district",districts:[]},{name:"同德县",center:[100.578051,35.25479],level:"district",districts:[]},{name:"兴海县",center:[99.987965,35.588612],level:"district",districts:[]}]},{name:"黄南藏族自治州",center:[102.015248,35.519548],level:"city",districts:[{name:"河南蒙古族自治县",center:[101.617503,34.734568],level:"district",districts:[]},{name:"尖扎县",center:[102.04014,35.943156],level:"district",districts:[]},{name:"同仁县",center:[102.018323,35.516063],level:"district",districts:[]},{name:"泽库县",center:[101.466689,35.035313],level:"district",districts:[]}]},{name:"西宁市",center:[101.778223,36.617134],level:"city",districts:[{name:"城北区",center:[101.766228,36.650038],level:"district",districts:[]},{name:"城东区",center:[101.803717,36.599744],level:"district",districts:[]},{name:"城中区",center:[101.705298,36.545652],level:"district",districts:[]},{name:"城西区",center:[101.765843,36.628304],level:"district",districts:[]},{name:"大通回族土族自治县",center:[101.685643,36.926954],level:"district",districts:[]},{name:"湟中县",center:[101.571667,36.500879],level:"district",districts:[]},{name:"湟源县",center:[101.256464,36.682426],level:"district",districts:[]}]},{name:"玉树藏族自治州",center:[97.091934,33.011674],level:"city",districts:[{name:"称多县",center:[97.110831,33.369218],level:"district",districts:[]},{name:"囊谦县",center:[96.48943,32.203432],level:"district",districts:[]},{name:"曲麻莱县",center:[95.797367,34.126428],level:"district",districts:[]},{name:"玉树市",center:[97.008784,32.993106],level:"district",districts:[]},{name:"杂多县",center:[95.300723,32.893185],level:"district",districts:[]},{name:"治多县",center:[95.61896,33.844956],level:"district",districts:[]}]}]},{name:"陕西省",center:[108.954347,34.265502],level:"province",districts:[{name:"安康市",center:[109.029113,32.68481],level:"city",districts:[{name:"白河县",center:[110.112629,32.809026],level:"district",districts:[]},{name:"汉阴县",center:[108.508745,32.893026],level:"district",districts:[]},{name:"汉滨区",center:[109.026836,32.695172],level:"district",districts:[]},{name:"岚皋县",center:[108.902049,32.307001],level:"district",districts:[]},{name:"宁陕县",center:[108.314283,33.310527],level:"district",districts:[]},{name:"平利县",center:[109.361864,32.388854],level:"district",districts:[]},{name:"石泉县",center:[108.247886,33.038408],level:"district",districts:[]},{name:"旬阳县",center:[109.361024,32.832012],level:"district",districts:[]},{name:"镇坪县",center:[109.526873,31.883672],level:"district",districts:[]},{name:"紫阳县",center:[108.534228,32.520246],level:"district",districts:[]}]},{name:"宝鸡市",center:[107.237743,34.363184],level:"city",districts:[{name:"陈仓区",center:[107.369987,34.35147],level:"district",districts:[]},{name:"凤县",center:[106.515803,33.91091],level:"district",districts:[]},{name:"凤翔县",center:[107.400737,34.521217],level:"district",districts:[]},{name:"扶风县",center:[107.900219,34.37541],level:"district",districts:[]},{name:"金台区",center:[107.146806,34.376069],level:"district",districts:[]},{name:"麟游县",center:[107.793524,34.677902],level:"district",districts:[]},{name:"陇县",center:[106.864397,34.89305],level:"district",districts:[]},{name:"眉县",center:[107.749766,34.274246],level:"district",districts:[]},{name:"岐山县",center:[107.621053,34.443459],level:"district",districts:[]},{name:"千阳县",center:[107.132441,34.642381],level:"district",districts:[]},{name:"太白县",center:[107.319116,34.058401],level:"district",districts:[]},{name:"渭滨区",center:[107.155344,34.355068],level:"district",districts:[]}]},{name:"汉中市",center:[107.02305,33.067225],level:"city",districts:[{name:"城固县",center:[107.33393,33.157131],level:"district",districts:[]},{name:"略阳县",center:[106.156718,33.327281],level:"district",districts:[]},{name:"佛坪县",center:[107.990538,33.524359],level:"district",districts:[]},{name:"汉台区",center:[107.031856,33.067771],level:"district",districts:[]},{name:"留坝县",center:[106.920808,33.617571],level:"district",districts:[]},{name:"勉县",center:[106.673221,33.153553],level:"district",districts:[]},{name:"南郑区",center:[106.93623,32.999333],level:"district",districts:[]},{name:"宁强县",center:[106.257171,32.829694],level:"district",districts:[]},{name:"西乡县",center:[107.766613,32.983101],level:"district",districts:[]},{name:"洋县",center:[107.545836,33.222738],level:"district",districts:[]},{name:"镇巴县",center:[107.895035,32.536704],level:"district",districts:[]}]},{name:"商洛市",center:[109.91857,33.872726],level:"city",districts:[{name:"丹凤县",center:[110.32733,33.695783],level:"district",districts:[]},{name:"洛南县",center:[110.148508,34.090837],level:"district",districts:[]},{name:"山阳县",center:[109.882289,33.532172],level:"district",districts:[]},{name:"商南县",center:[110.881807,33.530995],level:"district",districts:[]},{name:"商州区",center:[109.941839,33.862599],level:"district",districts:[]},{name:"柞水县",center:[109.114206,33.68611],level:"district",districts:[]},{name:"镇安县",center:[109.152892,33.423357],level:"district",districts:[]}]},{name:"铜川市",center:[108.945019,34.897887],level:"city",districts:[{name:"王益区",center:[109.075578,35.068964],level:"district",districts:[]},{name:"宜君县",center:[109.116932,35.398577],level:"district",districts:[]},{name:"耀州区",center:[108.980102,34.909793],level:"district",districts:[]},{name:"印台区",center:[109.099974,35.114492],level:"district",districts:[]}]},{name:"渭南市",center:[109.471094,34.52044],level:"city",districts:[{name:"白水县",center:[109.590671,35.177451],level:"district",districts:[]},{name:"澄城县",center:[109.93235,35.190245],level:"district",districts:[]},{name:"大荔县",center:[109.941734,34.797259],level:"district",districts:[]},{name:"富平县",center:[109.18032,34.751077],level:"district",districts:[]},{name:"韩城市",center:[110.442846,35.476788],level:"district",districts:[]},{name:"合阳县",center:[110.149453,35.237988],level:"district",districts:[]},{name:"华阴市",center:[110.092078,34.566079],level:"district",districts:[]},{name:"华州区",center:[109.775247,34.495915],level:"district",districts:[]},{name:"临渭区",center:[109.510175,34.499314],level:"district",districts:[]},{name:"蒲城县",center:[109.586403,34.955562],level:"district",districts:[]},{name:"潼关县",center:[110.246349,34.544296],level:"district",districts:[]}]},{name:"西安市",center:[108.93977,34.341574],level:"city",districts:[{name:"灞桥区",center:[109.064646,34.272793],level:"district",districts:[]},{name:"碑林区",center:[108.94059,34.256783],level:"district",districts:[]},{name:"高陵区",center:[109.088297,34.534829],level:"district",districts:[]},{name:"鄠邑区",center:[108.604894,34.109244],level:"district",districts:[]},{name:"蓝田县",center:[109.32345,34.151298],level:"district",districts:[]},{name:"莲湖区",center:[108.943895,34.265239],level:"district",districts:[]},{name:"临潼区",center:[109.214237,34.367069],level:"district",districts:[]},{name:"未央区",center:[108.946825,34.29292],level:"district",districts:[]},{name:"新城区",center:[108.960716,34.266447],level:"district",districts:[]},{name:"阎良区",center:[109.226124,34.662232],level:"district",districts:[]},{name:"雁塔区",center:[108.944644,34.214113],level:"district",districts:[]},{name:"长安区",center:[108.907173,34.158926],level:"district",districts:[]},{name:"周至县",center:[108.222162,34.163669],level:"district",districts:[]}]},{name:"咸阳市",center:[108.709136,34.32987],level:"city",districts:[{name:"彬县",center:[108.077658,35.043911],level:"district",districts:[]},{name:"淳化县",center:[108.580681,34.79925],level:"district",districts:[]},{name:"乾县",center:[108.239473,34.527551],level:"district",districts:[]},{name:"泾阳县",center:[108.842622,34.527114],level:"district",districts:[]},{name:"礼泉县",center:[108.425018,34.481764],level:"district",districts:[]},{name:"秦都区",center:[108.706272,34.329567],level:"district",districts:[]},{name:"三原县",center:[108.940509,34.617381],level:"district",districts:[]},{name:"渭城区",center:[108.737204,34.36195],level:"district",districts:[]},{name:"武功县",center:[108.200398,34.260203],level:"district",districts:[]},{name:"兴平市",center:[108.490475,34.29922],level:"district",districts:[]},{name:"旬邑县",center:[108.333986,35.111978],level:"district",districts:[]},{name:"杨陵区",center:[108.084731,34.272117],level:"district",districts:[]},{name:"永寿县",center:[108.142311,34.691979],level:"district",districts:[]},{name:"长武县",center:[107.798757,35.205886],level:"district",districts:[]}]},{name:"延安市",center:[109.494112,36.651381],level:"city",districts:[{name:"安塞区",center:[109.328842,36.863853],level:"district",districts:[]},{name:"宝塔区",center:[109.48976,36.585472],level:"district",districts:[]},{name:"富县",center:[109.379776,35.987953],level:"district",districts:[]},{name:"甘泉县",center:[109.351019,36.276526],level:"district",districts:[]},{name:"黄龙县",center:[109.840314,35.584743],level:"district",districts:[]},{name:"黄陵县",center:[109.262961,35.579427],level:"district",districts:[]},{name:"洛川县",center:[109.432369,35.761974],level:"district",districts:[]},{name:"吴起县",center:[108.175933,36.927215],level:"district",districts:[]},{name:"延川县",center:[110.193514,36.878117],level:"district",districts:[]},{name:"延长县",center:[110.012334,36.579313],level:"district",districts:[]},{name:"宜川县",center:[110.168963,36.050178],level:"district",districts:[]},{name:"志丹县",center:[108.768432,36.822194],level:"district",districts:[]},{name:"子长县",center:[109.675264,37.142535],level:"district",districts:[]}]},{name:"榆林市",center:[109.734474,38.285369],level:"city",districts:[{name:"定边县",center:[107.601267,37.594612],level:"district",districts:[]},{name:"府谷县",center:[111.067276,39.028116],level:"district",districts:[]},{name:"横山区",center:[109.294346,37.962208],level:"district",districts:[]},{name:"佳县",center:[110.491345,38.01951],level:"district",districts:[]},{name:"靖边县",center:[108.793988,37.599438],level:"district",districts:[]},{name:"米脂县",center:[110.183754,37.755416],level:"district",districts:[]},{name:"清涧县",center:[110.121209,37.088878],level:"district",districts:[]},{name:"神木市",center:[110.498939,38.842578],level:"district",districts:[]},{name:"绥德县",center:[110.263362,37.50294],level:"district",districts:[]},{name:"吴堡县",center:[110.739673,37.452067],level:"district",districts:[]},{name:"榆阳区",center:[109.721069,38.277046],level:"district",districts:[]},{name:"子洲县",center:[110.03525,37.610683],level:"district",districts:[]}]}]},{name:"天津市",center:[117.200983,39.084158],level:"province",districts:[{name:"天津城区",center:[117.200983,39.084158],level:"city",districts:[{name:"宝坻区",center:[117.309874,39.717564],level:"district",districts:[]},{name:"北辰区",center:[117.135488,39.224791],level:"district",districts:[]},{name:"滨海新区",center:[117.698407,39.01727],level:"district",districts:[]},{name:"东丽区",center:[117.31362,39.086802],level:"district",districts:[]},{name:"和平区",center:[117.214699,39.117196],level:"district",districts:[]},{name:"河北区",center:[117.196648,39.147869],level:"district",districts:[]},{name:"河东区",center:[117.251584,39.128294],level:"district",districts:[]},{name:"河西区",center:[117.223371,39.109563],level:"district",districts:[]},{name:"红桥区",center:[117.151533,39.167345],level:"district",districts:[]},{name:"蓟州区",center:[117.408296,40.045851],level:"district",districts:[]},{name:"津南区",center:[117.35726,38.937928],level:"district",districts:[]},{name:"静海区",center:[116.974232,38.94745],level:"district",districts:[]},{name:"南开区",center:[117.150738,39.138205],level:"district",districts:[]},{name:"宁河区",center:[117.826724,39.330087],level:"district",districts:[]},{name:"武清区",center:[117.044387,39.384119],level:"district",districts:[]},{name:"西青区",center:[117.008826,39.141152],level:"district",districts:[]}]}]},{name:"香港特别行政区",center:[114.171203,22.277468],level:"province",districts:[{name:"油尖旺区",center:[114.173332,22.311704],level:"district",districts:[]},{name:"湾仔区",center:[114.182915,22.276389],level:"district",districts:[]},{name:"北区",center:[114.147364,22.496104],level:"district",districts:[{name:"龙跃头乡",center:[114.154061,22.500422],level:"street",districts:[]}]},{name:"大埔区",center:[114.171743,22.445653],level:"district",districts:[]},{name:"东区",center:[114.226003,22.279693],level:"district",districts:[]},{name:"观塘区",center:[114.214054,22.320838],level:"district",districts:[]},{name:"黄大仙区",center:[114.203886,22.336321],level:"district",districts:[]},{name:"九龙城区",center:[114.192847,22.31251],level:"district",districts:[]},{name:"葵青区",center:[114.139319,22.363877],level:"district",districts:[]},{name:"离岛区",center:[113.94612,22.286408],level:"district",districts:[{name:"梅窝乡",center:[114.000813,22.264829],level:"street",districts:[]}]},{name:"南区",center:[114.160012,22.245897],level:"district",districts:[]},{name:"荃湾区",center:[114.121079,22.368306],level:"district",districts:[]},{name:"沙田区",center:[114.195365,22.379532],level:"district",districts:[]},{name:"深水埗区",center:[114.163242,22.333854],level:"district",districts:[]},{name:"屯门区",center:[113.976574,22.393844],level:"district",districts:[]},{name:"西贡区",center:[114.264645,22.314213],level:"district",districts:[]},{name:"元朗区",center:[114.032438,22.441428],level:"district",districts:[{name:"逢吉乡",center:[114.063044,22.45481],level:"street",districts:[]}]},{name:"中西区",center:[114.154373,22.281981],level:"district",districts:[]}]},{name:"四川省",center:[104.075809,30.651239],level:"province",districts:[{name:"阿坝藏族羌族自治州",center:[102.224653,31.899413],level:"city",districts:[{name:"阿坝县",center:[101.706655,32.902459],level:"district",districts:[]},{name:"红原县",center:[102.544405,32.790891],level:"district",districts:[]},{name:"黑水县",center:[102.990108,32.061895],level:"district",districts:[]},{name:"金川县",center:[102.063829,31.476277],level:"district",districts:[]},{name:"九寨沟县",center:[104.243841,33.252056],level:"district",districts:[]},{name:"理县",center:[103.164661,31.435174],level:"district",districts:[]},{name:"马尔康市",center:[102.20652,31.905693],level:"district",districts:[]},{name:"茂县",center:[103.853363,31.681547],level:"district",districts:[]},{name:"壤塘县",center:[100.978526,32.265796],level:"district",districts:[]},{name:"若尔盖县",center:[102.967826,33.578159],level:"district",districts:[]},{name:"松潘县",center:[103.604698,32.655325],level:"district",districts:[]},{name:"汶川县",center:[103.590179,31.476854],level:"district",districts:[]},{name:"小金县",center:[102.362984,30.995823],level:"district",districts:[]}]},{name:"巴中市",center:[106.747477,31.867903],level:"city",districts:[{name:"巴州区",center:[106.768878,31.851478],level:"district",districts:[]},{name:"恩阳区",center:[106.654386,31.787186],level:"district",districts:[]},{name:"南江县",center:[106.828697,32.346589],level:"district",districts:[]},{name:"平昌县",center:[107.104008,31.560874],level:"district",districts:[]},{name:"通江县",center:[107.245033,31.911705],level:"district",districts:[]}]},{name:"成都市",center:[104.066794,30.572893],level:"city",districts:[{name:"成华区",center:[104.101515,30.659966],level:"district",districts:[]},{name:"崇州市",center:[103.673001,30.630122],level:"district",districts:[]},{name:"大邑县",center:[103.511865,30.572268],level:"district",districts:[]},{name:"都江堰市",center:[103.647153,30.988767],level:"district",districts:[]},{name:"简阳市",center:[104.54722,30.411264],level:"district",districts:[]},{name:"金堂县",center:[104.411976,30.861979],level:"district",districts:[]},{name:"金牛区",center:[104.052236,30.691359],level:"district",districts:[]},{name:"锦江区",center:[104.117022,30.598158],level:"district",districts:[]},{name:"龙泉驿区",center:[104.274632,30.556506],level:"district",districts:[]},{name:"彭州市",center:[103.957983,30.990212],level:"district",districts:[]},{name:"郫都区",center:[103.901091,30.795854],level:"district",districts:[]},{name:"蒲江县",center:[103.506498,30.196788],level:"district",districts:[]},{name:"青白江区",center:[104.250945,30.878629],level:"district",districts:[]},{name:"青羊区",center:[104.061442,30.673914],level:"district",districts:[]},{name:"邛崃市",center:[103.464207,30.410324],level:"district",districts:[]},{name:"双流区",center:[103.923566,30.574449],level:"district",districts:[]},{name:"温江区",center:[103.856646,30.682203],level:"district",districts:[]},{name:"武侯区",center:[104.043235,30.641907],level:"district",districts:[]},{name:"新都区",center:[104.158705,30.823498],level:"district",districts:[]},{name:"新津县",center:[103.811286,30.410346],level:"district",districts:[]}]},{name:"德阳市",center:[104.397894,31.126855],level:"city",districts:[{name:"广汉市",center:[104.282429,30.977119],level:"district",districts:[]},{name:"旌阳区",center:[104.416966,31.142633],level:"district",districts:[]},{name:"罗江区",center:[104.510249,31.317045],level:"district",districts:[]},{name:"绵竹市",center:[104.22075,31.338077],level:"district",districts:[]},{name:"什邡市",center:[104.167501,31.12678],level:"district",districts:[]},{name:"中江县",center:[104.678751,31.03307],level:"district",districts:[]}]},{name:"达州市",center:[107.467758,31.209121],level:"city",districts:[{name:"达川区",center:[107.511749,31.196157],level:"district",districts:[]},{name:"大竹县",center:[107.204795,30.73641],level:"district",districts:[]},{name:"开江县",center:[107.868736,31.082986],level:"district",districts:[]},{name:"渠县",center:[106.97303,30.836618],level:"district",districts:[]},{name:"通川区",center:[107.504928,31.214715],level:"district",districts:[]},{name:"万源市",center:[108.034657,32.081631],level:"district",districts:[]},{name:"宣汉县",center:[107.72719,31.353835],level:"district",districts:[]}]},{name:"广元市",center:[105.843357,32.435435],level:"city",districts:[{name:"苍溪县",center:[105.934756,31.731709],level:"district",districts:[]},{name:"朝天区",center:[105.882642,32.651336],level:"district",districts:[]},{name:"剑阁县",center:[105.524766,32.287722],level:"district",districts:[]},{name:"利州区",center:[105.845307,32.433756],level:"district",districts:[]},{name:"青川县",center:[105.238842,32.575484],level:"district",districts:[]},{name:"旺苍县",center:[106.289983,32.229058],level:"district",districts:[]},{name:"昭化区",center:[105.962819,32.323256],level:"district",districts:[]}]},{name:"广安市",center:[106.633088,30.456224],level:"city",districts:[{name:"广安区",center:[106.641662,30.473913],level:"district",districts:[]},{name:"华蓥市",center:[106.7831,30.390188],level:"district",districts:[]},{name:"邻水县",center:[106.93038,30.334768],level:"district",districts:[]},{name:"前锋区",center:[106.886143,30.495804],level:"district",districts:[]},{name:"武胜县",center:[106.295764,30.348772],level:"district",districts:[]},{name:"岳池县",center:[106.440114,30.537863],level:"district",districts:[]}]},{name:"甘孜藏族自治州",center:[101.96231,30.04952],level:"city",districts:[{name:"巴塘县",center:[99.110712,30.004677],level:"district",districts:[]},{name:"白玉县",center:[98.824182,31.209913],level:"district",districts:[]},{name:"丹巴县",center:[101.890358,30.878577],level:"district",districts:[]},{name:"道孚县",center:[101.125237,30.979545],level:"district",districts:[]},{name:"稻城县",center:[100.298403,29.037007],level:"district",districts:[]},{name:"得荣县",center:[99.286335,28.713036],level:"district",districts:[]},{name:"德格县",center:[98.580914,31.806118],level:"district",districts:[]},{name:"甘孜县",center:[99.99267,31.622933],level:"district",districts:[]},{name:"九龙县",center:[101.507294,29.000347],level:"district",districts:[]},{name:"康定市",center:[101.957146,29.998435],level:"district",districts:[]},{name:"理塘县",center:[100.269817,29.996049],level:"district",districts:[]},{name:"泸定县",center:[102.234617,29.91416],level:"district",districts:[]},{name:"炉霍县",center:[100.676372,31.39179],level:"district",districts:[]},{name:"色达县",center:[100.332743,32.268129],level:"district",districts:[]},{name:"石渠县",center:[98.102914,32.97896],level:"district",districts:[]},{name:"乡城县",center:[99.798435,28.931172],level:"district",districts:[]},{name:"新龙县",center:[100.311368,30.939169],level:"district",districts:[]},{name:"雅江县",center:[101.014425,30.031533],level:"district",districts:[]}]},{name:"凉山彝族自治州",center:[102.267712,27.88157],level:"city",districts:[{name:"布拖县",center:[102.812061,27.706061],level:"district",districts:[]},{name:"德昌县",center:[102.17567,27.402839],level:"district",districts:[]},{name:"甘洛县",center:[102.771504,28.959157],level:"district",districts:[]},{name:"会东县",center:[102.57796,26.634669],level:"district",districts:[]},{name:"会理县",center:[102.244683,26.655026],level:"district",districts:[]},{name:"金阳县",center:[103.248772,27.69686],level:"district",districts:[]},{name:"雷波县",center:[103.571696,28.262682],level:"district",districts:[]},{name:"美姑县",center:[103.132179,28.32864],level:"district",districts:[]},{name:"冕宁县",center:[102.17701,28.549656],level:"district",districts:[]},{name:"木里藏族自治县",center:[101.280205,27.928835],level:"district",districts:[]},{name:"宁南县",center:[102.751745,27.061189],level:"district",districts:[]},{name:"普格县",center:[102.540901,27.376413],level:"district",districts:[]},{name:"西昌市",center:[102.264449,27.894504],level:"district",districts:[]},{name:"喜德县",center:[102.412518,28.306726],level:"district",districts:[]},{name:"盐源县",center:[101.509188,27.422645],level:"district",districts:[]},{name:"越西县",center:[102.50768,28.639801],level:"district",districts:[]},{name:"昭觉县",center:[102.840264,28.015333],level:"district",districts:[]}]},{name:"乐山市",center:[103.765678,29.552115],level:"city",districts:[{name:"峨眉山市",center:[103.484503,29.601198],level:"district",districts:[]},{name:"峨边彝族自治县",center:[103.262048,29.230425],level:"district",districts:[]},{name:"夹江县",center:[103.571656,29.73763],level:"district",districts:[]},{name:"犍为县",center:[103.949326,29.20817],level:"district",districts:[]},{name:"井研县",center:[104.069726,29.651287],level:"district",districts:[]},{name:"金口河区",center:[103.07862,29.244345],level:"district",districts:[]},{name:"马边彝族自治县",center:[103.546347,28.83552],level:"district",districts:[]},{name:"沐川县",center:[103.902334,28.956647],level:"district",districts:[]},{name:"沙湾区",center:[103.549991,29.413091],level:"district",districts:[]},{name:"市中区",center:[103.761329,29.555374],level:"district",districts:[]},{name:"五通桥区",center:[103.818014,29.406945],level:"district",districts:[]}]},{name:"绵阳市",center:[104.679004,31.467459],level:"city",districts:[{name:"安州区",center:[104.567187,31.534886],level:"district",districts:[]},{name:"北川羌族自治县",center:[104.46797,31.617203],level:"district",districts:[]},{name:"涪城区",center:[104.756944,31.455101],level:"district",districts:[]},{name:"江油市",center:[104.745915,31.778026],level:"district",districts:[]},{name:"平武县",center:[104.555583,32.409675],level:"district",districts:[]},{name:"三台县",center:[105.094586,31.095979],level:"district",districts:[]},{name:"盐亭县",center:[105.389453,31.208362],level:"district",districts:[]},{name:"游仙区",center:[104.766392,31.473779],level:"district",districts:[]},{name:"梓潼县",center:[105.170845,31.642718],level:"district",districts:[]}]},{name:"眉山市",center:[103.848403,30.076994],level:"city",districts:[{name:"丹棱县",center:[103.512783,30.01521],level:"district",districts:[]},{name:"东坡区",center:[103.831863,30.042308],level:"district",districts:[]},{name:"洪雅县",center:[103.372863,29.90489],level:"district",districts:[]},{name:"彭山区",center:[103.872949,30.193056],level:"district",districts:[]},{name:"青神县",center:[103.846688,29.831357],level:"district",districts:[]},{name:"仁寿县",center:[104.133995,29.995635],level:"district",districts:[]}]},{name:"泸州市",center:[105.442285,28.871805],level:"city",districts:[{name:"古蔺县",center:[105.812601,28.038801],level:"district",districts:[]},{name:"合江县",center:[105.830986,28.811164],level:"district",districts:[]},{name:"江阳区",center:[105.434982,28.87881],level:"district",districts:[]},{name:"龙马潭区",center:[105.437751,28.913257],level:"district",districts:[]},{name:"泸县",center:[105.381893,29.151534],level:"district",districts:[]},{name:"纳溪区",center:[105.371505,28.773134],level:"district",districts:[]},{name:"叙永县",center:[105.444765,28.155801],level:"district",districts:[]}]},{name:"南充市",center:[106.110698,30.837793],level:"city",districts:[{name:"高坪区",center:[106.118808,30.781623],level:"district",districts:[]},{name:"嘉陵区",center:[106.071876,30.758823],level:"district",districts:[]},{name:"阆中市",center:[106.005046,31.558356],level:"district",districts:[]},{name:"南部县",center:[106.036584,31.347467],level:"district",districts:[]},{name:"蓬安县",center:[106.412136,31.029091],level:"district",districts:[]},{name:"顺庆区",center:[106.09245,30.796803],level:"district",districts:[]},{name:"西充县",center:[105.90087,30.995683],level:"district",districts:[]},{name:"仪陇县",center:[106.303042,31.271561],level:"district",districts:[]},{name:"营山县",center:[106.565519,31.076579],level:"district",districts:[]}]},{name:"攀枝花市",center:[101.718637,26.582347],level:"city",districts:[{name:"东区",center:[101.704109,26.546491],level:"district",districts:[]},{name:"米易县",center:[102.112895,26.897694],level:"district",districts:[]},{name:"仁和区",center:[101.738528,26.497765],level:"district",districts:[]},{name:"西区",center:[101.630619,26.597781],level:"district",districts:[]},{name:"盐边县",center:[101.855071,26.683213],level:"district",districts:[]}]},{name:"内江市",center:[105.058432,29.580228],level:"city",districts:[{name:"东兴区",center:[105.075489,29.592756],level:"district",districts:[]},{name:"隆昌市",center:[105.287612,29.339476],level:"district",districts:[]},{name:"市中区",center:[105.067597,29.587053],level:"district",districts:[]},{name:"威远县",center:[104.668879,29.52744],level:"district",districts:[]},{name:"资中县",center:[104.851944,29.764059],level:"district",districts:[]}]},{name:"遂宁市",center:[105.592803,30.53292],level:"city",districts:[{name:"安居区",center:[105.456342,30.355379],level:"district",districts:[]},{name:"船山区",center:[105.568297,30.525475],level:"district",districts:[]},{name:"大英县",center:[105.236923,30.594409],level:"district",districts:[]},{name:"蓬溪县",center:[105.70757,30.757575],level:"district",districts:[]},{name:"射洪县",center:[105.388412,30.871131],level:"district",districts:[]}]},{name:"雅安市",center:[103.042375,30.010602],level:"city",districts:[{name:"宝兴县",center:[102.815403,30.37641],level:"district",districts:[]},{name:"汉源县",center:[102.645467,29.347192],level:"district",districts:[]},{name:"芦山县",center:[102.932385,30.142307],level:"district",districts:[]},{name:"名山区",center:[103.109184,30.069954],level:"district",districts:[]},{name:"石棉县",center:[102.359462,29.227874],level:"district",districts:[]},{name:"天全县",center:[102.758317,30.066712],level:"district",districts:[]},{name:"荥经县",center:[102.846737,29.792931],level:"district",districts:[]},{name:"雨城区",center:[103.033026,30.005461],level:"district",districts:[]}]},{name:"宜宾市",center:[104.642845,28.752134],level:"city",districts:[{name:"翠屏区",center:[104.620009,28.765689],level:"district",districts:[]},{name:"高县",center:[104.517748,28.436166],level:"district",districts:[]},{name:"珙县",center:[104.709202,28.43863],level:"district",districts:[]},{name:"江安县",center:[105.066879,28.723855],level:"district",districts:[]},{name:"南溪区",center:[104.969152,28.846382],level:"district",districts:[]},{name:"屏山县",center:[104.345974,28.828482],level:"district",districts:[]},{name:"兴文县",center:[105.236325,28.303614],level:"district",districts:[]},{name:"宜宾县",center:[104.533212,28.690045],level:"district",districts:[]},{name:"筠连县",center:[104.512025,28.167831],level:"district",districts:[]},{name:"长宁县",center:[104.921174,28.582169],level:"district",districts:[]}]},{name:"资阳市",center:[104.627636,30.128901],level:"city",districts:[{name:"安岳县",center:[105.35534,30.103107],level:"district",districts:[]},{name:"乐至县",center:[105.02019,30.276121],level:"district",districts:[]},{name:"雁江区",center:[104.677091,30.108216],level:"district",districts:[]}]},{name:"自贡市",center:[104.778442,29.33903],level:"city",districts:[{name:"大安区",center:[104.773994,29.363702],level:"district",districts:[]},{name:"富顺县",center:[104.975048,29.181429],level:"district",districts:[]},{name:"贡井区",center:[104.715288,29.345313],level:"district",districts:[]},{name:"荣县",center:[104.417493,29.445479],level:"district",districts:[]},{name:"沿滩区",center:[104.874079,29.272586],level:"district",districts:[]},{name:"自流井区",center:[104.777191,29.337429],level:"district",districts:[]}]}]},{name:"西藏自治区",center:[91.117525,29.647535],level:"province",districts:[{name:"阿里地区",center:[80.105804,32.501111],level:"city",districts:[{name:"措勤县",center:[85.151455,31.017312],level:"district",districts:[]},{name:"噶尔县",center:[80.096419,32.491488],level:"district",districts:[]},{name:"改则县",center:[84.06259,32.302713],level:"district",districts:[]},{name:"革吉县",center:[81.145433,32.387233],level:"district",districts:[]},{name:"普兰县",center:[81.176237,30.294402],level:"district",districts:[]},{name:"日土县",center:[79.732427,33.381359],level:"district",districts:[]},{name:"札达县",center:[79.802706,31.479216],level:"district",districts:[]}]},{name:"昌都市",center:[97.17202,31.140969],level:"city",districts:[{name:"八宿县",center:[96.917836,30.053209],level:"district",districts:[]},{name:"边坝县",center:[94.7078,30.933652],level:"district",districts:[]},{name:"察雅县",center:[97.568752,30.653943],level:"district",districts:[]},{name:"丁青县",center:[95.619868,31.409024],level:"district",districts:[]},{name:"贡觉县",center:[98.27097,30.860099],level:"district",districts:[]},{name:"江达县",center:[98.21843,31.499202],level:"district",districts:[]},{name:"卡若区",center:[97.196021,31.112087],level:"district",districts:[]},{name:"类乌齐县",center:[96.600246,31.211601],level:"district",districts:[]},{name:"洛隆县",center:[95.825197,30.741845],level:"district",districts:[]},{name:"芒康县",center:[98.593113,29.679907],level:"district",districts:[]},{name:"左贡县",center:[97.841022,29.671069],level:"district",districts:[]}]},{name:"拉萨市",center:[91.172148,29.652341],level:"city",districts:[{name:"达孜县",center:[91.349867,29.66941],level:"district",districts:[]},{name:"城关区",center:[91.140552,29.654838],level:"district",districts:[]},{name:"当雄县",center:[91.101162,30.473118],level:"district",districts:[]},{name:"堆龙德庆区",center:[91.003339,29.646063],level:"district",districts:[]},{name:"林周县",center:[91.265287,29.893545],level:"district",districts:[]},{name:"墨竹工卡县",center:[91.730732,29.834111],level:"district",districts:[]},{name:"尼木县",center:[90.164524,29.431831],level:"district",districts:[]},{name:"曲水县",center:[90.743853,29.353058],level:"district",districts:[]}]},{name:"林芝市",center:[94.36149,29.649128],level:"city",districts:[{name:"巴宜区",center:[94.361094,29.636576],level:"district",districts:[]},{name:"察隅县",center:[97.466919,28.66128],level:"district",districts:[]},{name:"波密县",center:[95.767913,29.859028],level:"district",districts:[]},{name:"工布江达县",center:[93.246077,29.88528],level:"district",districts:[]},{name:"朗县",center:[93.074702,29.046337],level:"district",districts:[]},{name:"米林县",center:[94.213679,29.213811],level:"district",districts:[]},{name:"墨脱县",center:[95.333197,29.325298],level:"district",districts:[]}]},{name:"那曲地区",center:[92.052064,31.476479],level:"city",districts:[{name:"安多县",center:[91.68233,32.265176],level:"district",districts:[]},{name:"巴青县",center:[94.053438,31.91847],level:"district",districts:[]},{name:"班戈县",center:[90.009957,31.392411],level:"district",districts:[]},{name:"比如县",center:[93.679639,31.480249],level:"district",districts:[]},{name:"嘉黎县",center:[93.232528,30.640814],level:"district",districts:[]},{name:"那曲县",center:[92.0535,31.469643],level:"district",districts:[]},{name:"尼玛县",center:[87.236772,31.784701],level:"district",districts:[]},{name:"聂荣县",center:[92.303377,32.10775],level:"district",districts:[]},{name:"申扎县",center:[88.709852,30.930505],level:"district",districts:[]},{name:"双湖县",center:[88.837641,33.188514],level:"district",districts:[]},{name:"索县",center:[93.785516,31.886671],level:"district",districts:[]}]},{name:"山南市",center:[91.773134,29.237137],level:"city",districts:[{name:"措美县",center:[91.433509,28.438202],level:"district",districts:[]},{name:"错那县",center:[91.960132,27.991707],level:"district",districts:[]},{name:"贡嘎县",center:[90.98414,29.289455],level:"district",districts:[]},{name:"加查县",center:[92.593993,29.14029],level:"district",districts:[]},{name:"浪卡子县",center:[90.397977,28.968031],level:"district",districts:[]},{name:"隆子县",center:[92.463308,28.408548],level:"district",districts:[]},{name:"洛扎县",center:[90.859992,28.385713],level:"district",districts:[]},{name:"乃东区",center:[91.761538,29.224904],level:"district",districts:[]},{name:"曲松县",center:[92.203738,29.062826],level:"district",districts:[]},{name:"琼结县",center:[91.683881,29.024625],level:"district",districts:[]},{name:"桑日县",center:[92.015818,29.259189],level:"district",districts:[]},{name:"扎囊县",center:[91.33725,29.245113],level:"district",districts:[]}]},{name:"日喀则市",center:[88.880583,29.266869],level:"city",districts:[{name:"昂仁县",center:[87.236051,29.294802],level:"district",districts:[]},{name:"白朗县",center:[89.261977,29.107688],level:"district",districts:[]},{name:"定结县",center:[87.765872,28.364159],level:"district",districts:[]},{name:"定日县",center:[87.12612,28.658743],level:"district",districts:[]},{name:"岗巴县",center:[88.520031,28.274601],level:"district",districts:[]},{name:"吉隆县",center:[85.297534,28.852393],level:"district",districts:[]},{name:"江孜县",center:[89.605627,28.911626],level:"district",districts:[]},{name:"康马县",center:[89.681663,28.555627],level:"district",districts:[]},{name:"拉孜县",center:[87.63704,29.081659],level:"district",districts:[]},{name:"南木林县",center:[89.099242,29.68233],level:"district",districts:[]},{name:"聂拉木县",center:[85.982237,28.155186],level:"district",districts:[]},{name:"萨嘎县",center:[85.232941,29.328818],level:"district",districts:[]},{name:"萨迦县",center:[88.021674,28.899664],level:"district",districts:[]},{name:"仁布县",center:[89.841983,29.230933],level:"district",districts:[]},{name:"桑珠孜区",center:[88.898483,29.24779],level:"district",districts:[]},{name:"谢通门县",center:[88.261664,29.432476],level:"district",districts:[]},{name:"亚东县",center:[88.907093,27.484806],level:"district",districts:[]},{name:"仲巴县",center:[84.03153,29.770279],level:"district",districts:[]}]}]},{name:"新疆维吾尔自治区",center:[87.627704,43.793026],level:"province",districts:[{name:"阿克苏地区",center:[80.260605,41.168779],level:"city",districts:[{name:"阿克苏市",center:[80.263387,41.167548],level:"district",districts:[]},{name:"阿瓦提县",center:[80.375053,40.643647],level:"district",districts:[]},{name:"拜城县",center:[81.85148,41.795912],level:"district",districts:[]},{name:"柯坪县",center:[79.054497,40.501936],level:"district",districts:[]},{name:"库车县",center:[82.987312,41.714696],level:"district",districts:[]},{name:"沙雅县",center:[82.781818,41.221666],level:"district",districts:[]},{name:"温宿县",center:[80.238959,41.276688],level:"district",districts:[]},{name:"乌什县",center:[79.224616,41.222319],level:"district",districts:[]},{name:"新和县",center:[82.618736,41.551206],level:"district",districts:[]}]},{name:"阿勒泰地区",center:[88.141253,47.844924],level:"city",districts:[{name:"阿勒泰市",center:[88.131842,47.827308],level:"district",districts:[]},{name:"布尔津县",center:[86.874923,47.702163],level:"district",districts:[]},{name:"福海县",center:[87.486703,47.111918],level:"district",districts:[]},{name:"富蕴县",center:[89.525504,46.994115],level:"district",districts:[]},{name:"哈巴河县",center:[86.418621,48.060846],level:"district",districts:[]},{name:"吉木乃县",center:[85.874096,47.443101],level:"district",districts:[]},{name:"青河县",center:[90.37555,46.679113],level:"district",districts:[]}]},{name:"昌吉回族自治州",center:[87.308224,44.011182],level:"city",districts:[{name:"昌吉市",center:[87.267532,44.014435],level:"district",districts:[]},{name:"阜康市",center:[87.952991,44.164402],level:"district",districts:[]},{name:"呼图壁县",center:[86.871584,44.179361],level:"district",districts:[]},{name:"吉木萨尔县",center:[89.180437,44.000497],level:"district",districts:[]},{name:"玛纳斯县",center:[86.20368,44.284722],level:"district",districts:[]},{name:"木垒哈萨克自治县",center:[90.286028,43.834689],level:"district",districts:[]},{name:"奇台县",center:[89.593967,44.022066],level:"district",districts:[]}]},{name:"巴音郭楞蒙古自治州",center:[86.145297,41.764115],level:"city",districts:[{name:"博湖县",center:[86.631997,41.980152],level:"district",districts:[]},{name:"和静县",center:[86.384065,42.323625],level:"district",districts:[]},{name:"和硕县",center:[86.876799,42.284331],level:"district",districts:[]},{name:"库尔勒市",center:[86.174633,41.725891],level:"district",districts:[]},{name:"轮台县",center:[84.252156,41.777702],level:"district",districts:[]},{name:"且末县",center:[85.529702,38.145485],level:"district",districts:[]},{name:"若羌县",center:[88.167152,39.023241],level:"district",districts:[]},{name:"尉犁县",center:[86.261321,41.343933],level:"district",districts:[]},{name:"焉耆回族自治县",center:[86.574067,42.059759],level:"district",districts:[]}]},{name:"博尔塔拉蒙古自治州",center:[82.066363,44.906039],level:"city",districts:[{name:"阿拉山口市",center:[82.559396,45.172227],level:"district",districts:[]},{name:"博乐市",center:[82.051004,44.853869],level:"district",districts:[]},{name:"精河县",center:[82.890656,44.599393],level:"district",districts:[]},{name:"温泉县",center:[81.024816,44.968856],level:"district",districts:[]}]},{name:"哈密市",center:[93.515224,42.819541],level:"city",districts:[{name:"巴里坤哈萨克自治县",center:[93.010383,43.599929],level:"district",districts:[]},{name:"伊吾县",center:[94.697074,43.254978],level:"district",districts:[]},{name:"伊州区",center:[93.514797,42.827254],level:"district",districts:[]}]},{name:"和田地区",center:[79.922211,37.114157],level:"city",districts:[{name:"策勒县",center:[80.806159,36.998335],level:"district",districts:[]},{name:"和田市",center:[79.913534,37.112148],level:"district",districts:[]},{name:"和田县",center:[79.81907,37.120031],level:"district",districts:[]},{name:"洛浦县",center:[80.188986,37.073667],level:"district",districts:[]},{name:"民丰县",center:[82.695861,37.06408],level:"district",districts:[]},{name:"墨玉县",center:[79.728683,37.277143],level:"district",districts:[]},{name:"皮山县",center:[78.283669,37.62145],level:"district",districts:[]},{name:"于田县",center:[81.677418,36.85708],level:"district",districts:[]}]},{name:"克孜勒苏柯尔克孜自治州",center:[76.167819,39.714526],level:"city",districts:[{name:"阿克陶县",center:[75.947396,39.147785],level:"district",districts:[]},{name:"阿合奇县",center:[78.446253,40.936936],level:"district",districts:[]},{name:"阿图什市",center:[76.1684,39.71616],level:"district",districts:[]},{name:"乌恰县",center:[75.259227,39.71931],level:"district",districts:[]}]},{name:"克拉玛依市",center:[84.889207,45.579888],level:"city",districts:[{name:"白碱滩区",center:[85.131696,45.687854],level:"district",districts:[]},{name:"独山子区",center:[84.886974,44.328095],level:"district",districts:[]},{name:"克拉玛依区",center:[84.867844,45.602525],level:"district",districts:[]},{name:"乌尔禾区",center:[85.693742,46.089148],level:"district",districts:[]}]},{name:"喀什地区",center:[75.989741,39.47046],level:"city",districts:[{name:"巴楚县",center:[78.549296,39.785155],level:"district",districts:[]},{name:"伽师县",center:[76.723719,39.488181],level:"district",districts:[]},{name:"喀什市",center:[75.99379,39.467685],level:"district",districts:[]},{name:"麦盖提县",center:[77.610125,38.898001],level:"district",districts:[]},{name:"莎车县",center:[77.245761,38.41422],level:"district",districts:[]},{name:"疏附县",center:[75.862813,39.375043],level:"district",districts:[]},{name:"疏勒县",center:[76.048139,39.401384],level:"district",districts:[]},{name:"塔什库尔干塔吉克自治县",center:[75.229889,37.772094],level:"district",districts:[]},{name:"叶城县",center:[77.413836,37.882989],level:"district",districts:[]},{name:"英吉沙县",center:[76.175729,38.930381],level:"district",districts:[]},{name:"岳普湖县",center:[76.8212,39.2198],level:"district",districts:[]},{name:"泽普县",center:[77.259675,38.18529],level:"district",districts:[]}]},{name:"塔城地区",center:[82.980316,46.745364],level:"city",districts:[{name:"额敏县",center:[83.628303,46.524673],level:"district",districts:[]},{name:"和布克赛尔蒙古自治县",center:[85.728328,46.793235],level:"district",districts:[]},{name:"沙湾县",center:[85.619416,44.326388],level:"district",districts:[]},{name:"塔城市",center:[82.986978,46.751428],level:"district",districts:[]},{name:"托里县",center:[83.60695,45.947638],level:"district",districts:[]},{name:"乌苏市",center:[84.713396,44.41881],level:"district",districts:[]},{name:"裕民县",center:[82.982667,46.201104],level:"district",districts:[]}]},{name:"乌鲁木齐市",center:[87.616848,43.825592],level:"city",districts:[{name:"达坂城区",center:[88.311099,43.363668],level:"district",districts:[]},{name:"米东区",center:[87.655935,43.974784],level:"district",districts:[]},{name:"沙依巴克区",center:[87.598195,43.800939],level:"district",districts:[]},{name:"水磨沟区",center:[87.642481,43.832459],level:"district",districts:[]},{name:"天山区",center:[87.631676,43.794399],level:"district",districts:[]},{name:"头屯河区",center:[87.428141,43.877664],level:"district",districts:[]},{name:"乌鲁木齐县",center:[87.409417,43.47136],level:"district",districts:[]},{name:"新市区",center:[87.569431,43.855378],level:"district",districts:[]}]},{name:"吐鲁番市",center:[89.189752,42.951303],level:"city",districts:[{name:"高昌区",center:[89.185877,42.942327],level:"district",districts:[]},{name:"鄯善县",center:[90.21333,42.868744],level:"district",districts:[]},{name:"托克逊县",center:[88.653827,42.792526],level:"district",districts:[]}]},{name:"伊犁哈萨克自治州",center:[81.324136,43.916823],level:"city",districts:[{name:"察布查尔锡伯自治县",center:[81.151337,43.840726],level:"district",districts:[]},{name:"巩留县",center:[82.231718,43.482628],level:"district",districts:[]},{name:"霍尔果斯市",center:[80.411271,44.213941],level:"district",districts:[]},{name:"霍城县",center:[80.87898,44.055984],level:"district",districts:[]},{name:"奎屯市",center:[84.903267,44.426529],level:"district",districts:[]},{name:"尼勒克县",center:[82.511809,43.800247],level:"district",districts:[]},{name:"特克斯县",center:[81.836206,43.217183],level:"district",districts:[]},{name:"新源县",center:[83.232848,43.433896],level:"district",districts:[]},{name:"伊宁市",center:[81.27795,43.908558],level:"district",districts:[]},{name:"伊宁县",center:[81.52745,43.977119],level:"district",districts:[]},{name:"昭苏县",center:[81.130974,43.157293],level:"district",districts:[]}]},{name:"阿拉尔市",center:[81.280527,40.547653],level:"city",districts:[{name:"托喀依乡",center:[81.120055,40.538677],level:"street",districts:[]}]},{name:"北屯市",center:[87.837075,47.332643],level:"city",districts:[{name:"北屯镇",center:[87.800381,47.36356],level:"street",districts:[]}]},{name:"可克达拉市",center:[81.044542,43.944798],level:"city",districts:[]},{name:"昆玉市",center:[79.291083,37.209642],level:"city",districts:[]},{name:"石河子市",center:[86.080602,44.306097],level:"city",districts:[{name:"向阳街道",center:[86.053247,44.307085],level:"street",districts:[]},{name:"老街街道",center:[86.025494,44.314066],level:"street",districts:[]},{name:"东城街道",center:[86.09183,44.310211],level:"street",districts:[]},{name:"新城镇",center:[86.027642,44.29313],level:"street",districts:[]},{name:"红山街道",center:[86.052025,44.296169],level:"street",districts:[]},{name:"北泉镇",center:[86.016731,44.333841],level:"street",districts:[]},{name:"石河子镇",center:[86.035422,44.286568],level:"street",districts:[]}]},{name:"双河市",center:[82.353656,44.840524],level:"city",districts:[]},{name:"铁门关市",center:[85.501217,41.82725],level:"city",districts:[]},{name:"图木舒克市",center:[79.073963,39.868965],level:"city",districts:[{name:"四十九团九连",center:[78.928924,39.707707],level:"street",districts:[]}]},{name:"五家渠市",center:[87.54324,44.166756],level:"city",districts:[{name:"梧桐镇",center:[87.651141,44.262647],level:"street",districts:[]}]}]},{name:"云南省",center:[102.710002,25.045806],level:"province",districts:[{name:"保山市",center:[99.161761,25.112046],level:"city",districts:[{name:"昌宁县",center:[99.605142,24.827839],level:"district",districts:[]},{name:"隆阳区",center:[99.165607,25.121154],level:"district",districts:[]},{name:"龙陵县",center:[98.689261,24.586794],level:"district",districts:[]},{name:"施甸县",center:[99.189221,24.723064],level:"district",districts:[]},{name:"腾冲市",center:[98.490966,25.020439],level:"district",districts:[]}]},{name:"楚雄彝族自治州",center:[101.527992,25.045513],level:"city",districts:[{name:"楚雄市",center:[101.545906,25.032889],level:"district",districts:[]},{name:"大姚县",center:[101.336617,25.729513],level:"district",districts:[]},{name:"禄丰县",center:[102.079027,25.150111],level:"district",districts:[]},{name:"牟定县",center:[101.546566,25.313121],level:"district",districts:[]},{name:"南华县",center:[101.273577,25.192293],level:"district",districts:[]},{name:"双柏县",center:[101.641937,24.688875],level:"district",districts:[]},{name:"武定县",center:[102.404337,25.530389],level:"district",districts:[]},{name:"姚安县",center:[101.241728,25.504173],level:"district",districts:[]},{name:"永仁县",center:[101.666132,26.049464],level:"district",districts:[]},{name:"元谋县",center:[101.87452,25.704338],level:"district",districts:[]}]},{name:"大理白族自治州",center:[100.267638,25.606486],level:"city",districts:[{name:"宾川县",center:[100.590473,25.829828],level:"district",districts:[]},{name:"大理市",center:[100.30127,25.678068],level:"district",districts:[]},{name:"洱源县",center:[99.951053,26.11116],level:"district",districts:[]},{name:"鹤庆县",center:[100.176498,26.560231],level:"district",districts:[]},{name:"剑川县",center:[99.905559,26.537033],level:"district",districts:[]},{name:"弥渡县",center:[100.49099,25.343804],level:"district",districts:[]},{name:"南涧彝族自治县",center:[100.509035,25.04351],level:"district",districts:[]},{name:"巍山彝族回族自治县",center:[100.307174,25.227212],level:"district",districts:[]},{name:"祥云县",center:[100.550945,25.48385],level:"district",districts:[]},{name:"漾濞彝族自治县",center:[99.958015,25.670148],level:"district",districts:[]},{name:"永平县",center:[99.541236,25.464681],level:"district",districts:[]},{name:"云龙县",center:[99.37112,25.885595],level:"district",districts:[]}]},{name:"德宏傣族景颇族自治州",center:[98.584895,24.433353],level:"city",districts:[{name:"梁河县",center:[98.296657,24.804232],level:"district",districts:[]},{name:"陇川县",center:[97.792104,24.182965],level:"district",districts:[]},{name:"芒市",center:[98.588086,24.43369],level:"district",districts:[]},{name:"瑞丽市",center:[97.85559,24.017958],level:"district",districts:[]},{name:"盈江县",center:[97.931936,24.705164],level:"district",districts:[]}]},{name:"迪庆藏族自治州",center:[99.702583,27.818807],level:"city",districts:[{name:"德钦县",center:[98.911559,28.486163],level:"district",districts:[]},{name:"维西傈僳族自治县",center:[99.287173,27.177161],level:"district",districts:[]},{name:"香格里拉市",center:[99.700904,27.829578],level:"district",districts:[]}]},{name:"红河哈尼族彝族自治州",center:[103.374893,23.363245],level:"city",districts:[{name:"个旧市",center:[103.160034,23.359121],level:"district",districts:[]},{name:"河口瑶族自治县",center:[103.93952,22.529645],level:"district",districts:[]},{name:"红河县",center:[102.4206,23.369161],level:"district",districts:[]},{name:"建水县",center:[102.826557,23.6347],level:"district",districts:[]},{name:"金平苗族瑶族傣族自治县",center:[103.226448,22.779543],level:"district",districts:[]},{name:"开远市",center:[103.266624,23.714523],level:"district",districts:[]},{name:"绿春县",center:[102.392463,22.993717],level:"district",districts:[]},{name:"泸西县",center:[103.766196,24.532025],level:"district",districts:[]},{name:"弥勒市",center:[103.414874,24.411912],level:"district",districts:[]},{name:"蒙自市",center:[103.364905,23.396201],level:"district",districts:[]},{name:"屏边苗族自治县",center:[103.687612,22.983559],level:"district",districts:[]},{name:"石屏县",center:[102.494983,23.705936],level:"district",districts:[]},{name:"元阳县",center:[102.835223,23.219932],level:"district",districts:[]}]},{name:"昆明市",center:[102.832891,24.880095],level:"city",districts:[{name:"安宁市",center:[102.478494,24.919493],level:"district",districts:[]},{name:"呈贡区",center:[102.821675,24.885587],level:"district",districts:[]},{name:"东川区",center:[103.187824,26.082873],level:"district",districts:[]},{name:"富民县",center:[102.4976,25.221935],level:"district",districts:[]},{name:"官渡区",center:[102.749026,24.950231],level:"district",districts:[]},{name:"晋宁区",center:[102.595412,24.66974],level:"district",districts:[]},{name:"禄劝彝族苗族自治县",center:[102.471518,25.551332],level:"district",districts:[]},{name:"盘龙区",center:[102.751941,25.116465],level:"district",districts:[]},{name:"石林彝族自治县",center:[103.290536,24.771761],level:"district",districts:[]},{name:"嵩明县",center:[103.036908,25.338643],level:"district",districts:[]},{name:"五华区",center:[102.707262,25.043635],level:"district",districts:[]},{name:"西山区",center:[102.664382,25.038604],level:"district",districts:[]},{name:"寻甸回族彝族自治县",center:[103.256615,25.558201],level:"district",districts:[]},{name:"宜良县",center:[103.141603,24.919839],level:"district",districts:[]}]},{name:"丽江市",center:[100.22775,26.855047],level:"city",districts:[{name:"古城区",center:[100.225784,26.876927],level:"district",districts:[]},{name:"华坪县",center:[101.266195,26.629211],level:"district",districts:[]},{name:"宁蒗彝族自治县",center:[100.852001,27.28207],level:"district",districts:[]},{name:"永胜县",center:[100.750826,26.684225],level:"district",districts:[]},{name:"玉龙纳西族自治县",center:[100.236954,26.821459],level:"district",districts:[]}]},{name:"临沧市",center:[100.08879,23.883955],level:"city",districts:[{name:"沧源佤族自治县",center:[99.246196,23.146712],level:"district",districts:[]},{name:"凤庆县",center:[99.928459,24.580424],level:"district",districts:[]},{name:"耿马傣族佤族自治县",center:[99.397126,23.538092],level:"district",districts:[]},{name:"临翔区",center:[100.082523,23.895137],level:"district",districts:[]},{name:"双江拉祜族佤族布朗族傣族自治县",center:[99.827697,23.473499],level:"district",districts:[]},{name:"永德县",center:[99.259339,24.018357],level:"district",districts:[]},{name:"云县",center:[100.129354,24.44422],level:"district",districts:[]},{name:"镇康县",center:[98.825284,23.762584],level:"district",districts:[]}]},{name:"怒江傈僳族自治州",center:[98.8566,25.817555],level:"city",districts:[{name:"福贡县",center:[98.869132,26.901831],level:"district",districts:[]},{name:"贡山独龙族怒族自治县",center:[98.665964,27.740999],level:"district",districts:[]},{name:"兰坪白族普米族自治县",center:[99.416677,26.453571],level:"district",districts:[]},{name:"泸水市",center:[98.857977,25.822879],level:"district",districts:[]}]},{name:"曲靖市",center:[103.796167,25.489999],level:"city",districts:[{name:"富源县",center:[104.255014,25.674238],level:"district",districts:[]},{name:"会泽县",center:[103.297386,26.417345],level:"district",districts:[]},{name:"陆良县",center:[103.666663,25.030051],level:"district",districts:[]},{name:"罗平县",center:[104.308675,24.884626],level:"district",districts:[]},{name:"马龙县",center:[103.578478,25.42805],level:"district",districts:[]},{name:"麒麟区",center:[103.80474,25.495326],level:"district",districts:[]},{name:"师宗县",center:[103.985321,24.822233],level:"district",districts:[]},{name:"宣威市",center:[104.10455,26.219735],level:"district",districts:[]},{name:"沾益区",center:[103.822324,25.600507],level:"district",districts:[]}]},{name:"普洱市",center:[100.966156,22.825155],level:"city",districts:[{name:"江城哈尼族彝族自治县",center:[101.86212,22.585867],level:"district",districts:[]},{name:"景谷傣族彝族自治县",center:[100.702871,23.497028],level:"district",districts:[]},{name:"景东彝族自治县",center:[100.833877,24.446731],level:"district",districts:[]},{name:"澜沧拉祜族自治县",center:[99.931975,22.555904],level:"district",districts:[]},{name:"孟连傣族拉祜族佤族自治县",center:[99.584157,22.329099],level:"district",districts:[]},{name:"墨江哈尼族自治县",center:[101.692461,23.431894],level:"district",districts:[]},{name:"宁洱哈尼族彝族自治县",center:[101.045837,23.048401],level:"district",districts:[]},{name:"思茅区",center:[100.977256,22.787115],level:"district",districts:[]},{name:"西盟佤族自治县",center:[99.590123,22.644508],level:"district",districts:[]},{name:"镇沅彝族哈尼族拉祜族自治县",center:[101.108595,24.004441],level:"district",districts:[]}]},{name:"文山壮族苗族自治州",center:[104.216248,23.400733],level:"city",districts:[{name:"富宁县",center:[105.630999,23.625283],level:"district",districts:[]},{name:"广南县",center:[105.055107,24.046386],level:"district",districts:[]},{name:"麻栗坡县",center:[104.702799,23.125714],level:"district",districts:[]},{name:"马关县",center:[104.394157,23.012915],level:"district",districts:[]},{name:"丘北县",center:[104.166587,24.051746],level:"district",districts:[]},{name:"文山市",center:[104.232665,23.386527],level:"district",districts:[]},{name:"西畴县",center:[104.672597,23.437782],level:"district",districts:[]},{name:"砚山县",center:[104.337211,23.605768],level:"district",districts:[]}]},{name:"西双版纳傣族自治州",center:[100.796984,22.009113],level:"city",districts:[{name:"景洪市",center:[100.799545,22.011928],level:"district",districts:[]},{name:"勐腊县",center:[101.564635,21.459233],level:"district",districts:[]},{name:"勐海县",center:[100.452547,21.957353],level:"district",districts:[]}]},{name:"玉溪市",center:[102.527197,24.347324],level:"city",districts:[{name:"澄江县",center:[102.904629,24.675689],level:"district",districts:[]},{name:"峨山彝族自治县",center:[102.405819,24.168957],level:"district",districts:[]},{name:"红塔区",center:[102.540122,24.341215],level:"district",districts:[]},{name:"华宁县",center:[102.928835,24.19276],level:"district",districts:[]},{name:"江川区",center:[102.75344,24.287485],level:"district",districts:[]},{name:"通海县",center:[102.725452,24.111048],level:"district",districts:[]},{name:"新平彝族傣族自治县",center:[101.990157,24.07005],level:"district",districts:[]},{name:"易门县",center:[102.162531,24.671651],level:"district",districts:[]},{name:"元江哈尼族彝族傣族自治县",center:[101.998103,23.596503],level:"district",districts:[]}]},{name:"昭通市",center:[103.717465,27.338257],level:"city",districts:[{name:"大关县",center:[103.891146,27.747978],level:"district",districts:[]},{name:"鲁甸县",center:[103.558042,27.186659],level:"district",districts:[]},{name:"巧家县",center:[102.930164,26.90846],level:"district",districts:[]},{name:"水富县",center:[104.41603,28.62988],level:"district",districts:[]},{name:"绥江县",center:[103.968978,28.592099],level:"district",districts:[]},{name:"威信县",center:[105.049027,27.8469],level:"district",districts:[]},{name:"盐津县",center:[104.234441,28.10871],level:"district",districts:[]},{name:"彝良县",center:[104.048289,27.625418],level:"district",districts:[]},{name:"永善县",center:[103.638067,28.229112],level:"district",districts:[]},{name:"昭阳区",center:[103.706539,27.320075],level:"district",districts:[]},{name:"镇雄县",center:[104.87376,27.441622],level:"district",districts:[]}]}]},{name:"浙江省",center:[120.152585,30.266597],level:"province",districts:[{name:"杭州市",center:[120.209789,30.24692],level:"city",districts:[{name:"滨江区",center:[120.211623,30.208847],level:"district",districts:[]},{name:"淳安县",center:[119.042037,29.608886],level:"district",districts:[]},{name:"富阳区",center:[119.960076,30.048692],level:"district",districts:[]},{name:"拱墅区",center:[120.141406,30.319037],level:"district",districts:[]},{name:"江干区",center:[120.205001,30.257012],level:"district",districts:[]},{name:"建德市",center:[119.281231,29.474759],level:"district",districts:[]},{name:"临安区",center:[119.724734,30.233873],level:"district",districts:[]},{name:"上城区",center:[120.169312,30.242404],level:"district",districts:[]},{name:"桐庐县",center:[119.691467,29.79299],level:"district",districts:[]},{name:"西湖区",center:[120.130194,30.259463],level:"district",districts:[]},{name:"萧山区",center:[120.264253,30.183806],level:"district",districts:[]},{name:"下城区",center:[120.180891,30.281677],level:"district",districts:[]},{name:"余杭区",center:[120.299401,30.419045],level:"district",districts:[]}]},{name:"嘉兴市",center:[120.75547,30.746191],level:"city",districts:[{name:"海盐县",center:[120.946263,30.526435],level:"district",districts:[]},{name:"海宁市",center:[120.680239,30.511539],level:"district",districts:[]},{name:"嘉善县",center:[120.926028,30.830864],level:"district",districts:[]},{name:"南湖区",center:[120.783024,30.747842],level:"district",districts:[]},{name:"平湖市",center:[121.015142,30.677233],level:"district",districts:[]},{name:"桐乡市",center:[120.565098,30.630173],level:"district",districts:[]},{name:"秀洲区",center:[120.710082,30.765188],level:"district",districts:[]}]},{name:"湖州市",center:[120.086809,30.89441],level:"city",districts:[{name:"安吉县",center:[119.680353,30.638674],level:"district",districts:[]},{name:"德清县",center:[119.9774,30.54251],level:"district",districts:[]},{name:"南浔区",center:[120.418513,30.849689],level:"district",districts:[]},{name:"吴兴区",center:[120.185838,30.857151],level:"district",districts:[]},{name:"长兴县",center:[119.910952,31.026665],level:"district",districts:[]}]},{name:"丽水市",center:[119.922796,28.46763],level:"city",districts:[{name:"景宁畲族自治县",center:[119.635739,27.9733],level:"district",districts:[]},{name:"缙云县",center:[120.091572,28.659283],level:"district",districts:[]},{name:"莲都区",center:[119.912626,28.445928],level:"district",districts:[]},{name:"龙泉市",center:[119.141473,28.074649],level:"district",districts:[]},{name:"青田县",center:[120.289478,28.139837],level:"district",districts:[]},{name:"庆元县",center:[119.06259,27.61922],level:"district",districts:[]},{name:"遂昌县",center:[119.276103,28.592148],level:"district",districts:[]},{name:"松阳县",center:[119.481511,28.448803],level:"district",districts:[]},{name:"云和县",center:[119.573397,28.11579],level:"district",districts:[]}]},{name:"金华市",center:[119.647229,29.079208],level:"city",districts:[{name:"东阳市",center:[120.241566,29.289648],level:"district",districts:[]},{name:"金东区",center:[119.69278,29.099723],level:"district",districts:[]},{name:"兰溪市",center:[119.460472,29.2084],level:"district",districts:[]},{name:"磐安县",center:[120.450005,29.054548],level:"district",districts:[]},{name:"浦江县",center:[119.892222,29.452476],level:"district",districts:[]},{name:"婺城区",center:[119.571728,29.0872],level:"district",districts:[]},{name:"武义县",center:[119.816562,28.89267],level:"district",districts:[]},{name:"义乌市",center:[120.075106,29.306775],level:"district",districts:[]},{name:"永康市",center:[120.047651,28.888555],level:"district",districts:[]}]},{name:"衢州市",center:[118.859457,28.970079],level:"city",districts:[{name:"常山县",center:[118.511235,28.901462],level:"district",districts:[]},{name:"江山市",center:[118.626991,28.737331],level:"district",districts:[]},{name:"开化县",center:[118.415495,29.137336],level:"district",districts:[]},{name:"柯城区",center:[118.871516,28.96862],level:"district",districts:[]},{name:"龙游县",center:[119.172189,29.028439],level:"district",districts:[]},{name:"衢江区",center:[118.95946,28.97978],level:"district",districts:[]}]},{name:"宁波市",center:[121.622485,29.859971],level:"city",districts:[{name:"北仑区",center:[121.844172,29.899778],level:"district",districts:[]},{name:"慈溪市",center:[121.266561,30.170261],level:"district",districts:[]},{name:"奉化区",center:[121.406997,29.655144],level:"district",districts:[]},{name:"海曙区",center:[121.550752,29.874903],level:"district",districts:[]},{name:"江北区",center:[121.555081,29.886781],level:"district",districts:[]},{name:"宁海县",center:[121.429477,29.287939],level:"district",districts:[]},{name:"象山县",center:[121.869339,29.476705],level:"district",districts:[]},{name:"鄞州区",center:[121.546603,29.816511],level:"district",districts:[]},{name:"余姚市",center:[121.154629,30.037106],level:"district",districts:[]},{name:"镇海区",center:[121.596496,29.965203],level:"district",districts:[]}]},{name:"绍兴市",center:[120.580364,30.030192],level:"city",districts:[{name:"柯桥区",center:[120.495085,30.081929],level:"district",districts:[]},{name:"嵊州市",center:[120.831025,29.56141],level:"district",districts:[]},{name:"上虞区",center:[120.868122,30.03312],level:"district",districts:[]},{name:"新昌县",center:[120.903866,29.499831],level:"district",districts:[]},{name:"越城区",center:[120.582633,29.988244],level:"district",districts:[]},{name:"诸暨市",center:[120.246863,29.708692],level:"district",districts:[]}]},{name:"台州市",center:[121.42076,28.65638],level:"city",districts:[{name:"黄岩区",center:[121.261972,28.650083],level:"district",districts:[]},{name:"椒江区",center:[121.442978,28.672981],level:"district",districts:[]},{name:"临海市",center:[121.144556,28.858881],level:"district",districts:[]},{name:"路桥区",center:[121.365123,28.582654],level:"district",districts:[]},{name:"三门县",center:[121.395711,29.104789],level:"district",districts:[]},{name:"天台县",center:[121.006595,29.144064],level:"district",districts:[]},{name:"温岭市",center:[121.385604,28.372506],level:"district",districts:[]},{name:"仙居县",center:[120.728801,28.846966],level:"district",districts:[]},{name:"玉环市",center:[121.231805,28.135929],level:"district",districts:[]}]},{name:"温州市",center:[120.699361,27.993828],level:"city",districts:[{name:"苍南县",center:[120.427619,27.519773],level:"district",districts:[]},{name:"洞头区",center:[121.157249,27.836154],level:"district",districts:[]},{name:"乐清市",center:[120.983906,28.113725],level:"district",districts:[]},{name:"龙湾区",center:[120.811213,27.932747],level:"district",districts:[]},{name:"鹿城区",center:[120.655271,28.015737],level:"district",districts:[]},{name:"瓯海区",center:[120.61491,27.966844],level:"district",districts:[]},{name:"平阳县",center:[120.565793,27.661918],level:"district",districts:[]},{name:"瑞安市",center:[120.655148,27.778657],level:"district",districts:[]},{name:"泰顺县",center:[119.717649,27.556884],level:"district",districts:[]},{name:"文成县",center:[120.091498,27.786996],level:"district",districts:[]},{name:"永嘉县",center:[120.692025,28.153607],level:"district",districts:[]}]},{name:"舟山市",center:[122.207106,29.985553],level:"city",districts:[{name:"定海区",center:[122.106773,30.019858],level:"district",districts:[]},{name:"岱山县",center:[122.226237,30.264139],level:"district",districts:[]},{name:"普陀区",center:[122.323867,29.97176],level:"district",districts:[]},{name:"嵊泗县",center:[122.451382,30.725686],level:"district",districts:[]}]}]}],Server="./assets/server.37361887.png",Back="./assets/back.557f5496.png",Side="./assets/side.4253c334.png",Top="./assets/top.0b017d8d.png";
/*!
 * camera-controls
 * https://github.com/yomotsu/camera-controls
 * (c) 2017 @yomotsu
 * Released under the MIT License.
 */
const MOUSE_BUTTON={LEFT:1,RIGHT:2,MIDDLE:4},ACTION=Object.freeze({NONE:0,ROTATE:1,TRUCK:2,OFFSET:4,DOLLY:8,ZOOM:16,TOUCH_ROTATE:32,TOUCH_TRUCK:64,TOUCH_OFFSET:128,TOUCH_DOLLY:256,TOUCH_ZOOM:512,TOUCH_DOLLY_TRUCK:1024,TOUCH_DOLLY_OFFSET:2048,TOUCH_DOLLY_ROTATE:4096,TOUCH_ZOOM_TRUCK:8192,TOUCH_ZOOM_OFFSET:16384,TOUCH_ZOOM_ROTATE:32768}),DOLLY_DIRECTION={NONE:0,IN:1,OUT:-1};function isPerspectiveCamera(t){return t.isPerspectiveCamera}function isOrthographicCamera(t){return t.isOrthographicCamera}const PI_2=2*Math.PI,PI_HALF=Math.PI/2,EPSILON=1e-5,DEG2RAD=Math.PI/180;function clamp(t,e,i){return Math.max(e,Math.min(i,t))}function approxZero(t,e=EPSILON){return Math.abs(t)<e}function approxEquals(t,e,i=EPSILON){return approxZero(t-e,i)}function roundToStep(t,e){return Math.round(t/e)*e}function infinityToMaxNumber(t){return isFinite(t)?t:t<0?-Number.MAX_VALUE:Number.MAX_VALUE}function maxNumberToInfinity(t){return Math.abs(t)<Number.MAX_VALUE?t:t*(1/0)}function smoothDamp(t,e,i,s,r=1/0,n){const a=2/(s=Math.max(1e-4,s)),c=a*n,l=1/(1+c+.48*c*c+.235*c*c*c);let o=t-e;const d=e,h=r*s;o=clamp(o,-h,h),e=t-o;const m=(i.value+a*o)*n;i.value=(i.value-a*m)*l;let p=e+(o+m)*l;return d-t>0==p>d&&(p=d,i.value=(p-d)/n),p}function smoothDampVec3(t,e,i,s,r=1/0,n,a){const c=2/(s=Math.max(1e-4,s)),l=c*n,o=1/(1+l+.48*l*l+.235*l*l*l);let d=e.x,h=e.y,m=e.z,p=t.x-d,v=t.y-h,f=t.z-m;const u=d,y=h,g=m,_=r*s,C=p*p+v*v+f*f;if(C>_*_){const t=Math.sqrt(C);p=p/t*_,v=v/t*_,f=f/t*_}d=t.x-p,h=t.y-v,m=t.z-f;const E=(i.x+c*p)*n,I=(i.y+c*v)*n,T=(i.z+c*f)*n;i.x=(i.x-c*E)*o,i.y=(i.y-c*I)*o,i.z=(i.z-c*T)*o,a.x=d+(p+E)*o,a.y=h+(v+I)*o,a.z=m+(f+T)*o;const x=u-t.x,S=y-t.y,P=g-t.z;return x*(a.x-u)+S*(a.y-y)+P*(a.z-g)>0&&(a.x=u,a.y=y,a.z=g,i.x=(a.x-u)/n,i.y=(a.y-y)/n,i.z=(a.z-g)/n),a}function extractClientCoordFromEvent(t,e){e.set(0,0),t.forEach((t=>{e.x+=t.clientX,e.y+=t.clientY})),e.x/=t.length,e.y/=t.length}function notSupportedInOrthographicCamera(t,e){return!!isOrthographicCamera(t)&&(console.warn(`${e} is not supported in OrthographicCamera`),!0)}class EventDispatcher{constructor(){this._listeners={}}addEventListener(t,e){const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)}hasEventListener(t,e){const i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)}removeEventListener(t,e){const i=this._listeners[t];if(void 0!==i){const t=i.indexOf(e);-1!==t&&i.splice(t,1)}}removeAllEventListeners(t){t?Array.isArray(this._listeners[t])&&(this._listeners[t].length=0):this._listeners={}}dispatchEvent(t){const e=this._listeners[t.type];if(void 0!==e){t.target=this;const i=e.slice(0);for(let e=0,s=i.length;e<s;e++)i[e].call(this,t)}}}const VERSION="2.7.0",TOUCH_DOLLY_FACTOR=1/8,isBrowser="undefined"!=typeof window,isMac=isBrowser&&/Mac/.test(navigator.platform),isPointerEventsNotSupported=!(isBrowser&&"PointerEvent"in window);let THREE,_ORIGIN,_AXIS_Y,_AXIS_Z,_v2,_v3A,_v3B,_v3C,_cameraDirection,_xColumn,_yColumn,_zColumn,_deltaTarget,_deltaOffset,_sphericalA,_sphericalB,_box3A,_box3B,_sphere,_quaternionA,_quaternionB,_rotationMatrix,_raycaster;class CameraControls extends EventDispatcher{static install(t){THREE=t.THREE,_ORIGIN=Object.freeze(new THREE.Vector3(0,0,0)),_AXIS_Y=Object.freeze(new THREE.Vector3(0,1,0)),_AXIS_Z=Object.freeze(new THREE.Vector3(0,0,1)),_v2=new THREE.Vector2,_v3A=new THREE.Vector3,_v3B=new THREE.Vector3,_v3C=new THREE.Vector3,_cameraDirection=new THREE.Vector3,_xColumn=new THREE.Vector3,_yColumn=new THREE.Vector3,_zColumn=new THREE.Vector3,_deltaTarget=new THREE.Vector3,_deltaOffset=new THREE.Vector3,_sphericalA=new THREE.Spherical,_sphericalB=new THREE.Spherical,_box3A=new THREE.Box3,_box3B=new THREE.Box3,_sphere=new THREE.Sphere,_quaternionA=new THREE.Quaternion,_quaternionB=new THREE.Quaternion,_rotationMatrix=new THREE.Matrix4,_raycaster=new THREE.Raycaster}static get ACTION(){return ACTION}constructor(t,e){super(),this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.minDistance=Number.EPSILON,this.maxDistance=1/0,this.infinityDolly=!1,this.minZoom=.01,this.maxZoom=1/0,this.smoothTime=.25,this.draggingSmoothTime=.125,this.maxSpeed=1/0,this.azimuthRotateSpeed=1,this.polarRotateSpeed=1,this.dollySpeed=1,this.dollyDragInverted=!1,this.truckSpeed=2,this.dollyToCursor=!1,this.dragToOffset=!1,this.verticalDragToForward=!1,this.boundaryFriction=0,this.restThreshold=.01,this.colliderMeshes=[],this.cancel=()=>{},this._enabled=!0,this._state=ACTION.NONE,this._viewport=null,this._changedDolly=0,this._changedZoom=0,this._hasRested=!0,this._boundaryEnclosesCamera=!1,this._needsUpdate=!0,this._updatedLastTime=!1,this._elementRect=new DOMRect,this._isDragging=!1,this._activePointers=[],this._lockedPointer=null,this._interactiveArea=new DOMRect(0,0,1,1),this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._isUserControllingOffset=!1,this._isUserControllingZoom=!1,this._lastDollyDirection=DOLLY_DIRECTION.NONE,this._thetaVelocity={value:0},this._phiVelocity={value:0},this._radiusVelocity={value:0},this._targetVelocity=new THREE.Vector3,this._focalOffsetVelocity=new THREE.Vector3,this._zoomVelocity={value:0},this._truckInternal=(t,e,i)=>{let s,r;if(isPerspectiveCamera(this._camera)){const i=_v3A.copy(this._camera.position).sub(this._target),n=this._camera.getEffectiveFOV()*DEG2RAD,a=i.length()*Math.tan(.5*n);s=this.truckSpeed*t*a/this._elementRect.height,r=this.truckSpeed*e*a/this._elementRect.height}else{if(!isOrthographicCamera(this._camera))return;{const i=this._camera;s=t*(i.right-i.left)/i.zoom/this._elementRect.width,r=e*(i.top-i.bottom)/i.zoom/this._elementRect.height}}this.verticalDragToForward?(i?this.setFocalOffset(this._focalOffsetEnd.x+s,this._focalOffsetEnd.y,this._focalOffsetEnd.z,!0):this.truck(s,0,!0),this.forward(-r,!0)):i?this.setFocalOffset(this._focalOffsetEnd.x+s,this._focalOffsetEnd.y+r,this._focalOffsetEnd.z,!0):this.truck(s,r,!0)},this._rotateInternal=(t,e)=>{const i=PI_2*this.azimuthRotateSpeed*t/this._elementRect.height,s=PI_2*this.polarRotateSpeed*e/this._elementRect.height;this.rotate(i,s,!0)},this._dollyInternal=(t,e,i)=>{const s=Math.pow(.95,-t*this.dollySpeed),r=this._sphericalEnd.radius,n=this._sphericalEnd.radius*s,a=THREE.MathUtils.clamp(n,this.minDistance,this.maxDistance),c=a-n;this.infinityDolly&&this.dollyToCursor?this._dollyToNoClamp(n,!0):this.infinityDolly&&!this.dollyToCursor?(this.dollyInFixed(c,!0),this._dollyToNoClamp(a,!0)):this._dollyToNoClamp(a,!0),this.dollyToCursor&&(this._changedDolly+=(this.infinityDolly?n:a)-r,this._dollyControlCoord.set(e,i)),this._lastDollyDirection=Math.sign(-t)},this._zoomInternal=(t,e,i)=>{const s=Math.pow(.95,t*this.dollySpeed),r=this._zoom,n=this._zoom*s;this.zoomTo(n,!0),this.dollyToCursor&&(this._changedZoom+=n-r,this._dollyControlCoord.set(e,i))},void 0===THREE&&console.error("camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information."),this._camera=t,this._yAxisUpSpace=(new THREE.Quaternion).setFromUnitVectors(this._camera.up,_AXIS_Y),this._yAxisUpSpaceInverse=this._yAxisUpSpace.clone().invert(),this._state=ACTION.NONE,this._target=new THREE.Vector3,this._targetEnd=this._target.clone(),this._focalOffset=new THREE.Vector3,this._focalOffsetEnd=this._focalOffset.clone(),this._spherical=(new THREE.Spherical).setFromVector3(_v3A.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace)),this._sphericalEnd=this._spherical.clone(),this._lastDistance=this._spherical.radius,this._zoom=this._camera.zoom,this._zoomEnd=this._zoom,this._lastZoom=this._zoom,this._nearPlaneCorners=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this._updateNearPlaneCorners(),this._boundary=new THREE.Box3(new THREE.Vector3(-1/0,-1/0,-1/0),new THREE.Vector3(1/0,1/0,1/0)),this._cameraUp0=this._camera.up.clone(),this._target0=this._target.clone(),this._position0=this._camera.position.clone(),this._zoom0=this._zoom,this._focalOffset0=this._focalOffset.clone(),this._dollyControlCoord=new THREE.Vector2,this.mouseButtons={left:ACTION.ROTATE,middle:ACTION.DOLLY,right:ACTION.TRUCK,wheel:isPerspectiveCamera(this._camera)?ACTION.DOLLY:isOrthographicCamera(this._camera)?ACTION.ZOOM:ACTION.NONE},this.touches={one:ACTION.TOUCH_ROTATE,two:isPerspectiveCamera(this._camera)?ACTION.TOUCH_DOLLY_TRUCK:isOrthographicCamera(this._camera)?ACTION.TOUCH_ZOOM_TRUCK:ACTION.NONE,three:ACTION.TOUCH_TRUCK};const i=new THREE.Vector2,s=new THREE.Vector2,r=new THREE.Vector2,n=t=>{if(!this._enabled||!this._domElement)return;if(0!==this._interactiveArea.left||0!==this._interactiveArea.top||1!==this._interactiveArea.width||1!==this._interactiveArea.height){const e=this._domElement.getBoundingClientRect(),i=t.clientX/e.width,s=t.clientY/e.height;if(i<this._interactiveArea.left||i>this._interactiveArea.right||s<this._interactiveArea.top||s>this._interactiveArea.bottom)return}const e="mouse"!==t.pointerType?null:(t.buttons&MOUSE_BUTTON.LEFT)===MOUSE_BUTTON.LEFT?MOUSE_BUTTON.LEFT:(t.buttons&MOUSE_BUTTON.MIDDLE)===MOUSE_BUTTON.MIDDLE?MOUSE_BUTTON.MIDDLE:(t.buttons&MOUSE_BUTTON.RIGHT)===MOUSE_BUTTON.RIGHT?MOUSE_BUTTON.RIGHT:null;if(null!==e){const t=this._findPointerByMouseButton(e);t&&this._disposePointer(t)}if((t.buttons&MOUSE_BUTTON.LEFT)===MOUSE_BUTTON.LEFT&&this._lockedPointer)return;const i={pointerId:t.pointerId,clientX:t.clientX,clientY:t.clientY,deltaX:0,deltaY:0,mouseButton:e};this._activePointers.push(i),this._domElement.ownerDocument.removeEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",o),this._domElement.ownerDocument.addEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",o),this._isDragging=!0,v(t)},a=t=>{if(!this._enabled||!this._domElement||this._lockedPointer)return;if(0!==this._interactiveArea.left||0!==this._interactiveArea.top||1!==this._interactiveArea.width||1!==this._interactiveArea.height){const e=this._domElement.getBoundingClientRect(),i=t.clientX/e.width,s=t.clientY/e.height;if(i<this._interactiveArea.left||i>this._interactiveArea.right||s<this._interactiveArea.top||s>this._interactiveArea.bottom)return}const e=(t.buttons&MOUSE_BUTTON.LEFT)===MOUSE_BUTTON.LEFT?MOUSE_BUTTON.LEFT:(t.buttons&MOUSE_BUTTON.MIDDLE)===MOUSE_BUTTON.MIDDLE?MOUSE_BUTTON.MIDDLE:(t.buttons&MOUSE_BUTTON.RIGHT)===MOUSE_BUTTON.RIGHT?MOUSE_BUTTON.RIGHT:null;if(null!==e){const t=this._findPointerByMouseButton(e);t&&this._disposePointer(t)}const i={pointerId:1,clientX:t.clientX,clientY:t.clientY,deltaX:0,deltaY:0,mouseButton:(t.buttons&MOUSE_BUTTON.LEFT)===MOUSE_BUTTON.LEFT?MOUSE_BUTTON.LEFT:(t.buttons&MOUSE_BUTTON.MIDDLE)===MOUSE_BUTTON.LEFT?MOUSE_BUTTON.MIDDLE:(t.buttons&MOUSE_BUTTON.RIGHT)===MOUSE_BUTTON.LEFT?MOUSE_BUTTON.RIGHT:null};this._activePointers.push(i),this._domElement.ownerDocument.removeEventListener("mousemove",l),this._domElement.ownerDocument.removeEventListener("mouseup",d),this._domElement.ownerDocument.addEventListener("mousemove",l),this._domElement.ownerDocument.addEventListener("mouseup",d),this._isDragging=!0,v(t)},c=t=>{t.cancelable&&t.preventDefault();const e=t.pointerId,i=this._lockedPointer||this._findPointerById(e);if(i){if(i.clientX=t.clientX,i.clientY=t.clientY,i.deltaX=t.movementX,i.deltaY=t.movementY,this._state=0,"touch"===t.pointerType)switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three}else(!this._isDragging&&this._lockedPointer||this._isDragging&&(t.buttons&MOUSE_BUTTON.LEFT)===MOUSE_BUTTON.LEFT)&&(this._state=this._state|this.mouseButtons.left),this._isDragging&&(t.buttons&MOUSE_BUTTON.MIDDLE)===MOUSE_BUTTON.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),this._isDragging&&(t.buttons&MOUSE_BUTTON.RIGHT)===MOUSE_BUTTON.RIGHT&&(this._state=this._state|this.mouseButtons.right);f()}},l=t=>{const e=this._lockedPointer||this._findPointerById(1);e&&(e.clientX=t.clientX,e.clientY=t.clientY,e.deltaX=t.movementX,e.deltaY=t.movementY,this._state=0,(this._lockedPointer||(t.buttons&MOUSE_BUTTON.LEFT)===MOUSE_BUTTON.LEFT)&&(this._state=this._state|this.mouseButtons.left),(t.buttons&MOUSE_BUTTON.MIDDLE)===MOUSE_BUTTON.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(t.buttons&MOUSE_BUTTON.RIGHT)===MOUSE_BUTTON.RIGHT&&(this._state=this._state|this.mouseButtons.right),f())},o=t=>{const e=this._findPointerById(t.pointerId);if(!e||e!==this._lockedPointer){if(e&&this._disposePointer(e),"touch"===t.pointerType)switch(this._activePointers.length){case 0:this._state=ACTION.NONE;break;case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three}else this._state=ACTION.NONE;u()}},d=()=>{const t=this._findPointerById(1);t&&t===this._lockedPointer||(t&&this._disposePointer(t),this._state=ACTION.NONE,u())};let h=-1;const m=t=>{if(!this._domElement)return;if(!this._enabled||this.mouseButtons.wheel===ACTION.NONE)return;if(0!==this._interactiveArea.left||0!==this._interactiveArea.top||1!==this._interactiveArea.width||1!==this._interactiveArea.height){const e=this._domElement.getBoundingClientRect(),i=t.clientX/e.width,s=t.clientY/e.height;if(i<this._interactiveArea.left||i>this._interactiveArea.right||s<this._interactiveArea.top||s>this._interactiveArea.bottom)return}if(t.preventDefault(),this.dollyToCursor||this.mouseButtons.wheel===ACTION.ROTATE||this.mouseButtons.wheel===ACTION.TRUCK){const t=performance.now();h-t<1e3&&this._getClientRect(this._elementRect),h=t}const e=isMac?-1:-3,i=1===t.deltaMode?t.deltaY/e:t.deltaY/(10*e),s=this.dollyToCursor?(t.clientX-this._elementRect.x)/this._elementRect.width*2-1:0,r=this.dollyToCursor?(t.clientY-this._elementRect.y)/this._elementRect.height*-2+1:0;switch(this.mouseButtons.wheel){case ACTION.ROTATE:this._rotateInternal(t.deltaX,t.deltaY),this._isUserControllingRotate=!0;break;case ACTION.TRUCK:this._truckInternal(t.deltaX,t.deltaY,!1),this._isUserControllingTruck=!0;break;case ACTION.OFFSET:this._truckInternal(t.deltaX,t.deltaY,!0),this._isUserControllingOffset=!0;break;case ACTION.DOLLY:this._dollyInternal(-i,s,r),this._isUserControllingDolly=!0;break;case ACTION.ZOOM:this._zoomInternal(-i,s,r),this._isUserControllingZoom=!0}this.dispatchEvent({type:"control"})},p=t=>{if(this._domElement&&this._enabled){if(this.mouseButtons.right===CameraControls.ACTION.NONE){const e=t instanceof PointerEvent?t.pointerId:(MouseEvent,0),i=this._findPointerById(e);return i&&this._disposePointer(i),this._domElement.ownerDocument.removeEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",o),this._domElement.ownerDocument.removeEventListener("mousemove",l),void this._domElement.ownerDocument.removeEventListener("mouseup",d)}t.preventDefault()}},v=t=>{if(!this._enabled)return;extractClientCoordFromEvent(this._activePointers,_v2),this._getClientRect(this._elementRect),i.copy(_v2),s.copy(_v2);if(this._activePointers.length>=2){const t=_v2.x-this._activePointers[1].clientX,e=_v2.y-this._activePointers[1].clientY,i=Math.sqrt(t*t+e*e);r.set(0,i);const n=.5*(this._activePointers[0].clientX+this._activePointers[1].clientX),a=.5*(this._activePointers[0].clientY+this._activePointers[1].clientY);s.set(n,a)}if(this._state=0,t)if("pointerType"in t&&"touch"===t.pointerType)switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three}else this._lockedPointer||(t.buttons&MOUSE_BUTTON.LEFT)!==MOUSE_BUTTON.LEFT||(this._state=this._state|this.mouseButtons.left),(t.buttons&MOUSE_BUTTON.MIDDLE)===MOUSE_BUTTON.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(t.buttons&MOUSE_BUTTON.RIGHT)===MOUSE_BUTTON.RIGHT&&(this._state=this._state|this.mouseButtons.right);else this._lockedPointer&&(this._state=this._state|this.mouseButtons.left);(this._state&ACTION.ROTATE)!==ACTION.ROTATE&&(this._state&ACTION.TOUCH_ROTATE)!==ACTION.TOUCH_ROTATE&&(this._state&ACTION.TOUCH_DOLLY_ROTATE)!==ACTION.TOUCH_DOLLY_ROTATE&&(this._state&ACTION.TOUCH_ZOOM_ROTATE)!==ACTION.TOUCH_ZOOM_ROTATE||(this._sphericalEnd.theta=this._spherical.theta,this._sphericalEnd.phi=this._spherical.phi,this._thetaVelocity.value=0,this._phiVelocity.value=0),(this._state&ACTION.TRUCK)!==ACTION.TRUCK&&(this._state&ACTION.TOUCH_TRUCK)!==ACTION.TOUCH_TRUCK&&(this._state&ACTION.TOUCH_DOLLY_TRUCK)!==ACTION.TOUCH_DOLLY_TRUCK&&(this._state&ACTION.TOUCH_ZOOM_TRUCK)!==ACTION.TOUCH_ZOOM_TRUCK||(this._targetEnd.copy(this._target),this._targetVelocity.set(0,0,0)),(this._state&ACTION.DOLLY)!==ACTION.DOLLY&&(this._state&ACTION.TOUCH_DOLLY)!==ACTION.TOUCH_DOLLY&&(this._state&ACTION.TOUCH_DOLLY_TRUCK)!==ACTION.TOUCH_DOLLY_TRUCK&&(this._state&ACTION.TOUCH_DOLLY_OFFSET)!==ACTION.TOUCH_DOLLY_OFFSET&&(this._state&ACTION.TOUCH_DOLLY_ROTATE)!==ACTION.TOUCH_DOLLY_ROTATE||(this._sphericalEnd.radius=this._spherical.radius,this._radiusVelocity.value=0),(this._state&ACTION.ZOOM)!==ACTION.ZOOM&&(this._state&ACTION.TOUCH_ZOOM)!==ACTION.TOUCH_ZOOM&&(this._state&ACTION.TOUCH_ZOOM_TRUCK)!==ACTION.TOUCH_ZOOM_TRUCK&&(this._state&ACTION.TOUCH_ZOOM_OFFSET)!==ACTION.TOUCH_ZOOM_OFFSET&&(this._state&ACTION.TOUCH_ZOOM_ROTATE)!==ACTION.TOUCH_ZOOM_ROTATE||(this._zoomEnd=this._zoom,this._zoomVelocity.value=0),(this._state&ACTION.OFFSET)!==ACTION.OFFSET&&(this._state&ACTION.TOUCH_OFFSET)!==ACTION.TOUCH_OFFSET&&(this._state&ACTION.TOUCH_DOLLY_OFFSET)!==ACTION.TOUCH_DOLLY_OFFSET&&(this._state&ACTION.TOUCH_ZOOM_OFFSET)!==ACTION.TOUCH_ZOOM_OFFSET||(this._focalOffsetEnd.copy(this._focalOffset),this._focalOffsetVelocity.set(0,0,0)),this.dispatchEvent({type:"controlstart"})},f=()=>{if(!this._enabled)return;extractClientCoordFromEvent(this._activePointers,_v2);const t=this._domElement&&document.pointerLockElement===this._domElement?this._lockedPointer||this._activePointers[0]:null,e=t?-t.deltaX:s.x-_v2.x,n=t?-t.deltaY:s.y-_v2.y;if(s.copy(_v2),(this._state&ACTION.ROTATE)!==ACTION.ROTATE&&(this._state&ACTION.TOUCH_ROTATE)!==ACTION.TOUCH_ROTATE&&(this._state&ACTION.TOUCH_DOLLY_ROTATE)!==ACTION.TOUCH_DOLLY_ROTATE&&(this._state&ACTION.TOUCH_ZOOM_ROTATE)!==ACTION.TOUCH_ZOOM_ROTATE||(this._rotateInternal(e,n),this._isUserControllingRotate=!0),(this._state&ACTION.DOLLY)===ACTION.DOLLY||(this._state&ACTION.ZOOM)===ACTION.ZOOM){const t=this.dollyToCursor?(i.x-this._elementRect.x)/this._elementRect.width*2-1:0,e=this.dollyToCursor?(i.y-this._elementRect.y)/this._elementRect.height*-2+1:0,s=this.dollyDragInverted?-1:1;(this._state&ACTION.DOLLY)===ACTION.DOLLY?(this._dollyInternal(s*n*TOUCH_DOLLY_FACTOR,t,e),this._isUserControllingDolly=!0):(this._zoomInternal(s*n*TOUCH_DOLLY_FACTOR,t,e),this._isUserControllingZoom=!0)}if((this._state&ACTION.TOUCH_DOLLY)===ACTION.TOUCH_DOLLY||(this._state&ACTION.TOUCH_ZOOM)===ACTION.TOUCH_ZOOM||(this._state&ACTION.TOUCH_DOLLY_TRUCK)===ACTION.TOUCH_DOLLY_TRUCK||(this._state&ACTION.TOUCH_ZOOM_TRUCK)===ACTION.TOUCH_ZOOM_TRUCK||(this._state&ACTION.TOUCH_DOLLY_OFFSET)===ACTION.TOUCH_DOLLY_OFFSET||(this._state&ACTION.TOUCH_ZOOM_OFFSET)===ACTION.TOUCH_ZOOM_OFFSET||(this._state&ACTION.TOUCH_DOLLY_ROTATE)===ACTION.TOUCH_DOLLY_ROTATE||(this._state&ACTION.TOUCH_ZOOM_ROTATE)===ACTION.TOUCH_ZOOM_ROTATE){const t=_v2.x-this._activePointers[1].clientX,e=_v2.y-this._activePointers[1].clientY,i=Math.sqrt(t*t+e*e),n=r.y-i;r.set(0,i);const a=this.dollyToCursor?(s.x-this._elementRect.x)/this._elementRect.width*2-1:0,c=this.dollyToCursor?(s.y-this._elementRect.y)/this._elementRect.height*-2+1:0;(this._state&ACTION.TOUCH_DOLLY)===ACTION.TOUCH_DOLLY||(this._state&ACTION.TOUCH_DOLLY_ROTATE)===ACTION.TOUCH_DOLLY_ROTATE||(this._state&ACTION.TOUCH_DOLLY_TRUCK)===ACTION.TOUCH_DOLLY_TRUCK||(this._state&ACTION.TOUCH_DOLLY_OFFSET)===ACTION.TOUCH_DOLLY_OFFSET?(this._dollyInternal(n*TOUCH_DOLLY_FACTOR,a,c),this._isUserControllingDolly=!0):(this._zoomInternal(n*TOUCH_DOLLY_FACTOR,a,c),this._isUserControllingZoom=!0)}(this._state&ACTION.TRUCK)!==ACTION.TRUCK&&(this._state&ACTION.TOUCH_TRUCK)!==ACTION.TOUCH_TRUCK&&(this._state&ACTION.TOUCH_DOLLY_TRUCK)!==ACTION.TOUCH_DOLLY_TRUCK&&(this._state&ACTION.TOUCH_ZOOM_TRUCK)!==ACTION.TOUCH_ZOOM_TRUCK||(this._truckInternal(e,n,!1),this._isUserControllingTruck=!0),(this._state&ACTION.OFFSET)!==ACTION.OFFSET&&(this._state&ACTION.TOUCH_OFFSET)!==ACTION.TOUCH_OFFSET&&(this._state&ACTION.TOUCH_DOLLY_OFFSET)!==ACTION.TOUCH_DOLLY_OFFSET&&(this._state&ACTION.TOUCH_ZOOM_OFFSET)!==ACTION.TOUCH_ZOOM_OFFSET||(this._truckInternal(e,n,!0),this._isUserControllingOffset=!0),this.dispatchEvent({type:"control"})},u=()=>{extractClientCoordFromEvent(this._activePointers,_v2),s.copy(_v2),(0===this._activePointers.length||1===this._activePointers.length&&this._activePointers[0]===this._lockedPointer)&&(this._isDragging=!1),0===this._activePointers.length&&this._domElement&&(this._domElement.ownerDocument.removeEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("mousemove",l),this._domElement.ownerDocument.removeEventListener("pointerup",o),this._domElement.ownerDocument.removeEventListener("mouseup",d),this.dispatchEvent({type:"controlend"}))};this.lockPointer=()=>{this._enabled&&this._domElement&&(this.cancel(),this._lockedPointer={pointerId:-1,clientX:0,clientY:0,deltaX:0,deltaY:0,mouseButton:null},this._activePointers.push(this._lockedPointer),this._domElement.ownerDocument.removeEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",o),this._domElement.requestPointerLock(),this._domElement.ownerDocument.addEventListener("pointerlockchange",y),this._domElement.ownerDocument.addEventListener("pointerlockerror",g),this._domElement.ownerDocument.addEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",o),v())},this.unlockPointer=()=>{null!==this._lockedPointer&&(this._disposePointer(this._lockedPointer),this._lockedPointer=null),document.exitPointerLock(),this.cancel(),this._domElement&&(this._domElement.ownerDocument.removeEventListener("pointerlockchange",y),this._domElement.ownerDocument.removeEventListener("pointerlockerror",g))};const y=()=>{this._domElement&&this._domElement.ownerDocument.pointerLockElement===this._domElement||this.unlockPointer()},g=()=>{this.unlockPointer()};this._addAllEventListeners=t=>{this._domElement=t,this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none",this._domElement.addEventListener("pointerdown",n),isPointerEventsNotSupported&&this._domElement.addEventListener("mousedown",a),this._domElement.addEventListener("pointercancel",o),this._domElement.addEventListener("wheel",m,{passive:!1}),this._domElement.addEventListener("contextmenu",p)},this._removeAllEventListeners=()=>{this._domElement&&(this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect="",this._domElement.removeEventListener("pointerdown",n),this._domElement.removeEventListener("mousedown",a),this._domElement.removeEventListener("pointercancel",o),this._domElement.removeEventListener("wheel",m,{passive:!1}),this._domElement.removeEventListener("contextmenu",p),this._domElement.ownerDocument.removeEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("mousemove",l),this._domElement.ownerDocument.removeEventListener("pointerup",o),this._domElement.ownerDocument.removeEventListener("mouseup",d),this._domElement.ownerDocument.removeEventListener("pointerlockchange",y),this._domElement.ownerDocument.removeEventListener("pointerlockerror",g))},this.cancel=()=>{this._state!==ACTION.NONE&&(this._state=ACTION.NONE,this._activePointers.length=0,u())},e&&this.connect(e),this.update(0)}get camera(){return this._camera}set camera(t){this._camera=t,this.updateCameraUp(),this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0}get enabled(){return this._enabled}set enabled(t){this._enabled=t,this._domElement&&(t?(this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none"):(this.cancel(),this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect=""))}get active(){return!this._hasRested}get currentAction(){return this._state}get distance(){return this._spherical.radius}set distance(t){this._spherical.radius===t&&this._sphericalEnd.radius===t||(this._spherical.radius=t,this._sphericalEnd.radius=t,this._needsUpdate=!0)}get azimuthAngle(){return this._spherical.theta}set azimuthAngle(t){this._spherical.theta===t&&this._sphericalEnd.theta===t||(this._spherical.theta=t,this._sphericalEnd.theta=t,this._needsUpdate=!0)}get polarAngle(){return this._spherical.phi}set polarAngle(t){this._spherical.phi===t&&this._sphericalEnd.phi===t||(this._spherical.phi=t,this._sphericalEnd.phi=t,this._needsUpdate=!0)}get boundaryEnclosesCamera(){return this._boundaryEnclosesCamera}set boundaryEnclosesCamera(t){this._boundaryEnclosesCamera=t,this._needsUpdate=!0}set interactiveArea(t){this._interactiveArea.width=clamp(t.width,0,1),this._interactiveArea.height=clamp(t.height,0,1),this._interactiveArea.x=clamp(t.x,0,1-this._interactiveArea.width),this._interactiveArea.y=clamp(t.x,0,1-this._interactiveArea.height)}addEventListener(t,e){super.addEventListener(t,e)}removeEventListener(t,e){super.removeEventListener(t,e)}rotate(t,e,i=!1){return this.rotateTo(this._sphericalEnd.theta+t,this._sphericalEnd.phi+e,i)}rotateAzimuthTo(t,e=!1){return this.rotateTo(t,this._sphericalEnd.phi,e)}rotatePolarTo(t,e=!1){return this.rotateTo(this._sphericalEnd.theta,t,e)}rotateTo(t,e,i=!1){this._isUserControllingRotate=!1;const s=clamp(t,this.minAzimuthAngle,this.maxAzimuthAngle),r=clamp(e,this.minPolarAngle,this.maxPolarAngle);this._sphericalEnd.theta=s,this._sphericalEnd.phi=r,this._sphericalEnd.makeSafe(),this._needsUpdate=!0,i||(this._spherical.theta=this._sphericalEnd.theta,this._spherical.phi=this._sphericalEnd.phi);const n=!i||approxEquals(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&approxEquals(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold);return this._createOnRestPromise(n)}dolly(t,e=!1){return this.dollyTo(this._sphericalEnd.radius-t,e)}dollyTo(t,e=!1){return this._isUserControllingDolly=!1,this._lastDollyDirection=DOLLY_DIRECTION.NONE,this._changedDolly=0,this._dollyToNoClamp(clamp(t,this.minDistance,this.maxDistance),e)}_dollyToNoClamp(t,e=!1){const i=this._sphericalEnd.radius;if(this.colliderMeshes.length>=1){const e=this._collisionTest(),s=approxEquals(e,this._spherical.radius);if(!(i>t)&&s)return Promise.resolve();this._sphericalEnd.radius=Math.min(t,e)}else this._sphericalEnd.radius=t;this._needsUpdate=!0,e||(this._spherical.radius=this._sphericalEnd.radius);const s=!e||approxEquals(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(s)}dollyInFixed(t,e=!1){this._targetEnd.add(this._getCameraDirection(_cameraDirection).multiplyScalar(t)),e||this._target.copy(this._targetEnd);const i=!e||approxEquals(this._target.x,this._targetEnd.x,this.restThreshold)&&approxEquals(this._target.y,this._targetEnd.y,this.restThreshold)&&approxEquals(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(i)}zoom(t,e=!1){return this.zoomTo(this._zoomEnd+t,e)}zoomTo(t,e=!1){this._isUserControllingZoom=!1,this._zoomEnd=clamp(t,this.minZoom,this.maxZoom),this._needsUpdate=!0,e||(this._zoom=this._zoomEnd);const i=!e||approxEquals(this._zoom,this._zoomEnd,this.restThreshold);return this._changedZoom=0,this._createOnRestPromise(i)}pan(t,e,i=!1){return console.warn("`pan` has been renamed to `truck`"),this.truck(t,e,i)}truck(t,e,i=!1){this._camera.updateMatrix(),_xColumn.setFromMatrixColumn(this._camera.matrix,0),_yColumn.setFromMatrixColumn(this._camera.matrix,1),_xColumn.multiplyScalar(t),_yColumn.multiplyScalar(-e);const s=_v3A.copy(_xColumn).add(_yColumn),r=_v3B.copy(this._targetEnd).add(s);return this.moveTo(r.x,r.y,r.z,i)}forward(t,e=!1){_v3A.setFromMatrixColumn(this._camera.matrix,0),_v3A.crossVectors(this._camera.up,_v3A),_v3A.multiplyScalar(t);const i=_v3B.copy(this._targetEnd).add(_v3A);return this.moveTo(i.x,i.y,i.z,e)}elevate(t,e=!1){return _v3A.copy(this._camera.up).multiplyScalar(t),this.moveTo(this._targetEnd.x+_v3A.x,this._targetEnd.y+_v3A.y,this._targetEnd.z+_v3A.z,e)}moveTo(t,e,i,s=!1){this._isUserControllingTruck=!1;const r=_v3A.set(t,e,i).sub(this._targetEnd);this._encloseToBoundary(this._targetEnd,r,this.boundaryFriction),this._needsUpdate=!0,s||this._target.copy(this._targetEnd);const n=!s||approxEquals(this._target.x,this._targetEnd.x,this.restThreshold)&&approxEquals(this._target.y,this._targetEnd.y,this.restThreshold)&&approxEquals(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(n)}lookInDirectionOf(t,e,i,s=!1){const r=_v3A.set(t,e,i).sub(this._targetEnd).normalize().multiplyScalar(-this._sphericalEnd.radius);return this.setPosition(r.x,r.y,r.z,s)}fitToBox(t,e,{cover:i=!1,paddingLeft:s=0,paddingRight:r=0,paddingBottom:n=0,paddingTop:a=0}={}){const c=[],l=t.isBox3?_box3A.copy(t):_box3A.setFromObject(t);l.isEmpty()&&(console.warn("camera-controls: fitTo() cannot be used with an empty box. Aborting"),Promise.resolve());const o=roundToStep(this._sphericalEnd.theta,PI_HALF),d=roundToStep(this._sphericalEnd.phi,PI_HALF);c.push(this.rotateTo(o,d,e));const h=_v3A.setFromSpherical(this._sphericalEnd).normalize(),m=_quaternionA.setFromUnitVectors(h,_AXIS_Z),p=approxEquals(Math.abs(h.y),1);p&&m.multiply(_quaternionB.setFromAxisAngle(_AXIS_Y,o)),m.multiply(this._yAxisUpSpaceInverse);const v=_box3B.makeEmpty();_v3B.copy(l.min).applyQuaternion(m),v.expandByPoint(_v3B),_v3B.copy(l.min).setX(l.max.x).applyQuaternion(m),v.expandByPoint(_v3B),_v3B.copy(l.min).setY(l.max.y).applyQuaternion(m),v.expandByPoint(_v3B),_v3B.copy(l.max).setZ(l.min.z).applyQuaternion(m),v.expandByPoint(_v3B),_v3B.copy(l.min).setZ(l.max.z).applyQuaternion(m),v.expandByPoint(_v3B),_v3B.copy(l.max).setY(l.min.y).applyQuaternion(m),v.expandByPoint(_v3B),_v3B.copy(l.max).setX(l.min.x).applyQuaternion(m),v.expandByPoint(_v3B),_v3B.copy(l.max).applyQuaternion(m),v.expandByPoint(_v3B),v.min.x-=s,v.min.y-=n,v.max.x+=r,v.max.y+=a,m.setFromUnitVectors(_AXIS_Z,h),p&&m.premultiply(_quaternionB.invert()),m.premultiply(this._yAxisUpSpace);const f=v.getSize(_v3A),u=v.getCenter(_v3B).applyQuaternion(m);if(isPerspectiveCamera(this._camera)){const t=this.getDistanceToFitBox(f.x,f.y,f.z,i);c.push(this.moveTo(u.x,u.y,u.z,e)),c.push(this.dollyTo(t,e)),c.push(this.setFocalOffset(0,0,0,e))}else if(isOrthographicCamera(this._camera)){const t=this._camera,s=t.right-t.left,r=t.top-t.bottom,n=i?Math.max(s/f.x,r/f.y):Math.min(s/f.x,r/f.y);c.push(this.moveTo(u.x,u.y,u.z,e)),c.push(this.zoomTo(n,e)),c.push(this.setFocalOffset(0,0,0,e))}return Promise.all(c)}fitToSphere(t,e){const i=[],s=t instanceof THREE.Sphere?_sphere.copy(t):CameraControls.createBoundingSphere(t,_sphere);if(i.push(this.moveTo(s.center.x,s.center.y,s.center.z,e)),isPerspectiveCamera(this._camera)){const t=this.getDistanceToFitSphere(s.radius);i.push(this.dollyTo(t,e))}else if(isOrthographicCamera(this._camera)){const t=this._camera.right-this._camera.left,r=this._camera.top-this._camera.bottom,n=2*s.radius,a=Math.min(t/n,r/n);i.push(this.zoomTo(a,e))}return i.push(this.setFocalOffset(0,0,0,e)),Promise.all(i)}setLookAt(t,e,i,s,r,n,a=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=DOLLY_DIRECTION.NONE,this._changedDolly=0;const c=_v3B.set(s,r,n),l=_v3A.set(t,e,i);this._targetEnd.copy(c),this._sphericalEnd.setFromVector3(l.sub(c).applyQuaternion(this._yAxisUpSpace)),this.normalizeRotations(),this._needsUpdate=!0,a||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const o=!a||approxEquals(this._target.x,this._targetEnd.x,this.restThreshold)&&approxEquals(this._target.y,this._targetEnd.y,this.restThreshold)&&approxEquals(this._target.z,this._targetEnd.z,this.restThreshold)&&approxEquals(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&approxEquals(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&approxEquals(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(o)}lerpLookAt(t,e,i,s,r,n,a,c,l,o,d,h,m,p=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=DOLLY_DIRECTION.NONE,this._changedDolly=0;const v=_v3A.set(s,r,n),f=_v3B.set(t,e,i);_sphericalA.setFromVector3(f.sub(v).applyQuaternion(this._yAxisUpSpace));const u=_v3C.set(o,d,h),y=_v3B.set(a,c,l);_sphericalB.setFromVector3(y.sub(u).applyQuaternion(this._yAxisUpSpace)),this._targetEnd.copy(v.lerp(u,m));const g=_sphericalB.theta-_sphericalA.theta,_=_sphericalB.phi-_sphericalA.phi,C=_sphericalB.radius-_sphericalA.radius;this._sphericalEnd.set(_sphericalA.radius+C*m,_sphericalA.phi+_*m,_sphericalA.theta+g*m),this.normalizeRotations(),this._needsUpdate=!0,p||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const E=!p||approxEquals(this._target.x,this._targetEnd.x,this.restThreshold)&&approxEquals(this._target.y,this._targetEnd.y,this.restThreshold)&&approxEquals(this._target.z,this._targetEnd.z,this.restThreshold)&&approxEquals(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&approxEquals(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&approxEquals(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(E)}setPosition(t,e,i,s=!1){return this.setLookAt(t,e,i,this._targetEnd.x,this._targetEnd.y,this._targetEnd.z,s)}setTarget(t,e,i,s=!1){const r=this.getPosition(_v3A),n=this.setLookAt(r.x,r.y,r.z,t,e,i,s);return this._sphericalEnd.phi=clamp(this._sphericalEnd.phi,this.minPolarAngle,this.maxPolarAngle),n}setFocalOffset(t,e,i,s=!1){this._isUserControllingOffset=!1,this._focalOffsetEnd.set(t,e,i),this._needsUpdate=!0,s||this._focalOffset.copy(this._focalOffsetEnd);const r=!s||approxEquals(this._focalOffset.x,this._focalOffsetEnd.x,this.restThreshold)&&approxEquals(this._focalOffset.y,this._focalOffsetEnd.y,this.restThreshold)&&approxEquals(this._focalOffset.z,this._focalOffsetEnd.z,this.restThreshold);return this._createOnRestPromise(r)}setOrbitPoint(t,e,i){this._camera.updateMatrixWorld(),_xColumn.setFromMatrixColumn(this._camera.matrixWorldInverse,0),_yColumn.setFromMatrixColumn(this._camera.matrixWorldInverse,1),_zColumn.setFromMatrixColumn(this._camera.matrixWorldInverse,2);const s=_v3A.set(t,e,i),r=s.distanceTo(this._camera.position),n=s.sub(this._camera.position);_xColumn.multiplyScalar(n.x),_yColumn.multiplyScalar(n.y),_zColumn.multiplyScalar(n.z),_v3A.copy(_xColumn).add(_yColumn).add(_zColumn),_v3A.z=_v3A.z+r,this.dollyTo(r,!1),this.setFocalOffset(-_v3A.x,_v3A.y,-_v3A.z,!1),this.moveTo(t,e,i,!1)}setBoundary(t){if(!t)return this._boundary.min.set(-1/0,-1/0,-1/0),this._boundary.max.set(1/0,1/0,1/0),void(this._needsUpdate=!0);this._boundary.copy(t),this._boundary.clampPoint(this._targetEnd,this._targetEnd),this._needsUpdate=!0}setViewport(t,e,i,s){null!==t?(this._viewport=this._viewport||new THREE.Vector4,"number"==typeof t?this._viewport.set(t,e,i,s):this._viewport.copy(t)):this._viewport=null}getDistanceToFitBox(t,e,i,s=!1){if(notSupportedInOrthographicCamera(this._camera,"getDistanceToFitBox"))return this._spherical.radius;const r=t/e,n=this._camera.getEffectiveFOV()*DEG2RAD,a=this._camera.aspect;return.5*((s?r>a:r<a)?e:t/a)/Math.tan(.5*n)+.5*i}getDistanceToFitSphere(t){if(notSupportedInOrthographicCamera(this._camera,"getDistanceToFitSphere"))return this._spherical.radius;const e=this._camera.getEffectiveFOV()*DEG2RAD,i=2*Math.atan(Math.tan(.5*e)*this._camera.aspect),s=1<this._camera.aspect?e:i;return t/Math.sin(.5*s)}getTarget(t,e=!0){return(t&&t.isVector3?t:new THREE.Vector3).copy(e?this._targetEnd:this._target)}getPosition(t,e=!0){return(t&&t.isVector3?t:new THREE.Vector3).setFromSpherical(e?this._sphericalEnd:this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(e?this._targetEnd:this._target)}getSpherical(t,e=!0){return(t&&t instanceof THREE.Spherical?t:new THREE.Spherical).copy(e?this._sphericalEnd:this._spherical)}getFocalOffset(t,e=!0){return(t&&t.isVector3?t:new THREE.Vector3).copy(e?this._focalOffsetEnd:this._focalOffset)}normalizeRotations(){this._sphericalEnd.theta=this._sphericalEnd.theta%PI_2,this._sphericalEnd.theta<0&&(this._sphericalEnd.theta+=PI_2),this._spherical.theta+=PI_2*Math.round((this._sphericalEnd.theta-this._spherical.theta)/PI_2)}reset(t=!1){if(!approxEquals(this._camera.up.x,this._cameraUp0.x)||!approxEquals(this._camera.up.y,this._cameraUp0.y)||!approxEquals(this._camera.up.z,this._cameraUp0.z)){this._camera.up.copy(this._cameraUp0);const t=this.getPosition(_v3A);this.updateCameraUp(),this.setPosition(t.x,t.y,t.z)}const e=[this.setLookAt(this._position0.x,this._position0.y,this._position0.z,this._target0.x,this._target0.y,this._target0.z,t),this.setFocalOffset(this._focalOffset0.x,this._focalOffset0.y,this._focalOffset0.z,t),this.zoomTo(this._zoom0,t)];return Promise.all(e)}saveState(){this._cameraUp0.copy(this._camera.up),this.getTarget(this._target0),this.getPosition(this._position0),this._zoom0=this._zoom,this._focalOffset0.copy(this._focalOffset)}updateCameraUp(){this._yAxisUpSpace.setFromUnitVectors(this._camera.up,_AXIS_Y),this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert()}applyCameraUp(){const t=_v3A.subVectors(this._target,this._camera.position).normalize(),e=_v3B.crossVectors(t,this._camera.up);this._camera.up.crossVectors(e,t),this._camera.updateMatrixWorld();const i=this.getPosition(_v3A);this.updateCameraUp(),this.setPosition(i.x,i.y,i.z)}update(t){const e=this._sphericalEnd.theta-this._spherical.theta,i=this._sphericalEnd.phi-this._spherical.phi,s=this._sphericalEnd.radius-this._spherical.radius,r=_deltaTarget.subVectors(this._targetEnd,this._target),n=_deltaOffset.subVectors(this._focalOffsetEnd,this._focalOffset),a=this._zoomEnd-this._zoom;if(approxZero(e))this._thetaVelocity.value=0,this._spherical.theta=this._sphericalEnd.theta;else{const e=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.theta=smoothDamp(this._spherical.theta,this._sphericalEnd.theta,this._thetaVelocity,e,1/0,t),this._needsUpdate=!0}if(approxZero(i))this._phiVelocity.value=0,this._spherical.phi=this._sphericalEnd.phi;else{const e=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.phi=smoothDamp(this._spherical.phi,this._sphericalEnd.phi,this._phiVelocity,e,1/0,t),this._needsUpdate=!0}if(approxZero(s))this._radiusVelocity.value=0,this._spherical.radius=this._sphericalEnd.radius;else{const e=this._isUserControllingDolly?this.draggingSmoothTime:this.smoothTime;this._spherical.radius=smoothDamp(this._spherical.radius,this._sphericalEnd.radius,this._radiusVelocity,e,this.maxSpeed,t),this._needsUpdate=!0}if(approxZero(r.x)&&approxZero(r.y)&&approxZero(r.z))this._targetVelocity.set(0,0,0),this._target.copy(this._targetEnd);else{const e=this._isUserControllingTruck?this.draggingSmoothTime:this.smoothTime;smoothDampVec3(this._target,this._targetEnd,this._targetVelocity,e,this.maxSpeed,t,this._target),this._needsUpdate=!0}if(approxZero(n.x)&&approxZero(n.y)&&approxZero(n.z))this._focalOffsetVelocity.set(0,0,0),this._focalOffset.copy(this._focalOffsetEnd);else{const e=this._isUserControllingOffset?this.draggingSmoothTime:this.smoothTime;smoothDampVec3(this._focalOffset,this._focalOffsetEnd,this._focalOffsetVelocity,e,this.maxSpeed,t,this._focalOffset),this._needsUpdate=!0}if(approxZero(a))this._zoomVelocity.value=0,this._zoom=this._zoomEnd;else{const e=this._isUserControllingZoom?this.draggingSmoothTime:this.smoothTime;this._zoom=smoothDamp(this._zoom,this._zoomEnd,this._zoomVelocity,e,1/0,t)}if(this.dollyToCursor)if(isPerspectiveCamera(this._camera)&&0!==this._changedDolly){const t=this._spherical.radius-this._lastDistance,e=this._camera,i=this._getCameraDirection(_cameraDirection),s=_v3A.copy(i).cross(e.up).normalize();0===s.lengthSq()&&(s.x=1);const r=_v3B.crossVectors(s,i),n=this._sphericalEnd.radius*Math.tan(e.getEffectiveFOV()*DEG2RAD*.5),a=(this._sphericalEnd.radius-t-this._sphericalEnd.radius)/this._sphericalEnd.radius,c=_v3C.copy(this._targetEnd).add(s.multiplyScalar(this._dollyControlCoord.x*n*e.aspect)).add(r.multiplyScalar(this._dollyControlCoord.y*n)),l=_v3A.copy(this._targetEnd).lerp(c,a),o=this._lastDollyDirection===DOLLY_DIRECTION.IN&&this._spherical.radius<=this.minDistance,d=this._lastDollyDirection===DOLLY_DIRECTION.OUT&&this.maxDistance<=this._spherical.radius;if(this.infinityDolly&&(o||d)){this._sphericalEnd.radius-=t,this._spherical.radius-=t;const e=_v3B.copy(i).multiplyScalar(-t);l.add(e)}this._boundary.clampPoint(l,l);const h=_v3B.subVectors(l,this._targetEnd);this._targetEnd.copy(l),this._target.add(h),this._changedDolly-=t,approxZero(this._changedDolly)&&(this._changedDolly=0)}else if(isOrthographicCamera(this._camera)&&0!==this._changedZoom){const t=this._zoom-this._lastZoom,e=this._camera,i=_v3A.set(this._dollyControlCoord.x,this._dollyControlCoord.y,(e.near+e.far)/(e.near-e.far)).unproject(e),s=_v3B.set(0,0,-1).applyQuaternion(e.quaternion),r=_v3C.copy(i).add(s.multiplyScalar(-i.dot(e.up))),n=-(this._zoom-t-this._zoom)/this._zoom,a=this._getCameraDirection(_cameraDirection),c=this._targetEnd.dot(a),l=_v3A.copy(this._targetEnd).lerp(r,n),o=l.dot(a),d=a.multiplyScalar(o-c);l.sub(d),this._boundary.clampPoint(l,l);const h=_v3B.subVectors(l,this._targetEnd);this._targetEnd.copy(l),this._target.add(h),this._changedZoom-=t,approxZero(this._changedZoom)&&(this._changedZoom=0)}this._camera.zoom!==this._zoom&&(this._camera.zoom=this._zoom,this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0);const c=this._collisionTest();this._spherical.radius=Math.min(this._spherical.radius,c),this._spherical.makeSafe(),this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target),this._camera.lookAt(this._target);(!approxZero(this._focalOffset.x)||!approxZero(this._focalOffset.y)||!approxZero(this._focalOffset.z))&&(this._camera.updateMatrixWorld(),_xColumn.setFromMatrixColumn(this._camera.matrix,0),_yColumn.setFromMatrixColumn(this._camera.matrix,1),_zColumn.setFromMatrixColumn(this._camera.matrix,2),_xColumn.multiplyScalar(this._focalOffset.x),_yColumn.multiplyScalar(-this._focalOffset.y),_zColumn.multiplyScalar(this._focalOffset.z),_v3A.copy(_xColumn).add(_yColumn).add(_zColumn),this._camera.position.add(_v3A)),this._boundaryEnclosesCamera&&this._encloseToBoundary(this._camera.position.copy(this._target),_v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse),1);const l=this._needsUpdate;return l&&!this._updatedLastTime?(this._hasRested=!1,this.dispatchEvent({type:"wake"}),this.dispatchEvent({type:"update"})):l?(this.dispatchEvent({type:"update"}),approxZero(e,this.restThreshold)&&approxZero(i,this.restThreshold)&&approxZero(s,this.restThreshold)&&approxZero(r.x,this.restThreshold)&&approxZero(r.y,this.restThreshold)&&approxZero(r.z,this.restThreshold)&&approxZero(n.x,this.restThreshold)&&approxZero(n.y,this.restThreshold)&&approxZero(n.z,this.restThreshold)&&approxZero(a,this.restThreshold)&&!this._hasRested&&(this._hasRested=!0,this.dispatchEvent({type:"rest"}))):!l&&this._updatedLastTime&&this.dispatchEvent({type:"sleep"}),this._lastDistance=this._spherical.radius,this._lastZoom=this._zoom,this._updatedLastTime=l,this._needsUpdate=!1,l}toJSON(){return JSON.stringify({enabled:this._enabled,minDistance:this.minDistance,maxDistance:infinityToMaxNumber(this.maxDistance),minZoom:this.minZoom,maxZoom:infinityToMaxNumber(this.maxZoom),minPolarAngle:this.minPolarAngle,maxPolarAngle:infinityToMaxNumber(this.maxPolarAngle),minAzimuthAngle:infinityToMaxNumber(this.minAzimuthAngle),maxAzimuthAngle:infinityToMaxNumber(this.maxAzimuthAngle),smoothTime:this.smoothTime,draggingSmoothTime:this.draggingSmoothTime,dollySpeed:this.dollySpeed,truckSpeed:this.truckSpeed,dollyToCursor:this.dollyToCursor,verticalDragToForward:this.verticalDragToForward,target:this._targetEnd.toArray(),position:_v3A.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),zoom:this._zoomEnd,focalOffset:this._focalOffsetEnd.toArray(),target0:this._target0.toArray(),position0:this._position0.toArray(),zoom0:this._zoom0,focalOffset0:this._focalOffset0.toArray()})}fromJSON(t,e=!1){const i=JSON.parse(t);this.enabled=i.enabled,this.minDistance=i.minDistance,this.maxDistance=maxNumberToInfinity(i.maxDistance),this.minZoom=i.minZoom,this.maxZoom=maxNumberToInfinity(i.maxZoom),this.minPolarAngle=i.minPolarAngle,this.maxPolarAngle=maxNumberToInfinity(i.maxPolarAngle),this.minAzimuthAngle=maxNumberToInfinity(i.minAzimuthAngle),this.maxAzimuthAngle=maxNumberToInfinity(i.maxAzimuthAngle),this.smoothTime=i.smoothTime,this.draggingSmoothTime=i.draggingSmoothTime,this.dollySpeed=i.dollySpeed,this.truckSpeed=i.truckSpeed,this.dollyToCursor=i.dollyToCursor,this.verticalDragToForward=i.verticalDragToForward,this._target0.fromArray(i.target0),this._position0.fromArray(i.position0),this._zoom0=i.zoom0,this._focalOffset0.fromArray(i.focalOffset0),this.moveTo(i.target[0],i.target[1],i.target[2],e),_sphericalA.setFromVector3(_v3A.fromArray(i.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace)),this.rotateTo(_sphericalA.theta,_sphericalA.phi,e),this.dollyTo(_sphericalA.radius,e),this.zoomTo(i.zoom,e),this.setFocalOffset(i.focalOffset[0],i.focalOffset[1],i.focalOffset[2],e),this._needsUpdate=!0}connect(t){this._domElement?console.warn("camera-controls is already connected."):(t.setAttribute("data-camera-controls-version",VERSION),this._addAllEventListeners(t))}disconnect(){this.cancel(),this._removeAllEventListeners(),this._domElement&&(this._domElement.removeAttribute("data-camera-controls-version"),this._domElement=void 0)}dispose(){this.removeAllEventListeners(),this.disconnect()}_getTargetDirection(t){return t.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse)}_getCameraDirection(t){return this._getTargetDirection(t).negate()}_findPointerById(t){return this._activePointers.find((e=>e.pointerId===t))}_findPointerByMouseButton(t){return this._activePointers.find((e=>e.mouseButton===t))}_disposePointer(t){this._activePointers.splice(this._activePointers.indexOf(t),1)}_encloseToBoundary(t,e,i){const s=e.lengthSq();if(0===s)return t;const r=_v3B.copy(e).add(t),n=this._boundary.clampPoint(r,_v3C).sub(r),a=n.lengthSq();if(0===a)return t.add(e);if(a===s)return t;if(0===i)return t.add(e).add(n);{const s=1+i*a/e.dot(n);return t.add(_v3B.copy(e).multiplyScalar(s)).add(n.multiplyScalar(1-i))}}_updateNearPlaneCorners(){if(isPerspectiveCamera(this._camera)){const t=this._camera,e=t.near,i=t.getEffectiveFOV()*DEG2RAD,s=Math.tan(.5*i)*e,r=s*t.aspect;this._nearPlaneCorners[0].set(-r,-s,0),this._nearPlaneCorners[1].set(r,-s,0),this._nearPlaneCorners[2].set(r,s,0),this._nearPlaneCorners[3].set(-r,s,0)}else if(isOrthographicCamera(this._camera)){const t=this._camera,e=1/t.zoom,i=t.left*e,s=t.right*e,r=t.top*e,n=t.bottom*e;this._nearPlaneCorners[0].set(i,r,0),this._nearPlaneCorners[1].set(s,r,0),this._nearPlaneCorners[2].set(s,n,0),this._nearPlaneCorners[3].set(i,n,0)}}_collisionTest(){let t=1/0;if(!(this.colliderMeshes.length>=1))return t;if(notSupportedInOrthographicCamera(this._camera,"_collisionTest"))return t;const e=this._getTargetDirection(_cameraDirection);_rotationMatrix.lookAt(_ORIGIN,e,this._camera.up);for(let i=0;i<4;i++){const s=_v3B.copy(this._nearPlaneCorners[i]);s.applyMatrix4(_rotationMatrix);const r=_v3C.addVectors(this._target,s);_raycaster.set(r,e),_raycaster.far=this._spherical.radius+1;const n=_raycaster.intersectObjects(this.colliderMeshes);0!==n.length&&n[0].distance<t&&(t=n[0].distance)}return t}_getClientRect(t){if(!this._domElement)return;const e=this._domElement.getBoundingClientRect();return t.x=e.left,t.y=e.top,this._viewport?(t.x+=this._viewport.x,t.y+=e.height-this._viewport.w-this._viewport.y,t.width=this._viewport.z,t.height=this._viewport.w):(t.width=e.width,t.height=e.height),t}_createOnRestPromise(t){return t?Promise.resolve():(this._hasRested=!1,this.dispatchEvent({type:"transitionstart"}),new Promise((t=>{const e=()=>{this.removeEventListener("rest",e),t()};this.addEventListener("rest",e)})))}_addAllEventListeners(t){}_removeAllEventListeners(){}get dampingFactor(){return console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead."),0}set dampingFactor(t){console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead.")}get draggingDampingFactor(){return console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead."),0}set draggingDampingFactor(t){console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.")}static createBoundingSphere(t,e=new THREE.Sphere){const i=e,s=i.center;_box3A.makeEmpty(),t.traverseVisible((t=>{t.isMesh&&_box3A.expandByObject(t)})),_box3A.getCenter(s);let r=0;return t.traverseVisible((t=>{if(!t.isMesh)return;const e=t,i=e.geometry.clone();i.applyMatrix4(e.matrixWorld);const n=i.attributes.position;for(let a=0,c=n.count;a<c;a++)_v3A.fromBufferAttribute(n,a),r=Math.max(r,s.distanceToSquared(_v3A))})),i.radius=Math.sqrt(r),i}}var Error$1="data:application/json;base64,eyJ2IjoiNS45LjIiLCJmciI6MzAsImlwIjowLCJvcCI6NzIsInciOjMwMCwiaCI6MzAwLCJubSI6IuWQiOaIkCAxIiwiZGRkIjowLCJhc3NldHMiOltdLCJsYXllcnMiOlt7ImRkZCI6MCwiaW5kIjoxLCJ0eSI6NCwibm0iOiLlvaLnirblm77lsYIgMyIsInNyIjoxLCJrcyI6eyJvIjp7ImEiOjEsImsiOlt7ImkiOnsieCI6WzAuNF0sInkiOlsxXX0sIm8iOnsieCI6WzAuMTY3XSwieSI6WzBdfSwidCI6NDMsInMiOlsyMF19LHsidCI6NzIsInMiOlswXX1dLCJpeCI6MTF9LCJyIjp7ImEiOjAsImsiOjAsIml4IjoxMH0sInAiOnsiYSI6MCwiayI6WzE1MCwxNTAsMF0sIml4IjoyLCJsIjoyfSwiYSI6eyJhIjowLCJrIjpbLTAuNDQxLC0wLjk0MSwwXSwiaXgiOjEsImwiOjJ9LCJzIjp7ImEiOjEsImsiOlt7ImkiOnsieCI6WzAuNCwwLjQsMC40XSwieSI6WzEsMSwxXX0sIm8iOnsieCI6WzAuNiwwLjYsMC42XSwieSI6WzAsMCwwXX0sInQiOjEyLCJzIjpbMCwwLDEwMF19LHsidCI6NzIsInMiOlsxNTAsMTUwLDEwMF19XSwiaXgiOjYsImwiOjJ9fSwiYW8iOjAsInNoYXBlcyI6W3sidHkiOiJnciIsIml0IjpbeyJkIjoxLCJ0eSI6ImVsIiwicyI6eyJhIjowLCJrIjpbMTk0LjExNywxOTQuMTE3XSwiaXgiOjJ9LCJwIjp7ImEiOjAsImsiOlswLDBdLCJpeCI6M30sIm5tIjoi5qSt5ZyG6Lev5b6EIDEiLCJtbiI6IkFEQkUgVmVjdG9yIFNoYXBlIC0gRWxsaXBzZSIsImhkIjpmYWxzZX0seyJ0eSI6InRyIiwicCI6eyJhIjowLCJrIjpbLTAuNDQxLC0wLjk0MV0sIml4IjoyfSwiYSI6eyJhIjowLCJrIjpbMCwwXSwiaXgiOjF9LCJzIjp7ImEiOjAsImsiOlsxMDAsMTAwXSwiaXgiOjN9LCJyIjp7ImEiOjAsImsiOjAsIml4Ijo2fSwibyI6eyJhIjowLCJrIjoxMDAsIml4Ijo3fSwic2siOnsiYSI6MCwiayI6MCwiaXgiOjR9LCJzYSI6eyJhIjowLCJrIjowLCJpeCI6NX0sIm5tIjoi5Y+Y5o2iIn1dLCJubSI6IuakreWchiAxIiwibnAiOjIsImNpeCI6MiwiYm0iOjAsIml4IjoxLCJtbiI6IkFEQkUgVmVjdG9yIEdyb3VwIiwiaGQiOmZhbHNlfSx7InR5IjoiZmwiLCJjIjp7ImEiOjAsImsiOlsxLDAsMCwxXSwiaXgiOjR9LCJvIjp7ImEiOjAsImsiOjEwMCwiaXgiOjV9LCJyIjoxLCJibSI6MCwibm0iOiLloavlhYUgMSIsIm1uIjoiQURCRSBWZWN0b3IgR3JhcGhpYyAtIEZpbGwiLCJoZCI6ZmFsc2V9XSwiaXAiOjEyLCJvcCI6NzIsInN0IjoxMiwiYm0iOjB9LHsiZGRkIjowLCJpbmQiOjIsInR5Ijo0LCJubSI6IuW9oueKtuWbvuWxgiAyIiwic3IiOjEsImtzIjp7Im8iOnsiYSI6MSwiayI6W3siaSI6eyJ4IjpbMC40XSwieSI6WzFdfSwibyI6eyJ4IjpbMC42XSwieSI6WzBdfSwidCI6MzEsInMiOlsyMF19LHsidCI6NjAsInMiOlswXX1dLCJpeCI6MTF9LCJyIjp7ImEiOjAsImsiOjAsIml4IjoxMH0sInAiOnsiYSI6MCwiayI6WzE1MCwxNTAsMF0sIml4IjoyLCJsIjoyfSwiYSI6eyJhIjowLCJrIjpbLTAuNDQxLC0wLjk0MSwwXSwiaXgiOjEsImwiOjJ9LCJzIjp7ImEiOjEsImsiOlt7ImkiOnsieCI6WzAuNCwwLjQsMC40XSwieSI6WzEsMSwxXX0sIm8iOnsieCI6WzAuNiwwLjYsMC42XSwieSI6WzAsMCwwXX0sInQiOjAsInMiOlswLDAsMTAwXX0seyJ0Ijo2MCwicyI6WzE1MCwxNTAsMTAwXX1dLCJpeCI6NiwibCI6Mn19LCJhbyI6MCwic2hhcGVzIjpbeyJ0eSI6ImdyIiwiaXQiOlt7ImQiOjEsInR5IjoiZWwiLCJzIjp7ImEiOjAsImsiOlsxOTQuMTE3LDE5NC4xMTddLCJpeCI6Mn0sInAiOnsiYSI6MCwiayI6WzAsMF0sIml4IjozfSwibm0iOiLmpK3lnIbot6/lvoQgMSIsIm1uIjoiQURCRSBWZWN0b3IgU2hhcGUgLSBFbGxpcHNlIiwiaGQiOmZhbHNlfSx7InR5IjoidHIiLCJwIjp7ImEiOjAsImsiOlstMC40NDEsLTAuOTQxXSwiaXgiOjJ9LCJhIjp7ImEiOjAsImsiOlswLDBdLCJpeCI6MX0sInMiOnsiYSI6MCwiayI6WzEwMCwxMDBdLCJpeCI6M30sInIiOnsiYSI6MCwiayI6MCwiaXgiOjZ9LCJvIjp7ImEiOjAsImsiOjEwMCwiaXgiOjd9LCJzayI6eyJhIjowLCJrIjowLCJpeCI6NH0sInNhIjp7ImEiOjAsImsiOjAsIml4Ijo1fSwibm0iOiLlj5jmjaIifV0sIm5tIjoi5qSt5ZyGIDEiLCJucCI6MiwiY2l4IjoyLCJibSI6MCwiaXgiOjEsIm1uIjoiQURCRSBWZWN0b3IgR3JvdXAiLCJoZCI6ZmFsc2V9LHsidHkiOiJmbCIsImMiOnsiYSI6MCwiayI6WzEsMCwwLDFdLCJpeCI6NH0sIm8iOnsiYSI6MCwiayI6MTAwLCJpeCI6NX0sInIiOjEsImJtIjowLCJubSI6IuWhq+WFhSAxIiwibW4iOiJBREJFIFZlY3RvciBHcmFwaGljIC0gRmlsbCIsImhkIjpmYWxzZX1dLCJpcCI6MCwib3AiOjcyLCJzdCI6MCwiYm0iOjB9XSwibWFya2VycyI6W119",Bg="./assets/bg.2ceddd93.png";CameraControls.install({THREE:THREE$1});const clock=new Clock,w=window.innerWidth,h=window.innerHeight,RACK_LENGTH=35,RACK_WIDTH=30,RACK_HEIGHT=100,RACK_THICK=2,HORIZONTAL_MARGIN=5,PORTRAIT_MARGIN=90,SERVER_HEIGHT=7,SERVER_MARGIN=3,SERVER_COLOR=789516,SERVER_NUMS=13,SERVER_HEIGHT_MARGIN=.4,SERVER_NAME="server",HOLLOW_WIDTH=4;let animates=[],reqID=null,app,rackGroup;const BOX_HOLLOW_TYPE={DK:"DK",DC:"DC"};function initApp(t,e){const i=new Vector3(0,45,0),s=new Scene;(new TextureLoader).load(Bg,(t=>{s.background=t}));const r=new PerspectiveCamera(30,w/h,100,5e3);r.position.set(900,600,900),r.lookAt(i),r.layers.enableAll(),r.layers.toggle(1);const n=new WebGLRenderer({antialias:!0,alpha:!0,precision:"highp"});n.setClearAlpha(0),n.setPixelRatio(window.devicePixelRatio),t.appendChild(n.domElement);let a,c=new CSS2DRenderer;c.domElement.style.position="absolute",c.domElement.style.top="0px",c.domElement.id="rack-label-wrap",t.appendChild(c.domElement),setRendererSize(n,c),t.style.touchAction="none",a=new OrbitControls(r,c.domElement),a.maxPolarAngle=Math.PI/2,a.minPolarAngle=Math.PI/3,a.target=i,a.update();const l=new CameraControls(r,c.domElement);return l.maxPolarAngle=Math.PI/2,l.minPolarAngle=Math.PI/3,l.minDistance=300,l.target=i,l.update(),{camera:r,cameraControls:l,scene:s,renderer:n,labelRenderer:c,controls:a,stats:undefined,gui:undefined}}function createErrorRound(t){let e;window.bodymovin=lottie$1,(new LottieLoader).load(Error$1,(i=>{const s=16001307;i.animation.setSpeed(.5),i.animation.play();const r=new CircleGeometry(RACK_LENGTH+10,110,1,50),n=new MeshStandardMaterial({transparent:!0,opacity:.5,color:s,emissive:s,depthWrite:!1,map:i});e=new Mesh(r,n),r.rotateX(-Math.PI/2),r.translate(0,.15,0),t.add(e)}))}function getPosition(t,e,i){return{x:t,y:e,z:i}}function createBox(t=0,e=0,i=0,s,r){let{x:n=0,y:a=0,z:c=0}=s,l=r||getCommonMat(),o=new BoxGeometry(t,e,i),d=new Mesh(o,l);return d.position.set(n,a,c),d}function isError(t){return 0!==t.status}function createRackTip(t){const e=document.createElement("div");e.className="rack-label "+(isError(t)?"rack-label__error":""),e.textContent=t.name;const i=document.createElement("div");return i.className="rack-label-triangle "+(isError(t)?"rack-label-triangle__error":""),e.appendChild(i),e.style.marginTop="-1em",new CSS2DObject(e)}function getCommonMat(){return new MeshPhysicalMaterial({color:2377082,roughness:1,metalness:0})}function createRack(t){let e=t.used/t.total,i=getColor(e);const s=new Group,r=RACK_LENGTH,n=RACK_WIDTH,a=RACK_HEIGHT;let c=new Group;c.position.set(0,0,0);let l=new Group,o=createBox(r,RACK_THICK,n,getPosition(0,1,0));l.add(o);let d=new MeshBasicMaterial({map:(new TextureLoader).load(Side),color:7376050,roughness:1,metalness:.2}),h=new MeshBasicMaterial({map:(new TextureLoader).load(Back),color:7376050,roughness:1,metalness:.2}),m=new MeshPhysicalMaterial({map:(new TextureLoader).load(Top),roughness:1,metalness:.2,color:9138031,emissive:3487301}),p=createBox(RACK_THICK,a,n,getPosition(r/2-1,a/2+2,0),d),v=createBox(RACK_THICK,a,n,getPosition(-r/2+1,a/2+2,0),d),f=createBox(r-4,a,RACK_THICK,getPosition(0,a/2+2,0-n/2+1),h),u=new Group,y=createBox(r,RACK_THICK,n,getPosition(0,a+3,0)),g=getCommonMat(),_=createBox(r,RACK_THICK,n,getPosition(0,a+5,0),[g,g,m,g,g,g]),C=createRackTip(t);C.position.y+=2,_.add(C);const E=new MeshPhysicalMaterial({color:i}),I=createBox(8,1.5,2,getPosition(0,a+3,n/2+.2),E),T=[];T.push(new Vector3(-r/2,a+5,n/2)),T.push(new Vector3(r/2,a+5,n/2));const x=(new BufferGeometry).setFromPoints(T),S=new LineBasicMaterial({color:2568786}),P=new Line(x,S);return u.add(y,_,I,P),c.add(l,p,v,f,u),s.add(c),createAllServer(e).obj.forEach((t=>s.add(t))),isError(t)&&s.add(createError()),{obj:s}}function createError(){const t=RACK_HEIGHT+7,e=RACK_LENGTH+4,i=RACK_WIDTH+4;let s=new Group,r=new MeshPhysicalMaterial({transparent:!0,opacity:.35,color:16404817}),n=createBox(e,t,i,getPosition(0,t/2,0),r);return createErrorRound(s),s.add(n),s.add(createBoxHollow(.3,e,i,t)),s}function createBoxHollow(t,e,i,s){let r=new Group,n=createCly(t,t,s,getPosition(-e/2,s/2,-i/2)),a=createCly(t,t,s,getPosition(e/2,s/2,-i/2)),c=createCly(t,t,s,getPosition(-e/2,s/2,i/2)),l=createCly(t,t,s,getPosition(e/2,s/2,i/2)),o=createCly(t,t,e,getPosition(0,s,-i/2),null,BOX_HOLLOW_TYPE.DK),d=createCly(t,t,e,getPosition(0,s,i/2),null,BOX_HOLLOW_TYPE.DK),h=createCly(t,t,e,getPosition(0,0,-i/2),null,BOX_HOLLOW_TYPE.DK),m=createCly(t,t,e,getPosition(0,0,i/2),null,BOX_HOLLOW_TYPE.DK),p=createCly(t,t,i,getPosition(-e/2,s,0),null,BOX_HOLLOW_TYPE.DC),v=createCly(t,t,i,getPosition(e/2,s,0),null,BOX_HOLLOW_TYPE.DC),f=createCly(t,t,i,getPosition(-e/2,0,0),null,BOX_HOLLOW_TYPE.DC),u=createCly(t,t,i,getPosition(e/2,0,0),null,BOX_HOLLOW_TYPE.DC);return r.add(n,a,c,l,o,d,h,m,p,v,f,u),r.position.y=1,r}function createCly(t=3,e=3,i=10,s,r,n){let{x:a=0,y:c=0,z:l=0}=s,o=r||new MeshPhysicalMaterial({color:16404817}),d=new CylinderGeometry(t,e,i,48),h=new Mesh(d,o);return h.position.set(a,c,l),n===BOX_HOLLOW_TYPE.DK?h.rotateZ(Math.PI/2):n===BOX_HOLLOW_TYPE.DC&&h.rotateX(Math.PI/2),h}function createServer(t,e){const i=RACK_LENGTH,s=RACK_WIDTH;let r=new BoxGeometry(i-4,SERVER_HEIGHT,s-4),n=new MeshLambertMaterial({color:SERVER_COLOR,emissive:SERVER_COLOR}),a=new Mesh(r,n);a.position.set(0,t,RACK_THICK-SERVER_MARGIN),a.name=SERVER_NAME+e;let c=new PlaneGeometry(i-4,SERVER_HEIGHT),l=new Mesh(c,new MeshBasicMaterial({map:(new TextureLoader).load(Server)}));return l.name=SERVER_NAME+e,l.position.set(0,t,(s-4)/2+.1+2-SERVER_MARGIN),{serverBody:a,serverPanel:l}}function createBulb(t,e){const i=RACK_WIDTH,s=RACK_LENGTH;let r=new PlaneGeometry(2,2);const n=new MeshBasicMaterial({color:65346,side:DoubleSide}),a=new Mesh(r,n);return a.position.set(-s/2+3.5,t,i/2+.2-SERVER_MARGIN),a.name=SERVER_NAME+e,a}function createAllServer(t){const e=[];let i=Math.round(t*SERVER_NUMS);let s=7;for(let r=0;r<SERVER_NUMS;r++){let t=new Group;t.position.set(0,0,0);const{serverBody:n,serverPanel:a}=createServer(s,r);if(r<i){const e=createBulb(s-1.5,r),i=createBulb(s+1.5,r),n=createUsedLight(s);t.add(e,i,n)}s+=SERVER_HEIGHT+SERVER_HEIGHT_MARGIN,t.add(n,a),t.name="serverGroup"+r,e.push(t)}return{obj:e}}function createUsedLight(t){const e=new PlaneGeometry(24,3.5).getAttribute("position"),i=new BufferGeometry,s=e.array;let r=[0,247/255,1],n=[2/255,90/255,180/255];const a=[...r,...n,...r,...n];i.setIndex([1,0,3,0,2,3]),i.setAttribute("position",new Float32BufferAttribute(s,3)),i.setAttribute("normal",new Float32BufferAttribute([0,0,1,0,0,1,0,0,1,0,0,1],3)),i.setAttribute("color",new Float32BufferAttribute(a,3));const c=new MeshPhongMaterial({side:DoubleSide,vertexColors:!0});let l=new Mesh(i,c);return l.position.set(.5,t,RACK_WIDTH/2+.2-SERVER_MARGIN),l}function initLight(){let t=new DirectionalLight(16777215,1.4);t.position.set(0,-80,300),t.castShadow=!0,app.scene.add(t);let e=new DirectionalLight(16777215,2.6);e.position.set(-50,-80,-40),e.castShadow=!0,app.scene.add(e);let i=new DirectionalLight(16777215,2.8);i.position.set(100,180,-20),i.castShadow=!0,app.scene.add(i)}function render$1(){var t,e;null==(t=null==app?void 0:app.controls)||t.update(),null==(e=null==app?void 0:app.stats)||e.update(),null==animates||animates.forEach((t=>null==t?void 0:t()));const i=clock.getDelta();app.cameraControls.update(i),reqID=requestAnimationFrame(render$1),app.renderer.render(app.scene,app.camera),app.labelRenderer.render(app.scene,app.camera)}function setRendererSize(t,e){const i=window.innerWidth,s=window.innerHeight;t.setSize(i,s),e.setSize(i,s)}function createHollow(t,e,i={},s=1){let{x:r=0,y:n=.1,z:a=0}=i,c=new MeshBasicMaterial({color:3845631,transparent:!0,opacity:s}),l=new PlaneGeometry(t,e),o=new Mesh(l,c);return o.position.set(r,n,a),o.rotateX(-Math.PI/2),o}function createRackHollow(t){let e=RACK_WIDTH,i=(RACK_LENGTH+HORIZONTAL_MARGIN)*t+HOLLOW_WIDTH,s=new Group;return[[2,1],[13,.6],[20,.3]].forEach((([t,r])=>{let n=new Group,a=HOLLOW_WIDTH*r;n.add(createHollow(i+t,a,getPosition(0,.1,(e+a+t)/2),r)),n.add(createHollow(i+t,a,getPosition(0,.1,-(e+a+t)/2),r)),n.add(createHollow(a,e+t,getPosition(-(i-a+t)/2,.1,0),r)),n.add(createHollow(a,e+t,getPosition((i-a+t)/2,.1,0),r)),s.add(n)})),s}function getColor(t){let e;return 0===t?e=8556981:t<.5?e=195151:t<.8?e=16768078:t<=1&&(e=16729345),e}function getHorizontal(t){let e;return e=t<=8?t:t<=49?8:10,e}function updateRack(t){rackGroup&&app.scene.remove(rackGroup),rackGroup=new Group;let e=new Group,i=new Group,s=t?t.length:0,r=getHorizontal(s),n=Math.ceil(s/r);for(let c=0;c<n;c++){let s=0;for(s=0;s<r;s++){let i=t[c*r+s];if(!i)break;let n=createRack(i).obj;n.position.x=(RACK_LENGTH+HORIZONTAL_MARGIN)*s,n.position.z=-PORTRAIT_MARGIN*c,e.add(n)}let n=createRackHollow(s||0);n.position.z=-PORTRAIT_MARGIN*c,s<r&&(n.position.x=-((r-s)*RACK_LENGTH+(r-s)*HORIZONTAL_MARGIN)/2),i.add(n)}e.position.x=-(r*RACK_LENGTH+(r-1)*HORIZONTAL_MARGIN)/2+RACK_LENGTH/2;let a=(n-1)*PORTRAIT_MARGIN/2;e.position.z=a,i.position.z=a,e.position.y=-30,i.position.y=-30,rackGroup.add(i,e),app.scene.add(rackGroup),transitionAnimation(t)}async function transitionAnimation(t){t.length<=6?app.cameraControls.setLookAt(416.46884253202467,159.58740687005636,403.56329897301725,1,1,0,!0):app.cameraControls.setLookAt(899.9999999999997,599.9999999999999,899.9999999999998,1,1,0,!0)}function onResize(){app&&(app.camera.aspect=window.innerWidth/window.innerHeight,app.camera.updateProjectionMatrix(),setRendererSize(app.renderer,app.labelRenderer))}function initEvent(){window.addEventListener("resize",onResize)}function initRack({el:t,serverList:e}){return app=initApp(t),initLight(),updateRack(e),render$1(),initEvent(),app}function removeRack(){app&&(rackGroup=null,unMounted(app),app=null,window.removeEventListener("resize",onResize),reqID&&(cancelAnimationFrame(reqID),reqID=null))}const province=[{name:"重庆市",children:[{name:"重庆一区",city:"重庆市",idc:2,host:31,sw:14,health:100,isWarning:!1}]},{name:"安徽省",children:[{name:"安徽（合肥一区）",city:"合肥",idc:3,host:34,sw:17,health:100,isWarning:!1},{name:"临泉政务云",city:"阜阳",idc:0,host:20,sw:16,health:100,isWarning:!1},{name:"安徽（亳州一区）",city:"亳州",idc:1,host:9,sw:12,health:100,isWarning:!1}]},{name:"陕西省",children:[{name:"陕西（西安三区）",city:"西安",idc:2,host:13,sw:7,health:100,isWarning:!1},{name:"陕西（西安二区）",city:"西安",idc:2,host:34,sw:15,health:100,isWarning:!1},{name:"陕西（西安一区）",city:"西安",idc:1,host:18,sw:8,health:100,isWarning:!1}]},{name:"四川省",children:[{name:"天府云（眉山一区）",city:"眉山",idc:0,host:8,sw:7,health:100,isWarning:!1},{name:"四川（绵阳一区）",city:"绵阳",idc:1,host:0,sw:7,health:100,isWarning:!1},{name:"四川（成都一区）",city:"成都",idc:2,host:53,sw:14,health:100,isWarning:!1}]},{name:"湖北省",children:[{name:"湖北（武汉一区）",city:"武汉",idc:2,host:58,sw:14,health:100,isWarning:!1}]},{name:"河南省",children:[{name:"河南（郑州一区）",city:"郑州",idc:2,host:55,sw:15,health:80,isWarning:!1}]},{name:"北京市",children:[{name:"北京长城网",city:"北京市",idc:0,host:36,sw:0,health:100,isWarning:!1},{name:"北京一区",city:"北京市",idc:2,host:294,sw:50,health:100,isWarning:!1},{name:"北龙云海（北京一区）",city:"北京市",idc:0,host:11,sw:7,health:100,isWarning:!1},{name:"湖北（三峡云）",city:"北京市",idc:0,host:8,sw:3,health:100,isWarning:!1},{name:"北京（世纪网源）",city:"北京市",idc:0,host:3,sw:0,health:100,isWarning:!1},{name:"北京国信新网",city:"北京市",idc:0,host:0,sw:0,health:100,isWarning:!1}]},{name:"吉林省",children:[{name:"吉林（长春一区）",city:"长春",idc:2,host:15,sw:15,health:100,isWarning:!1}]},{name:"江西省",children:[{name:"赣企云（南昌一区）",city:"南昌",idc:0,host:8,sw:7,health:100,isWarning:!1},{name:"江西（南昌一区）",city:"南昌",idc:2,host:21,sw:15,health:100,isWarning:!1}]},{name:"山东省",children:[{name:"山东（德州一区）",city:"德州",idc:1,host:8,sw:12,health:100,isWarning:!1},{name:"山东（济南一区）",city:"济南",idc:4,host:36,sw:15,health:100,isWarning:!1},{name:"山东（青岛一区）",city:"青岛",idc:2,host:17,sw:10,health:100,isWarning:!1}]},{name:"甘肃省",children:[{name:"甘肃（兰州一区）",city:"兰州",idc:1,host:22,sw:15,health:100,isWarning:!1}]},{name:"广东省",children:[{name:"广电网络（广州一区）",city:"广州",idc:0,host:9,sw:4,health:100,isWarning:!1},{name:"广东（深圳二区）",city:"深圳",idc:0,host:169,sw:44,health:100,isWarning:!1},{name:"广东（东莞一区）",city:"东莞",idc:2,host:25,sw:12,health:100,isWarning:!1},{name:"广东（深圳一区）",city:"深圳",idc:2,host:42,sw:12,health:100,isWarning:!1},{name:"广东（深圳三区）",city:"深圳",idc:1,host:225,sw:92,health:100,isWarning:!1},{name:"广东（广州二区）",city:"广州",idc:1,host:38,sw:8,health:100,isWarning:!1},{name:"广东（珠海一区）",city:"珠海",idc:1,host:7,sw:5,health:100,isWarning:!1},{name:"广东（汕头一区）",city:"汕头",idc:0,host:8,sw:2,health:100,isWarning:!1},{name:"广东（云峰一区）",city:"广州",idc:1,host:13,sw:6,health:100,isWarning:!1},{name:"广东（广州一区）",city:"广州",idc:2,host:476,sw:139,health:100,isWarning:!1},{name:"政务云（广州一区）",city:"广州",idc:0,host:0,sw:7,health:100,isWarning:!1},{name:"广东（深圳四区）",city:"深圳",idc:1,host:207,sw:53,health:100,isWarning:!1}]},{name:"上海市",children:[{name:"上海一区",city:"上海市",idc:3,host:159,sw:53,health:100,isWarning:!1},{name:"宝信（上海一区）",city:"上海市",idc:0,host:6,sw:16,health:100,isWarning:!1},{name:"上海有孚教育专区",city:"上海市",idc:0,host:9,sw:2,health:100,isWarning:!1}]},{name:"新疆",children:[{name:"新疆（乌鲁木齐一区）",city:"乌鲁木齐",idc:1,host:13,sw:8,health:100,isWarning:!1}]},{name:"广西",children:[{name:"广西（南宁一区）",city:"南宁",idc:2,host:50,sw:15,health:100,isWarning:!1}]},{name:"内蒙古",children:[{name:"内蒙古（呼和浩特一区）",city:"呼和浩特",idc:1,host:19,sw:8,health:100,isWarning:!1},{name:"内蒙古（启正一区）",city:"启正",idc:0,host:13,sw:15,health:100,isWarning:!1}]},{name:"江苏省",children:[{name:"江苏（南京二区）",city:"南京",idc:2,host:15,sw:7,health:100,isWarning:!1},{name:"江苏（凤凰云）",city:"南京",idc:0,host:27,sw:4,health:100,isWarning:!1},{name:"江苏（镇江一区）",city:"镇江",idc:3,host:20,sw:8,health:100,isWarning:!1},{name:"移动（扬州一区）",city:"扬州",idc:0,host:8,sw:0,health:100,isWarning:!1},{name:"江苏（南通一区）",city:"南通",idc:2,host:13,sw:8,health:100,isWarning:!1},{name:"江苏（无锡一区）",city:"无锡",idc:1,host:17,sw:8,health:100,isWarning:!1},{name:"江苏（泰州一区）",city:"泰州",idc:0,host:22,sw:7,health:100,isWarning:!1},{name:"江苏（苏州二区）",city:"苏州",idc:1,host:11,sw:8,health:100,isWarning:!1},{name:"移动（淮安一区）",city:"淮安",idc:0,host:8,sw:8,health:100,isWarning:!1},{name:"江苏（苏州一区）",city:"苏州",idc:1,host:38,sw:10,health:100,isWarning:!1},{name:"江苏（常州一区）",city:"常州",idc:1,host:24,sw:7,health:100,isWarning:!1},{name:"江苏（南京一区）",city:"南京",idc:4,host:78,sw:22,health:100,isWarning:!1}]},{name:"云南省",children:[{name:"云南（昆明一区）",city:"昆明",idc:2,host:28,sw:15,health:100,isWarning:!1},{name:"南天云（昆明一区）",city:"昆明",idc:1,host:12,sw:5,health:100,isWarning:!1}]},{name:"天津市",children:[{name:"天津一区",city:"天津市",idc:3,host:35,sw:15,health:100,isWarning:!1}]},{name:"宁夏",children:[{name:"宁夏（银川一区）",city:"银川",idc:1,host:13,sw:8,health:100,isWarning:!1},{name:"宁夏（石嘴山一区）",city:"石嘴山",idc:0,host:17,sw:3,health:100,isWarning:!1}]},{name:"湖南省",children:[{name:"联通（岳阳一区）",city:"岳阳",idc:0,host:13,sw:0,health:100,isWarning:!1},{name:"湖南（长沙一区）",city:"长沙",idc:2,host:28,sw:14,health:100,isWarning:!1},{name:"移动（株洲一区）",city:"株洲",idc:0,host:15,sw:8,health:100,isWarning:!1},{name:"湖南（移动常德区）",city:"常德",idc:0,host:6,sw:0,health:100,isWarning:!1}]},{name:"海南省",children:[{name:"海南（海口一区）",city:"海口",idc:2,host:16,sw:8,health:100,isWarning:!1}]},{name:"辽宁省",children:[{name:"大连云数据（大连一区）",city:"大连",idc:0,host:13,sw:8,health:100,isWarning:!1},{name:"辽宁（沈阳一区）",city:"沈阳",idc:1,host:12,sw:8,health:100,isWarning:!1},{name:"辽宁（沈阳日报）",city:"沈阳",idc:0,host:4,sw:7,health:100,isWarning:!1}]},{name:"浙江省",children:[{name:"浙江（杭州一区）",city:"杭州",idc:4,host:63,sw:24,health:100,isWarning:!1},{name:"海瑞（浙江一区）",city:"湖州",idc:0,host:0,sw:0,health:100,isWarning:!1},{name:"浙江（杭州二区）",city:"杭州",idc:1,host:5,sw:7,health:100,isWarning:!1},{name:"温州市工业互联网平台",city:"温州",idc:0,host:9,sw:5,health:100,isWarning:!1},{name:"浙江（温州一区）",city:"温州",idc:1,host:9,sw:10,health:100,isWarning:!1},{name:"浙江（宁波一区）",city:"宁波",idc:1,host:8,sw:5,health:100,isWarning:!1}]},{name:"福建省",children:[{name:"福建（福州一区）",city:"福州",idc:2,host:36,sw:15,health:100,isWarning:!1},{name:"福建（厦门一区）",city:"厦门",idc:1,host:97,sw:29,health:100,isWarning:!1}]},{name:"河北省",children:[{name:"河北（石家庄一区）",city:"石家庄",idc:4,host:51,sw:18,health:100,isWarning:!1},{name:"国信政务云专属云（廊坊一区）",city:"廊坊",idc:0,host:16,sw:8,health:100,isWarning:!1},{name:"河北（保定电信）",city:"保定",idc:0,host:10,sw:8,health:100,isWarning:!1},{name:"鹿泉数字经济赋能平台",city:"石家庄",idc:0,host:12,sw:8,health:100,isWarning:!1}]},{name:"贵州省",children:[{name:"贵州（贵阳一区）",city:"贵阳",idc:2,host:21,sw:15,health:100,isWarning:!1}]},{name:"山西省",children:[{name:"山西（太原一区）",city:"太原",idc:1,host:39,sw:15,health:100,isWarning:!1},{name:"山西（太原二区）",city:"太原",idc:1,host:9,sw:0,health:100,isWarning:!1},{name:"山西（长治一区）",city:"长治",idc:1,host:9,sw:5,health:100,isWarning:!1}]},{name:"黑龙江省",children:[{name:"黑龙江（哈尔滨一区）",city:"哈尔滨",idc:1,host:10,sw:8,health:100,isWarning:!1}]}];var __vue2_script=defineComponent({name:"ChinaFullMap",props:{idcHealthProvince:{type:Array,default:()=>province}},setup(t){const e=ref();let i;function s(){var e,i;const s=[];(null==t?void 0:t.idcHealthProvince)&&(null==(i=null==(e=null==t?void 0:t.idcHealthProvince)?void 0:e.forEach)||i.call(e,(t=>{var e,i,r;const{name:n,children:a}=t,c=cityGeo.find((t=>t.name.indexOf(n.slice(0,2))>-1));for(let l=0;l<a.length;l++){const t=a[l];if(t.city){const s=null==(e=null==c?void 0:c.districts)?void 0:e.find((e=>e.name.indexOf(t.city.slice(0,2))>-1));t.center=null!=(r=null==(i=null==s?void 0:s.districts[l])?void 0:i.center)?r:null==c?void 0:c.center}t.province=null==c?void 0:c.name,s.push(t)}})),n(s))}let r=null;function n(t){a(),nextTick((()=>{i=new ChinaMap(e.value,(async t=>{bus.trigger(BUS_EVENT.CLICK_IDC,t),null==i||i.clearAutoCheck();const e=[];for(;(null==e?void 0:e.length)<4;)null==e||e.push(...Array.from({length:30}).fill(null).map(((t,e)=>({name:"test"+e,used:7,total:13,status:e%2}))));c(e)})),i.init(t)}))}function a(){i&&(i.unMount(),i=null)}function c(t){a(),r&&(removeRack(),r=null),nextTick((()=>{r=initRack({el:e.value,serverList:t})}))}return onMounted((()=>{s()})),onBeforeUnmount((()=>{i&&i.unMount()})),{chinaMapInit:n,updateMap:s,createRack:c,nationMapRef:e}}}),render=function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"nation-map-wrap"},[e("div",{ref:"nationMapRef"})])},staticRenderFns=[];const __cssModules={};var __component__=normalizeComponent(__vue2_script,render,staticRenderFns,!1,__vue2_injectStyles,null,null,null);function __vue2_injectStyles(t){for(let e in __cssModules)this[e]=__cssModules[e]}var index=function(){return __component__.exports}();export{index as default};
