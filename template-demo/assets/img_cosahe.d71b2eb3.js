import{j as e,l as t,B as n,F as i,m as r,S as o,c as a,d as s,e as l,W as d}from"./three.module.18d565c0.js";import{V as c,R as u,C as m}from"./vendor.63663422.js";import{j as h,D as p,H as v}from"./three_geometry.71b4f52c.js";import{s as w}from"./4d.47c83f64.js";import{n as f}from"./index.553d5c6b.js";var g=Object.defineProperty,_=Object.getOwnPropertyDescriptor,x=(e,t,n,i)=>{for(var r,o=i>1?void 0:i?_(t,n):t,a=e.length-1;a>=0;a--)(r=e[a])&&(o=(i?r(t,n,o):r(o))||o);return i&&o&&g(t,n,o),o};let C=class extends c{constructor(){super(...arguments),this.pre=new Date}mounted(){this.init([this.center=this.initCenter()]),this.animate()}getHedronPoint(o,a=30,s=0){const l=h(o,a,s);this.pointMaterial=new e({uniforms:{u_time:{value:.3},u_amplitude:{value:17},u_frequency:{value:3},alphaTest:{value:1},pointTexture:{value:(new t).load(p)}},vertexShader:w+"\n                precision highp float;\n                varying vec3 vNormal;\n                attribute float size;\n\n\n                uniform float u_time;\n                uniform float u_amplitude;\n                uniform float u_frequency;\n\n                void main () {\n                  vNormal = normalMatrix * normalize(normal);\n                    gl_PointSize = size;\n\n                  float distortion = snoise(vec4(normal * u_frequency, u_time)) * u_amplitude;\n                  vec3 newPosition = position + (normal * distortion);\n\n                  gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n                }\n        ",fragmentShader:"\n                varying vec3 vNormal;\n\n                uniform sampler2D pointTexture;\n                uniform float alphaTest;\n\n                void main(void) {\n                    vec3 viewNv  = normalize(vNormal);\n                    vec3 nvColor = viewNv * 0.5 + 0.5;\n                    gl_FragColor  = vec4(nvColor, 1.0);\n\n                    gl_FragColor = gl_FragColor * texture2D( pointTexture, gl_PointCoord );\n                    if ( gl_FragColor.a < alphaTest ) discard;\n                }\n      ",transparent:!0});const d=l.getAttribute("position"),c=[];for(let e=0,t=d.count;e<t;e++)c[e]=5;const u=new n;return u.setAttribute("position",d),u.setAttribute("size",new i(c,1)),u.setAttribute("normal",l.getAttribute("normal")),new r(u,this.pointMaterial)}initCenter(){return this.getHedronPoint(v.Icosahedron,150,60)}init(e){let t=window.innerWidth/window.innerHeight,n=this.container;this.scene=new o,e.forEach((e=>{"function"==typeof e?this.scene.add(e()):this.scene.add(e)})),this.camera=new a(60,t,1,1e4),this.camera.position.set(600,0,1e3),this.camera.lookAt(this.scene.position);let i=new s(16777215);this.scene.add(i);const r=new l(1e3);this.scene.add(r),this.renderer=new d({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setClearColor(329011,1),n.appendChild(this.renderer.domElement),n.style.touchAction="none",window.addEventListener("resize",this.onWindowResize)}onWindowResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}animate(){requestAnimationFrame(this.animate);let e=new Date;this.pointMaterial.uniforms.u_time.value+=5e-4*(Number(e)-Number(this.pre)),this.pre=e,this.renderer.render(this.scene,this.camera)}};x([u()],C.prototype,"container",2),C=x([m],C);const b={};var P=f(C,(function(){var e=this.$createElement;return(this._self._c||e)("div",{ref:"container",staticClass:"index"})}),[],!1,j,null,null,null);function j(e){for(let t in b)this[t]=b[t]}var y=function(){return P.exports}();export{y as default};
